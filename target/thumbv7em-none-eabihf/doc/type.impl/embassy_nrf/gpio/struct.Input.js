(function() {
    var type_impls = Object.fromEntries([["microbit_bsp",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ErrorType-for-Input%3C'd,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/embassy_nrf/gpio.rs.html#603\">Source</a><a href=\"#impl-ErrorType-for-Input%3C'd,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'d, T&gt; <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a> for <a class=\"struct\" href=\"embassy_nrf/gpio/struct.Input.html\" title=\"struct embassy_nrf::gpio::Input\">Input</a>&lt;'d, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"embassy_nrf/gpio/trait.Pin.html\" title=\"trait embassy_nrf::gpio::Pin\">Pin</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/embassy_nrf/gpio.rs.html#604\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>Error type</div></details></div></details>","ErrorType","microbit_bsp::board::Button"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Input%3C'd,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/embassy_nrf/gpio.rs.html#43\">Source</a><a href=\"#impl-Input%3C'd,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'d, T&gt; <a class=\"struct\" href=\"embassy_nrf/gpio/struct.Input.html\" title=\"struct embassy_nrf::gpio::Input\">Input</a>&lt;'d, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"embassy_nrf/gpio/trait.Pin.html\" title=\"trait embassy_nrf::gpio::Pin\">Pin</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/embassy_nrf/gpio.rs.html#46\">Source</a><h4 class=\"code-header\">pub fn <a href=\"embassy_nrf/gpio/struct.Input.html#tymethod.new\" class=\"fn\">new</a>(pin: impl <a class=\"trait\" href=\"embassy_hal_internal/peripheral/trait.Peripheral.html\" title=\"trait embassy_hal_internal::peripheral::Peripheral\">Peripheral</a>&lt;P = T&gt; + 'd, pull: <a class=\"enum\" href=\"embassy_nrf/gpio/enum.Pull.html\" title=\"enum embassy_nrf::gpio::Pull\">Pull</a>) -&gt; <a class=\"struct\" href=\"embassy_nrf/gpio/struct.Input.html\" title=\"struct embassy_nrf::gpio::Input\">Input</a>&lt;'d, T&gt;</h4></section></summary><div class=\"docblock\"><p>Create GPIO input driver for a <a href=\"embassy_nrf/gpio/trait.Pin.html\" title=\"trait embassy_nrf::gpio::Pin\">Pin</a> with the provided <a href=\"embassy_nrf/gpio/enum.Pull.html\" title=\"enum embassy_nrf::gpio::Pull\">Pull</a> configuration.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_high\" class=\"method\"><a class=\"src rightside\" href=\"src/embassy_nrf/gpio.rs.html#55\">Source</a><h4 class=\"code-header\">pub fn <a href=\"embassy_nrf/gpio/struct.Input.html#tymethod.is_high\" class=\"fn\">is_high</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Get whether the pin input level is high.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_low\" class=\"method\"><a class=\"src rightside\" href=\"src/embassy_nrf/gpio.rs.html#61\">Source</a><h4 class=\"code-header\">pub fn <a href=\"embassy_nrf/gpio/struct.Input.html#tymethod.is_low\" class=\"fn\">is_low</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Get whether the pin input level is low.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_level\" class=\"method\"><a class=\"src rightside\" href=\"src/embassy_nrf/gpio.rs.html#67\">Source</a><h4 class=\"code-header\">pub fn <a href=\"embassy_nrf/gpio/struct.Input.html#tymethod.get_level\" class=\"fn\">get_level</a>(&amp;self) -&gt; <a class=\"enum\" href=\"embassy_nrf/gpio/enum.Level.html\" title=\"enum embassy_nrf::gpio::Level\">Level</a></h4></section></summary><div class=\"docblock\"><p>Get the pin input level.</p>\n</div></details></div></details>",0,"microbit_bsp::board::Button"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Input%3C'd,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/embassy_nrf/gpiote.rs.html#351\">Source</a><a href=\"#impl-Input%3C'd,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'d, T&gt; <a class=\"struct\" href=\"embassy_nrf/gpio/struct.Input.html\" title=\"struct embassy_nrf::gpio::Input\">Input</a>&lt;'d, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"embassy_nrf/gpio/trait.Pin.html\" title=\"trait embassy_nrf::gpio::Pin\">Pin</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wait_for_high\" class=\"method\"><a class=\"src rightside\" href=\"src/embassy_nrf/gpiote.rs.html#353\">Source</a><h4 class=\"code-header\">pub async fn <a href=\"embassy_nrf/gpio/struct.Input.html#tymethod.wait_for_high\" class=\"fn\">wait_for_high</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Wait until the pin is high. If it is already high, return immediately.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wait_for_low\" class=\"method\"><a class=\"src rightside\" href=\"src/embassy_nrf/gpiote.rs.html#358\">Source</a><h4 class=\"code-header\">pub async fn <a href=\"embassy_nrf/gpio/struct.Input.html#tymethod.wait_for_low\" class=\"fn\">wait_for_low</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Wait until the pin is low. If it is already low, return immediately.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wait_for_rising_edge\" class=\"method\"><a class=\"src rightside\" href=\"src/embassy_nrf/gpiote.rs.html#363\">Source</a><h4 class=\"code-header\">pub async fn <a href=\"embassy_nrf/gpio/struct.Input.html#tymethod.wait_for_rising_edge\" class=\"fn\">wait_for_rising_edge</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Wait for the pin to undergo a transition from low to high.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wait_for_falling_edge\" class=\"method\"><a class=\"src rightside\" href=\"src/embassy_nrf/gpiote.rs.html#368\">Source</a><h4 class=\"code-header\">pub async fn <a href=\"embassy_nrf/gpio/struct.Input.html#tymethod.wait_for_falling_edge\" class=\"fn\">wait_for_falling_edge</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Wait for the pin to undergo a transition from high to low.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wait_for_any_edge\" class=\"method\"><a class=\"src rightside\" href=\"src/embassy_nrf/gpiote.rs.html#373\">Source</a><h4 class=\"code-header\">pub async fn <a href=\"embassy_nrf/gpio/struct.Input.html#tymethod.wait_for_any_edge\" class=\"fn\">wait_for_any_edge</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Wait for the pin to undergo any transition, i.e low to high OR high to low.</p>\n</div></details></div></details>",0,"microbit_bsp::board::Button"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-InputPin-for-Input%3C'd,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/embassy_nrf/gpio.rs.html#513\">Source</a><a href=\"#impl-InputPin-for-Input%3C'd,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'d, T&gt; <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.InputPin.html\" title=\"trait embedded_hal::digital::v2::InputPin\">InputPin</a> for <a class=\"struct\" href=\"embassy_nrf/gpio/struct.Input.html\" title=\"struct embassy_nrf::gpio::Input\">Input</a>&lt;'d, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"embassy_nrf/gpio/trait.Pin.html\" title=\"trait embassy_nrf::gpio::Pin\">Pin</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/embassy_nrf/gpio.rs.html#514\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/digital/v2/trait.InputPin.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_high\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embassy_nrf/gpio.rs.html#516\">Source</a><a href=\"#method.is_high\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/v2/trait.InputPin.html#tymethod.is_high\" class=\"fn\">is_high</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"embassy_nrf/gpio/struct.Input.html\" title=\"struct embassy_nrf::gpio::Input\">Input</a>&lt;'d, T&gt; as <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.InputPin.html\" title=\"trait embedded_hal::digital::v2::InputPin\">InputPin</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/v2/trait.InputPin.html#associatedtype.Error\" title=\"type embedded_hal::digital::v2::InputPin::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the input pin high?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_low\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embassy_nrf/gpio.rs.html#520\">Source</a><a href=\"#method.is_low\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/v2/trait.InputPin.html#tymethod.is_low\" class=\"fn\">is_low</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"embassy_nrf/gpio/struct.Input.html\" title=\"struct embassy_nrf::gpio::Input\">Input</a>&lt;'d, T&gt; as <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.InputPin.html\" title=\"trait embedded_hal::digital::v2::InputPin\">InputPin</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/v2/trait.InputPin.html#associatedtype.Error\" title=\"type embedded_hal::digital::v2::InputPin::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the input pin low?</div></details></div></details>","InputPin","microbit_bsp::board::Button"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-InputPin-for-Input%3C'd,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/embassy_nrf/gpio.rs.html#607\">Source</a><a href=\"#impl-InputPin-for-Input%3C'd,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'d, T&gt; <a class=\"trait\" href=\"embedded_hal/digital/trait.InputPin.html\" title=\"trait embedded_hal::digital::InputPin\">InputPin</a> for <a class=\"struct\" href=\"embassy_nrf/gpio/struct.Input.html\" title=\"struct embassy_nrf::gpio::Input\">Input</a>&lt;'d, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"embassy_nrf/gpio/trait.Pin.html\" title=\"trait embassy_nrf::gpio::Pin\">Pin</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_high\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embassy_nrf/gpio.rs.html#608\">Source</a><a href=\"#method.is_high\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.InputPin.html#tymethod.is_high\" class=\"fn\">is_high</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"embassy_nrf/gpio/struct.Input.html\" title=\"struct embassy_nrf::gpio::Input\">Input</a>&lt;'d, T&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the input pin high?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_low\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embassy_nrf/gpio.rs.html#612\">Source</a><a href=\"#method.is_low\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.InputPin.html#tymethod.is_low\" class=\"fn\">is_low</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"embassy_nrf/gpio/struct.Input.html\" title=\"struct embassy_nrf::gpio::Input\">Input</a>&lt;'d, T&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the input pin low?</div></details></div></details>","InputPin","microbit_bsp::board::Button"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Wait-for-Input%3C'd,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/embassy_nrf/gpiote.rs.html#507\">Source</a><a href=\"#impl-Wait-for-Input%3C'd,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'d, T&gt; <a class=\"trait\" href=\"embedded_hal_async/digital/trait.Wait.html\" title=\"trait embedded_hal_async::digital::Wait\">Wait</a> for <a class=\"struct\" href=\"embassy_nrf/gpio/struct.Input.html\" title=\"struct embassy_nrf::gpio::Input\">Input</a>&lt;'d, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"embassy_nrf/gpio/trait.Pin.html\" title=\"trait embassy_nrf::gpio::Pin\">Pin</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wait_for_high\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embassy_nrf/gpiote.rs.html#508\">Source</a><a href=\"#method.wait_for_high\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"embedded_hal_async/digital/trait.Wait.html#tymethod.wait_for_high\" class=\"fn\">wait_for_high</a>(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"embassy_nrf/gpio/struct.Input.html\" title=\"struct embassy_nrf::gpio::Input\">Input</a>&lt;'d, T&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Wait until the pin is high. If it is already high, return immediately. <a href=\"embedded_hal_async/digital/trait.Wait.html#tymethod.wait_for_high\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wait_for_low\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embassy_nrf/gpiote.rs.html#512\">Source</a><a href=\"#method.wait_for_low\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"embedded_hal_async/digital/trait.Wait.html#tymethod.wait_for_low\" class=\"fn\">wait_for_low</a>(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"embassy_nrf/gpio/struct.Input.html\" title=\"struct embassy_nrf::gpio::Input\">Input</a>&lt;'d, T&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Wait until the pin is low. If it is already low, return immediately. <a href=\"embedded_hal_async/digital/trait.Wait.html#tymethod.wait_for_low\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wait_for_rising_edge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embassy_nrf/gpiote.rs.html#516\">Source</a><a href=\"#method.wait_for_rising_edge\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"embedded_hal_async/digital/trait.Wait.html#tymethod.wait_for_rising_edge\" class=\"fn\">wait_for_rising_edge</a>(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"embassy_nrf/gpio/struct.Input.html\" title=\"struct embassy_nrf::gpio::Input\">Input</a>&lt;'d, T&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Wait for the pin to undergo a transition from low to high. <a href=\"embedded_hal_async/digital/trait.Wait.html#tymethod.wait_for_rising_edge\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wait_for_falling_edge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embassy_nrf/gpiote.rs.html#520\">Source</a><a href=\"#method.wait_for_falling_edge\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"embedded_hal_async/digital/trait.Wait.html#tymethod.wait_for_falling_edge\" class=\"fn\">wait_for_falling_edge</a>(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"embassy_nrf/gpio/struct.Input.html\" title=\"struct embassy_nrf::gpio::Input\">Input</a>&lt;'d, T&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Wait for the pin to undergo a transition from high to low. <a href=\"embedded_hal_async/digital/trait.Wait.html#tymethod.wait_for_falling_edge\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wait_for_any_edge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embassy_nrf/gpiote.rs.html#524\">Source</a><a href=\"#method.wait_for_any_edge\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"embedded_hal_async/digital/trait.Wait.html#tymethod.wait_for_any_edge\" class=\"fn\">wait_for_any_edge</a>(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"embassy_nrf/gpio/struct.Input.html\" title=\"struct embassy_nrf::gpio::Input\">Input</a>&lt;'d, T&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Wait for the pin to undergo any transition, i.e low to high OR high to low.</div></details></div></details>","Wait","microbit_bsp::board::Button"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[22345]}