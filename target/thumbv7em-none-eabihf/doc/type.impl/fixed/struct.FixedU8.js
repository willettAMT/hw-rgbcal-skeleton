(function() {
    var type_impls = Object.fromEntries([["fixed",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26FixedU8%3CFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Add%3C%26FixedU8%3CFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&FixedU8<Frac>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Add-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3C%26FixedU8%3CFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-AddAssign%3C%26FixedU8%3CFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;&amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<&FixedU8<Frac>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-AddAssign-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Binary-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/display.rs.html#777\">Source</a><a href=\"#impl-Binary-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/display.rs.html#777\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/fmt/trait.Binary.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.85.1/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">FmtResult</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.85.1/core/fmt/trait.Binary.html#tymethod.fmt\">Read more</a></div></details></div></details>","Binary","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3C%26FixedU8%3CFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-BitAnd%3C%26FixedU8%3CFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<&FixedU8<Frac>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-BitAnd-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26FixedU8%3CFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-BitAndAssign%3C%26FixedU8%3CFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;&amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&FixedU8<Frac>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-BitAndAssign-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3C%26FixedU8%3CFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-BitOr%3C%26FixedU8%3CFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;&amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<&FixedU8<Frac>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-BitOr-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26FixedU8%3CFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-BitOrAssign%3C%26FixedU8%3CFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&FixedU8<Frac>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-BitOrAssign-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3C%26FixedU8%3CFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-BitXor%3C%26FixedU8%3CFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;&amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<&FixedU8<Frac>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-BitXor-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26FixedU8%3CFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-BitXorAssign%3C%26FixedU8%3CFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;&amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&FixedU8<Frac>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-BitXorAssign-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CF128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3CF128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"fixed/struct.F128.html\" title=\"struct fixed::F128\">F128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.F128.html\" title=\"struct fixed::F128\">F128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<F128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CF128Bits%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3CF128Bits%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"fixed/struct.F128Bits.html\" title=\"struct fixed::F128Bits\">F128Bits</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.F128Bits.html\" title=\"struct fixed::F128Bits\">F128Bits</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<F128Bits>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedI128%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3CFixedI128%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>&gt; <a class=\"trait\" href=\"az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedI128<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedI16%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3CFixedI16%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>&gt; <a class=\"trait\" href=\"az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedI16<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedI32%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3CFixedI32%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>&gt; <a class=\"trait\" href=\"az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedI32<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedI64%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3CFixedI64%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>&gt; <a class=\"trait\" href=\"az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedI64<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedI8%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3CFixedI8%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedI8<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedU128%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3CFixedU128%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>&gt; <a class=\"trait\" href=\"az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedU128<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedU16%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3CFixedU16%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>&gt; <a class=\"trait\" href=\"az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedU16<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedU32%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3CFixedU32%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>&gt; <a class=\"trait\" href=\"az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedU32<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedU64%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3CFixedU64%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>&gt; <a class=\"trait\" href=\"az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedU64<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedU8%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3CFixedU8%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedU8<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cbf16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3Cbf16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"half/bfloat/struct.bf16.html\" title=\"struct half::bfloat::bf16\">bf16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"half/bfloat/struct.bf16.html\" title=\"struct half::bfloat::bf16\">half_bf16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<bf16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cf16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3Cf16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"half/binary16/struct.f16.html\" title=\"struct half::binary16::f16\">f16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"half/binary16/struct.f16.html\" title=\"struct half::binary16::f16\">half_f16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<f16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cf32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3Cf32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f32.html\">f32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<f32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cf64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3Cf64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f64.html\">f64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<f64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Ci128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3Ci128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<i128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Ci16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3Ci16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<i16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Ci32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3Ci32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<i32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Ci64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3Ci64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<i64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Ci8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3Ci8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<i8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cisize%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3Cisize%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<isize>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cu128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3Cu128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<u128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cu16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3Cu16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<u16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cu32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3Cu32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<u32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cu64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3Cu64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<u64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<u8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cusize%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3Cusize%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<usize>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CF128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3CF128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.F128.html\" title=\"struct fixed::F128\">F128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.F128.html\" title=\"struct fixed::F128\">F128</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<F128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CF128Bits%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3CF128Bits%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.F128Bits.html\" title=\"struct fixed::F128Bits\">F128Bits</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.F128Bits.html\" title=\"struct fixed::F128Bits\">F128Bits</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<F128Bits>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedI128%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3CFixedI128%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>&gt; <a class=\"trait\" href=\"az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;FracDst&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedI128<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedI16%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3CFixedI16%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>&gt; <a class=\"trait\" href=\"az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;FracDst&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedI16<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedI32%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3CFixedI32%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>&gt; <a class=\"trait\" href=\"az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;FracDst&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedI32<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedI64%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3CFixedI64%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>&gt; <a class=\"trait\" href=\"az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;FracDst&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedI64<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedI8%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3CFixedI8%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;FracDst&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedI8<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedU128%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3CFixedU128%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>&gt; <a class=\"trait\" href=\"az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;FracDst&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedU128<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedU16%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3CFixedU16%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>&gt; <a class=\"trait\" href=\"az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;FracDst&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedU16<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedU32%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3CFixedU32%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>&gt; <a class=\"trait\" href=\"az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;FracDst&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedU32<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedU64%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3CFixedU64%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>&gt; <a class=\"trait\" href=\"az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;FracDst&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedU64<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedU8%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3CFixedU8%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracDst&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedU8<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cbf16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3Cbf16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"half/bfloat/struct.bf16.html\" title=\"struct half::bfloat::bf16\">bf16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"half/bfloat/struct.bf16.html\" title=\"struct half::bfloat::bf16\">half_bf16</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<bf16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cf16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3Cf16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"half/binary16/struct.f16.html\" title=\"struct half::binary16::f16\">f16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"half/binary16/struct.f16.html\" title=\"struct half::binary16::f16\">half_f16</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<f16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cf32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3Cf32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f32.html\">f32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f32.html\">f32</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<f32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cf64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3Cf64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f64.html\">f64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<f64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Ci128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3Ci128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<i128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Ci16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3Ci16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<i16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Ci32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3Ci32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<i32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Ci64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3Ci64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<i64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Ci8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3Ci8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<i8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cisize%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3Cisize%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<isize>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cu128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3Cu128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<u128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cu16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3Cu16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<u16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cu32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3Cu32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<u32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cu64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3Cu64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<u64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<u8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cusize%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3Cusize%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<usize>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><a href=\"#impl-Clone-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.85.1/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.85.1/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Contiguous-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/impl_bytemuck.rs.html#62\">Source</a><a href=\"#impl-Contiguous-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: 'static&gt; <a class=\"trait\" href=\"bytemuck/contiguous/trait.Contiguous.html\" title=\"trait bytemuck::contiguous::Contiguous\">Contiguous</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_VALUE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/fixed/impl_bytemuck.rs.html#62\">Source</a><a href=\"#associatedconstant.MAX_VALUE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"bytemuck/contiguous/trait.Contiguous.html#associatedconstant.MAX_VALUE\" class=\"constant\">MAX_VALUE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a> = 255u8</h4></section></summary><div class='docblock'>The upper <em>inclusive</em> bound for valid instances of this type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN_VALUE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/fixed/impl_bytemuck.rs.html#62\">Source</a><a href=\"#associatedconstant.MIN_VALUE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"bytemuck/contiguous/trait.Contiguous.html#associatedconstant.MIN_VALUE\" class=\"constant\">MIN_VALUE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a> = 0u8</h4></section></summary><div class='docblock'>The lower <em>inclusive</em> bound for valid instances of this type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Int\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/impl_bytemuck.rs.html#62\">Source</a><a href=\"#associatedtype.Int\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bytemuck/contiguous/trait.Contiguous.html#associatedtype.Int\" class=\"associatedtype\">Int</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The primitive integer type with an identical representation to this\ntype. <a href=\"bytemuck/contiguous/trait.Contiguous.html#associatedtype.Int\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_integer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytemuck/contiguous.rs.html#122\">Source</a><a href=\"#method.from_integer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytemuck/contiguous/trait.Contiguous.html#method.from_integer\" class=\"fn\">from_integer</a>(value: Self::<a class=\"associatedtype\" href=\"bytemuck/contiguous/trait.Contiguous.html#associatedtype.Int\" title=\"type bytemuck::contiguous::Contiguous::Int\">Int</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>If <code>value</code> is within the range for valid instances of this type,\nreturns <code>Some(converted_value)</code>, otherwise, returns <code>None</code>. <a href=\"bytemuck/contiguous/trait.Contiguous.html#method.from_integer\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_integer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytemuck/contiguous.rs.html#158\">Source</a><a href=\"#method.into_integer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytemuck/contiguous/trait.Contiguous.html#method.into_integer\" class=\"fn\">into_integer</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"bytemuck/contiguous/trait.Contiguous.html#associatedtype.Int\" title=\"type bytemuck::contiguous::Contiguous::Int\">Int</a></h4></section></summary><div class='docblock'>Perform the conversion from <code>C</code> into the underlying integral type. This\nmostly exists otherwise generic code would need unsafe for the <code>value as integer</code> <a href=\"bytemuck/contiguous/trait.Contiguous.html#method.into_integer\">Read more</a></div></details></div></details>","Contiguous","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/display.rs.html#777\">Source</a><a href=\"#impl-Debug-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/display.rs.html#777\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.85.1/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">FmtResult</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.85.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><a href=\"#impl-Default-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.85.1/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/display.rs.html#777\">Source</a><a href=\"#impl-Display-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/display.rs.html#777\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.85.1/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">FmtResult</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.85.1/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26FixedU8%3CFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Div%3C%26FixedU8%3CFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&FixedU8<Frac>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26NonZero%3Cu8%3E%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Div%3C%26NonZero%3Cu8%3E%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.1/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.1/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&NonZero<u8>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26u8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Div%3C%26u8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&u8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CNonZero%3Cu8%3E%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Div%3CNonZero%3Cu8%3E%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.1/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.1/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<NonZero<u8>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Div%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<u8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Div-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3C%26FixedU8%3CFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-DivAssign%3C%26FixedU8%3CFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;&amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<&FixedU8<Frac>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3C%26NonZero%3Cu8%3E%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-DivAssign%3C%26NonZero%3Cu8%3E%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;&amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.1/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.1/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<&NonZero<u8>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3C%26u8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-DivAssign%3C%26u8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<&u8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CNonZero%3Cu8%3E%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-DivAssign%3CNonZero%3Cu8%3E%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.1/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.1/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<NonZero<u8>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-DivAssign%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<u8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-DivAssign-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Fixed-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#impl-Fixed-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ZERO\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#associatedconstant.ZERO\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"fixed/traits/trait.Fixed.html#associatedconstant.ZERO\" class=\"constant\">ZERO</a>: Self = Self::ZERO</h4></section></summary><div class='docblock'>Zero. <a href=\"fixed/traits/trait.Fixed.html#associatedconstant.ZERO\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.TRY_ONE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#associatedconstant.TRY_ONE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"fixed/traits/trait.Fixed.html#associatedconstant.TRY_ONE\" class=\"constant\">TRY_ONE</a>: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt; = Self::TRY_ONE</h4></section></summary><div class='docblock'>One if the fixed-point number can represent it, otherwise <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.DELTA\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#associatedconstant.DELTA\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"fixed/traits/trait.Fixed.html#associatedconstant.DELTA\" class=\"constant\">DELTA</a>: Self = Self::DELTA</h4></section></summary><div class='docblock'>The difference between any two successive representable numbers, <i>Δ</i>. <a href=\"fixed/traits/trait.Fixed.html#associatedconstant.DELTA\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#associatedconstant.MIN\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"fixed/traits/trait.Fixed.html#associatedconstant.MIN\" class=\"constant\">MIN</a>: Self = Self::MIN</h4></section></summary><div class='docblock'>The smallest value that can be represented. <a href=\"fixed/traits/trait.Fixed.html#associatedconstant.MIN\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#associatedconstant.MAX\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"fixed/traits/trait.Fixed.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: Self = Self::MAX</h4></section></summary><div class='docblock'>The largest value that can be represented. <a href=\"fixed/traits/trait.Fixed.html#associatedconstant.MAX\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.IS_SIGNED\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#associatedconstant.IS_SIGNED\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"fixed/traits/trait.Fixed.html#associatedconstant.IS_SIGNED\" class=\"constant\">IS_SIGNED</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a> = false</h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>true</code></a> if the type is signed. <a href=\"fixed/traits/trait.Fixed.html#associatedconstant.IS_SIGNED\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.INT_NBITS\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#associatedconstant.INT_NBITS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"fixed/traits/trait.Fixed.html#associatedconstant.INT_NBITS\" class=\"constant\">INT_NBITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a> = Self::INT_NBITS</h4></section></summary><div class='docblock'>The number of integer bits. <a href=\"fixed/traits/trait.Fixed.html#associatedconstant.INT_NBITS\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.FRAC_NBITS\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#associatedconstant.FRAC_NBITS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"fixed/traits/trait.Fixed.html#associatedconstant.FRAC_NBITS\" class=\"constant\">FRAC_NBITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a> = Self::FRAC_NBITS</h4></section></summary><div class='docblock'>The number of fractional bits. <a href=\"fixed/traits/trait.Fixed.html#associatedconstant.FRAC_NBITS\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Bits\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#associatedtype.Bits\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"fixed/traits/trait.Fixed.html#associatedtype.Bits\" class=\"associatedtype\">Bits</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The primitive integer underlying type. <a href=\"fixed/traits/trait.Fixed.html#associatedtype.Bits\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.NonZeroBits\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#associatedtype.NonZeroBits\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"fixed/traits/trait.Fixed.html#associatedtype.NonZeroBits\" class=\"associatedtype\">NonZeroBits</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.1/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>The non-zero wrapped version of <a href=\"fixed/traits/trait.Fixed.html#associatedtype.Bits\" title=\"associated type fixed::traits::Fixed::Bits\"><code>Bits</code></a>. <a href=\"fixed/traits/trait.Fixed.html#associatedtype.NonZeroBits\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Bytes\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#associatedtype.Bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"fixed/traits/trait.Fixed.html#associatedtype.Bytes\" class=\"associatedtype\">Bytes</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.array.html\">1</a>]</h4></section></summary><div class='docblock'>A byte array with the same size as the type. <a href=\"fixed/traits/trait.Fixed.html#associatedtype.Bytes\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Frac\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#associatedtype.Frac\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"fixed/traits/trait.Fixed.html#associatedtype.Frac\" class=\"associatedtype\">Frac</a> = Frac</h4></section></summary><div class='docblock'>The number of fractional bits as a compile-time <a href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\"><code>Unsigned</code></a> as provided\nby the <a href=\"https://crates.io/crates/typenum\"><em>typenum</em> crate</a>. <a href=\"fixed/traits/trait.Fixed.html#associatedtype.Frac\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Signed\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#associatedtype.Signed\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"fixed/traits/trait.Fixed.html#associatedtype.Signed\" class=\"associatedtype\">Signed</a> = <a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>A signed fixed-point number type with the same number of integer and\nfractional bits as <code>Self</code>. <a href=\"fixed/traits/trait.Fixed.html#associatedtype.Signed\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Unsigned\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#associatedtype.Unsigned\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"fixed/traits/trait.Fixed.html#associatedtype.Unsigned\" class=\"associatedtype\">Unsigned</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>An unsigned fixed-point number type with the same number of integer and\nfractional bits as <code>Self</code>. <a href=\"fixed/traits/trait.Fixed.html#associatedtype.Unsigned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_bits\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.from_bits\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.from_bits\" class=\"fn\">from_bits</a>(bits: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Bits\" title=\"type fixed::traits::Fixed::Bits\">Bits</a>) -&gt; Self</h4></section></summary><div class='docblock'>Creates a fixed-point number that has a bitwise representation\nidentical to the given integer. <a href=\"fixed/traits/trait.Fixed.html#tymethod.from_bits\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_bits\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.to_bits\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.to_bits\" class=\"fn\">to_bits</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Bits\" title=\"type fixed::traits::Fixed::Bits\">Bits</a></h4></section></summary><div class='docblock'>Creates an integer that has a bitwise representation identical\nto the given fixed-point number. <a href=\"fixed/traits/trait.Fixed.html#tymethod.to_bits\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.from_be\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.from_be\" class=\"fn\">from_be</a>(fixed: Self) -&gt; Self</h4></section></summary><div class='docblock'>Converts a fixed-point number from big endian to the target’s endianness. <a href=\"fixed/traits/trait.Fixed.html#tymethod.from_be\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.from_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.from_le\" class=\"fn\">from_le</a>(fixed: Self) -&gt; Self</h4></section></summary><div class='docblock'>Converts a fixed-point number from little endian to the target’s endianness. <a href=\"fixed/traits/trait.Fixed.html#tymethod.from_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.to_be\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.to_be\" class=\"fn\">to_be</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Converts this fixed-point number to big endian from the target’s endianness. <a href=\"fixed/traits/trait.Fixed.html#tymethod.to_be\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.to_le\" class=\"fn\">to_le</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Converts this fixed-point number to little endian from the target’s endianness. <a href=\"fixed/traits/trait.Fixed.html#tymethod.to_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.swap_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.swap_bytes\" class=\"fn\">swap_bytes</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Reverses the byte order of the fixed-point number. <a href=\"fixed/traits/trait.Fixed.html#tymethod.swap_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.from_be_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.from_be_bytes\" class=\"fn\">from_be_bytes</a>(bits: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Bytes\" title=\"type fixed::traits::Fixed::Bytes\">Bytes</a>) -&gt; Self</h4></section></summary><div class='docblock'>Creates a fixed-point number from its representation as a byte\narray in big endian. <a href=\"fixed/traits/trait.Fixed.html#tymethod.from_be_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.from_le_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.from_le_bytes\" class=\"fn\">from_le_bytes</a>(bits: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Bytes\" title=\"type fixed::traits::Fixed::Bytes\">Bytes</a>) -&gt; Self</h4></section></summary><div class='docblock'>Creates a fixed-point number from its representation as a byte\narray in little endian. <a href=\"fixed/traits/trait.Fixed.html#tymethod.from_le_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ne_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.from_ne_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.from_ne_bytes\" class=\"fn\">from_ne_bytes</a>(bits: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Bytes\" title=\"type fixed::traits::Fixed::Bytes\">Bytes</a>) -&gt; Self</h4></section></summary><div class='docblock'>Creates a fixed-point number from its representation as a byte\narray in native endian. <a href=\"fixed/traits/trait.Fixed.html#tymethod.from_ne_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.to_be_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.to_be_bytes\" class=\"fn\">to_be_bytes</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Bytes\" title=\"type fixed::traits::Fixed::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Returns the memory representation of this fixed-point number\nas a byte array in big-endian byte order. <a href=\"fixed/traits/trait.Fixed.html#tymethod.to_be_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.to_le_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.to_le_bytes\" class=\"fn\">to_le_bytes</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Bytes\" title=\"type fixed::traits::Fixed::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Returns the memory representation of this fixed-point number\nas a byte array in little-endian byte order. <a href=\"fixed/traits/trait.Fixed.html#tymethod.to_le_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_ne_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.to_ne_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.to_ne_bytes\" class=\"fn\">to_ne_bytes</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Bytes\" title=\"type fixed::traits::Fixed::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Returns the memory representation of this fixed-point number\nas a byte array in native byte order. <a href=\"fixed/traits/trait.Fixed.html#tymethod.to_ne_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_num\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.from_num\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.from_num\" class=\"fn\">from_num</a>&lt;Src: <a class=\"trait\" href=\"fixed/traits/trait.ToFixed.html\" title=\"trait fixed::traits::ToFixed\">ToFixed</a>&gt;(src: Src) -&gt; Self</h4></section></summary><div class='docblock'>Creates a fixed-point number from another number. <a href=\"fixed/traits/trait.Fixed.html#tymethod.from_num\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_num\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.to_num\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.to_num\" class=\"fn\">to_num</a>&lt;Dst: <a class=\"trait\" href=\"fixed/traits/trait.FromFixed.html\" title=\"trait fixed::traits::FromFixed\">FromFixed</a>&gt;(self) -&gt; Dst</h4></section></summary><div class='docblock'>Converts a fixed-point number to another number. <a href=\"fixed/traits/trait.Fixed.html#tymethod.to_num\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_from_num\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_from_num\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_from_num\" class=\"fn\">checked_from_num</a>&lt;Src: <a class=\"trait\" href=\"fixed/traits/trait.ToFixed.html\" title=\"trait fixed::traits::ToFixed\">ToFixed</a>&gt;(val: Src) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Creates a fixed-point number from another number if it fits,\notherwise returns <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>. <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_from_num\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_to_num\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_to_num\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_to_num\" class=\"fn\">checked_to_num</a>&lt;Dst: <a class=\"trait\" href=\"fixed/traits/trait.FromFixed.html\" title=\"trait fixed::traits::FromFixed\">FromFixed</a>&gt;(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Dst&gt;</h4></section></summary><div class='docblock'>Converts a fixed-point number to another number if it fits,\notherwise returns <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>. <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_to_num\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_from_num\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_from_num\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_from_num\" class=\"fn\">saturating_from_num</a>&lt;Src: <a class=\"trait\" href=\"fixed/traits/trait.ToFixed.html\" title=\"trait fixed::traits::ToFixed\">ToFixed</a>&gt;(val: Src) -&gt; Self</h4></section></summary><div class='docblock'>Creates a fixed-point number from another number, saturating the\nvalue if it does not fit. <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_from_num\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_to_num\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_to_num\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_to_num\" class=\"fn\">saturating_to_num</a>&lt;Dst: <a class=\"trait\" href=\"fixed/traits/trait.FromFixed.html\" title=\"trait fixed::traits::FromFixed\">FromFixed</a>&gt;(self) -&gt; Dst</h4></section></summary><div class='docblock'>Converts a fixed-point number to another number, saturating the\nvalue if it does not fit. <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_to_num\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_from_num\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_from_num\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_from_num\" class=\"fn\">wrapping_from_num</a>&lt;Src: <a class=\"trait\" href=\"fixed/traits/trait.ToFixed.html\" title=\"trait fixed::traits::ToFixed\">ToFixed</a>&gt;(val: Src) -&gt; Self</h4></section></summary><div class='docblock'>Creates a fixed-point number from another number, wrapping the\nvalue on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_from_num\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_to_num\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_to_num\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_to_num\" class=\"fn\">wrapping_to_num</a>&lt;Dst: <a class=\"trait\" href=\"fixed/traits/trait.FromFixed.html\" title=\"trait fixed::traits::FromFixed\">FromFixed</a>&gt;(self) -&gt; Dst</h4></section></summary><div class='docblock'>Converts a fixed-point number to another number, wrapping the\nvalue on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_to_num\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_from_num\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_from_num\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_from_num\" class=\"fn\">unwrapped_from_num</a>&lt;Src: <a class=\"trait\" href=\"fixed/traits/trait.ToFixed.html\" title=\"trait fixed::traits::ToFixed\">ToFixed</a>&gt;(val: Src) -&gt; Self</h4></section></summary><div class='docblock'>Creates a fixed-point number from another number, panicking on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_from_num\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_to_num\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_to_num\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_to_num\" class=\"fn\">unwrapped_to_num</a>&lt;Dst: <a class=\"trait\" href=\"fixed/traits/trait.FromFixed.html\" title=\"trait fixed::traits::FromFixed\">FromFixed</a>&gt;(self) -&gt; Dst</h4></section></summary><div class='docblock'>Converts a fixed-point number to another number, panicking on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_to_num\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_from_num\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_from_num\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_from_num\" class=\"fn\">overflowing_from_num</a>&lt;Src: <a class=\"trait\" href=\"fixed/traits/trait.ToFixed.html\" title=\"trait fixed::traits::ToFixed\">ToFixed</a>&gt;(val: Src) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Creates a fixed-point number from another number. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_from_num\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_to_num\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_to_num\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_to_num\" class=\"fn\">overflowing_to_num</a>&lt;Dst: <a class=\"trait\" href=\"fixed/traits/trait.FromFixed.html\" title=\"trait fixed::traits::FromFixed\">FromFixed</a>&gt;(self) -&gt; (Dst, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Converts a fixed-point number to another number. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_to_num\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str_binary\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.from_str_binary\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.from_str_binary\" class=\"fn\">from_str_binary</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class='docblock'>Parses a string slice containing binary digits to return a fixed-point number. <a href=\"fixed/traits/trait.Fixed.html#tymethod.from_str_binary\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str_octal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.from_str_octal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.from_str_octal\" class=\"fn\">from_str_octal</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class='docblock'>Parses a string slice containing octal digits to return a fixed-point number. <a href=\"fixed/traits/trait.Fixed.html#tymethod.from_str_octal\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str_hex\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.from_str_hex\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.from_str_hex\" class=\"fn\">from_str_hex</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class='docblock'>Parses a string slice containing hexadecimal digits to return a fixed-point number. <a href=\"fixed/traits/trait.Fixed.html#tymethod.from_str_hex\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ascii\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.from_ascii\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.from_ascii\" class=\"fn\">from_ascii</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class='docblock'>Parses an ASCII-byte slice containing binary digits to return a fixed-point number. <a href=\"fixed/traits/trait.Fixed.html#tymethod.from_ascii\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ascii_binary\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.from_ascii_binary\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.from_ascii_binary\" class=\"fn\">from_ascii_binary</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class='docblock'>Parses an ASCII-byte slice containing binary digits to return a fixed-point number. <a href=\"fixed/traits/trait.Fixed.html#tymethod.from_ascii_binary\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ascii_octal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.from_ascii_octal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.from_ascii_octal\" class=\"fn\">from_ascii_octal</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class='docblock'>Parses an ASCII-byte slice containing octal digits to return a fixed-point number. <a href=\"fixed/traits/trait.Fixed.html#tymethod.from_ascii_octal\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ascii_hex\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.from_ascii_hex\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.from_ascii_hex\" class=\"fn\">from_ascii_hex</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class='docblock'>Parses an ASCII-byte slice containing hexadecimal digits to return a fixed-point number. <a href=\"fixed/traits/trait.Fixed.html#tymethod.from_ascii_hex\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_from_str\" class=\"fn\">saturating_from_str</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class='docblock'>Parses a string slice containing decimal digits to return a\nfixed-point number, saturating on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_from_str\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_from_str_binary\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_from_str_binary\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_from_str_binary\" class=\"fn\">saturating_from_str_binary</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class='docblock'>Parses a string slice containing binary digits to return a\nfixed-point number, saturating on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_from_str_binary\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_from_str_octal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_from_str_octal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_from_str_octal\" class=\"fn\">saturating_from_str_octal</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class='docblock'>Parses a string slice containing octal digits to return a\nfixed-point number, saturating on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_from_str_octal\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_from_str_hex\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_from_str_hex\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_from_str_hex\" class=\"fn\">saturating_from_str_hex</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class='docblock'>Parses a string slice containing hexadecimal digits to return a\nfixed-point number, saturating on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_from_str_hex\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_from_ascii\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_from_ascii\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_from_ascii\" class=\"fn\">saturating_from_ascii</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class='docblock'>Parses an ASCII-byte slice containing decimal digits to return a\nfixed-point number, saturating on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_from_ascii\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_from_ascii_binary\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_from_ascii_binary\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_from_ascii_binary\" class=\"fn\">saturating_from_ascii_binary</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class='docblock'>Parses an ASCII-byte slice containing binary digits to return a\nfixed-point number, saturating on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_from_ascii_binary\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_from_ascii_octal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_from_ascii_octal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_from_ascii_octal\" class=\"fn\">saturating_from_ascii_octal</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class='docblock'>Parses an ASCII-byte slice containing octal digits to return a\nfixed-point number, saturating on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_from_ascii_octal\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_from_ascii_hex\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_from_ascii_hex\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_from_ascii_hex\" class=\"fn\">saturating_from_ascii_hex</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class='docblock'>Parses an ASCII-byte slice containing hexadecimal digits to return a\nfixed-point number, saturating on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_from_ascii_hex\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_from_str\" class=\"fn\">wrapping_from_str</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class='docblock'>Parses a string slice containing decimal digits to return a\nfixed-point number, wrapping on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_from_str\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_from_str_binary\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_from_str_binary\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_from_str_binary\" class=\"fn\">wrapping_from_str_binary</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class='docblock'>Parses a string slice containing binary digits to return a\nfixed-point number, wrapping on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_from_str_binary\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_from_str_octal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_from_str_octal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_from_str_octal\" class=\"fn\">wrapping_from_str_octal</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class='docblock'>Parses a string slice containing octal digits to return a\nfixed-point number, wrapping on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_from_str_octal\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_from_str_hex\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_from_str_hex\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_from_str_hex\" class=\"fn\">wrapping_from_str_hex</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class='docblock'>Parses a string slice containing hexadecimal digits to return a\nfixed-point number, wrapping on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_from_str_hex\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_from_ascii\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_from_ascii\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_from_ascii\" class=\"fn\">wrapping_from_ascii</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class='docblock'>Parses an ASCII-byte slice containing decimal digits to return a\nfixed-point number, wrapping on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_from_ascii\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_from_ascii_binary\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_from_ascii_binary\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_from_ascii_binary\" class=\"fn\">wrapping_from_ascii_binary</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class='docblock'>Parses an ASCII-byte slice containing binary digits to return a\nfixed-point number, wrapping on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_from_ascii_binary\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_from_ascii_octal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_from_ascii_octal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_from_ascii_octal\" class=\"fn\">wrapping_from_ascii_octal</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class='docblock'>Parses an ASCII-byte slice containing octal digits to return a\nfixed-point number, wrapping on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_from_ascii_octal\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_from_ascii_hex\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_from_ascii_hex\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_from_ascii_hex\" class=\"fn\">wrapping_from_ascii_hex</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class='docblock'>Parses an ASCII-byte slice containing hexadecimal digits to return a\nfixed-point number, wrapping on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_from_ascii_hex\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_from_str\" class=\"fn\">unwrapped_from_str</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>) -&gt; Self</h4></section></summary><div class='docblock'>Parses a string slice containing decimal digits to return a\nfixed-point number, panicking on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_from_str\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_from_str_binary\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_from_str_binary\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_from_str_binary\" class=\"fn\">unwrapped_from_str_binary</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>) -&gt; Self</h4></section></summary><div class='docblock'>Parses a string slice containing binary digits to return a\nfixed-point number, panicking on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_from_str_binary\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_from_str_octal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_from_str_octal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_from_str_octal\" class=\"fn\">unwrapped_from_str_octal</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>) -&gt; Self</h4></section></summary><div class='docblock'>Parses a string slice containing octal digits to return a\nfixed-point number, panicking on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_from_str_octal\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_from_str_hex\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_from_str_hex\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_from_str_hex\" class=\"fn\">unwrapped_from_str_hex</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>) -&gt; Self</h4></section></summary><div class='docblock'>Parses a string slice containing hexadecimal digits to return a\nfixed-point number, panicking on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_from_str_hex\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_from_ascii\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_from_ascii\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_from_ascii\" class=\"fn\">unwrapped_from_ascii</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Parses an ASCII-byte slice containing decimal digits to return a\nfixed-point number, panicking on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_from_ascii\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_from_ascii_binary\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_from_ascii_binary\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_from_ascii_binary\" class=\"fn\">unwrapped_from_ascii_binary</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Parses an ASCII-byte slice containing binary digits to return a\nfixed-point number, panicking on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_from_ascii_binary\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_from_ascii_octal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_from_ascii_octal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_from_ascii_octal\" class=\"fn\">unwrapped_from_ascii_octal</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Parses an ASCII-byte slice containing octal digits to return a\nfixed-point number, panicking on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_from_ascii_octal\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_from_ascii_hex\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_from_ascii_hex\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_from_ascii_hex\" class=\"fn\">unwrapped_from_ascii_hex</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Parses an ASCII-byte slice containing hexadecimal digits to return a\nfixed-point number, panicking on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_from_ascii_hex\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_from_str\" class=\"fn\">overflowing_from_str</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>), <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class='docblock'>Parses a string slice containing decimal digits to return a\nfixed-point number. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_from_str\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_from_str_binary\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_from_str_binary\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_from_str_binary\" class=\"fn\">overflowing_from_str_binary</a>(\n    src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>), <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class='docblock'>Parses a string slice containing binary digits to return a\nfixed-point number. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_from_str_binary\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_from_str_octal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_from_str_octal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_from_str_octal\" class=\"fn\">overflowing_from_str_octal</a>(\n    src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>), <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class='docblock'>Parses a string slice containing octal digits to return a\nfixed-point number. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_from_str_octal\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_from_str_hex\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_from_str_hex\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_from_str_hex\" class=\"fn\">overflowing_from_str_hex</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>), <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class='docblock'>Parses a string slice containing hexadecimal digits to return a\nfixed-point number. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_from_str_hex\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_from_ascii\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_from_ascii\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_from_ascii\" class=\"fn\">overflowing_from_ascii</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>), <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class='docblock'>Parses an ASCII-byte slice containing decimal digits to return a\nfixed-point number. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_from_ascii\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_from_ascii_binary\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_from_ascii_binary\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_from_ascii_binary\" class=\"fn\">overflowing_from_ascii_binary</a>(\n    src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>), <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class='docblock'>Parses an ASCII-byte slice containing binary digits to return a\nfixed-point number. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_from_ascii_binary\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_from_ascii_octal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_from_ascii_octal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_from_ascii_octal\" class=\"fn\">overflowing_from_ascii_octal</a>(\n    src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>), <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class='docblock'>Parses an ASCII-byte slice containing octal digits to return a\nfixed-point number. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_from_ascii_octal\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_from_ascii_hex\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_from_ascii_hex\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_from_ascii_hex\" class=\"fn\">overflowing_from_ascii_hex</a>(\n    src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>), <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class='docblock'>Parses an ASCII-byte slice containing hexadecimal digits to return a\nfixed-point number. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_from_ascii_hex\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.int\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.int\" class=\"fn\">int</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Returns the integer part. <a href=\"fixed/traits/trait.Fixed.html#tymethod.int\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.frac\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.frac\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.frac\" class=\"fn\">frac</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Returns the fractional part. <a href=\"fixed/traits/trait.Fixed.html#tymethod.frac\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceil\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.ceil\" class=\"fn\">ceil</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Rounds to the next integer towards +∞. <a href=\"fixed/traits/trait.Fixed.html#tymethod.ceil\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.floor\" class=\"fn\">floor</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Rounds to the next integer towards −∞. <a href=\"fixed/traits/trait.Fixed.html#tymethod.floor\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.round_to_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.round_to_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.round_to_zero\" class=\"fn\">round_to_zero</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Rounds to the next integer towards 0. <a href=\"fixed/traits/trait.Fixed.html#tymethod.round_to_zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.round\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.round\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.round\" class=\"fn\">round</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Rounds to the nearest integer, with ties rounded away from zero. <a href=\"fixed/traits/trait.Fixed.html#tymethod.round\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.round_ties_even\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.round_ties_even\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.round_ties_even\" class=\"fn\">round_ties_even</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Rounds to the nearest integer, with ties rounded to even. <a href=\"fixed/traits/trait.Fixed.html#tymethod.round_ties_even\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_ceil\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_ceil\" class=\"fn\">checked_ceil</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Checked ceil. Rounds to the next integer towards +∞, returning\n<a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_ceil\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_floor\" class=\"fn\">checked_floor</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Checked floor. Rounds to the next integer towards −∞, returning\n<a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_floor\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_round\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_round\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_round\" class=\"fn\">checked_round</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Checked round. Rounds to the nearest integer, with ties\nrounded away from zero, returning <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_round\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_round_ties_even\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_round_ties_even\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_round_ties_even\" class=\"fn\">checked_round_ties_even</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Checked round. Rounds to the nearest integer, with ties rounded to even,\nreturning <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_round_ties_even\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_ceil\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_ceil\" class=\"fn\">saturating_ceil</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Saturating ceil. Rounds to the next integer towards +∞,\nsaturating on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_ceil\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_floor\" class=\"fn\">saturating_floor</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Saturating floor. Rounds to the next integer towards −∞,\nsaturating on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_floor\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_round\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_round\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_round\" class=\"fn\">saturating_round</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Saturating round. Rounds to the nearest integer, with ties\nrounded away from zero, and saturating on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_round\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_round_ties_even\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_round_ties_even\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_round_ties_even\" class=\"fn\">saturating_round_ties_even</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Saturating round. Rounds to the nearest integer, with ties rounded\nto_even, and saturating on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_round_ties_even\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_ceil\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_ceil\" class=\"fn\">wrapping_ceil</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Wrapping ceil. Rounds to the next integer towards +∞, wrapping\non overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_ceil\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_floor\" class=\"fn\">wrapping_floor</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Wrapping floor. Rounds to the next integer towards −∞,\nwrapping on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_floor\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_round\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_round\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_round\" class=\"fn\">wrapping_round</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Wrapping round. Rounds to the next integer to the nearest,\nwith ties rounded away from zero, and wrapping on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_round\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_round_ties_even\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_round_ties_even\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_round_ties_even\" class=\"fn\">wrapping_round_ties_even</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Wrapping round. Rounds to the next integer to the nearest, with ties\nrounded to even, and wrapping on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_round_ties_even\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_ceil\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_ceil\" class=\"fn\">unwrapped_ceil</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Unwrapped ceil. Rounds to the next integer towards +∞,\npanicking on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_ceil\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_floor\" class=\"fn\">unwrapped_floor</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Unwrapped floor. Rounds to the next integer towards −∞,\npanicking on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_floor\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_round\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_round\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_round\" class=\"fn\">unwrapped_round</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Unwrapped round. Rounds to the next integer to the nearest,\nwith ties rounded away from zero, and panicking on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_round\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_round_ties_even\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_round_ties_even\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_round_ties_even\" class=\"fn\">unwrapped_round_ties_even</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Unwrapped round. Rounds to the next integer to the nearest, with ties\nrounded to even, and panicking on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_round_ties_even\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_ceil\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_ceil\" class=\"fn\">overflowing_ceil</a>(self) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Overflowing ceil. Rounds to the next integer towards +∞. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_ceil\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_floor\" class=\"fn\">overflowing_floor</a>(self) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Overflowing floor. Rounds to the next integer towards −∞. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_floor\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_round\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_round\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_round\" class=\"fn\">overflowing_round</a>(self) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Overflowing round. Rounds to the next integer to the nearest,\nwith ties rounded away from zero. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_round\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_round_ties_even\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_round_ties_even\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_round_ties_even\" class=\"fn\">overflowing_round_ties_even</a>(self) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Overflowing round. Rounds to the next integer to the nearest, with ties\nrounded to even. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_round_ties_even\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_ones\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.count_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.count_ones\" class=\"fn\">count_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of ones in the binary representation. <a href=\"fixed/traits/trait.Fixed.html#tymethod.count_ones\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_zeros\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.count_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.count_zeros\" class=\"fn\">count_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of zeros in the binary representation. <a href=\"fixed/traits/trait.Fixed.html#tymethod.count_zeros\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_ones\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.leading_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.leading_ones\" class=\"fn\">leading_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of leading ones in the binary representation. <a href=\"fixed/traits/trait.Fixed.html#tymethod.leading_ones\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_zeros\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.leading_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.leading_zeros\" class=\"fn\">leading_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of leading zeros in the binary representation. <a href=\"fixed/traits/trait.Fixed.html#tymethod.leading_zeros\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_ones\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.trailing_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.trailing_ones\" class=\"fn\">trailing_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of trailing ones in the binary representation. <a href=\"fixed/traits/trait.Fixed.html#tymethod.trailing_ones\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_zeros\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.trailing_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.trailing_zeros\" class=\"fn\">trailing_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of trailing zeros in the binary representation. <a href=\"fixed/traits/trait.Fixed.html#tymethod.trailing_zeros\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.int_log2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.int_log2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.int_log2\" class=\"fn\">int_log2</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Integer base-2 logarithm, rounded down. <a href=\"fixed/traits/trait.Fixed.html#tymethod.int_log2\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.int_log10\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.int_log10\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.int_log10\" class=\"fn\">int_log10</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Integer base-10 logarithm, rounded down. <a href=\"fixed/traits/trait.Fixed.html#tymethod.int_log10\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.int_log\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.int_log\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.int_log\" class=\"fn\">int_log</a>(self, base: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Integer logarithm to the specified base, rounded down. <a href=\"fixed/traits/trait.Fixed.html#tymethod.int_log\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_int_log2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_int_log2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_int_log2\" class=\"fn\">checked_int_log2</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Checked integer base-2 logarithm, rounded down. Returns the\nlogarithm or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the fixed-point number is ≤ 0. <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_int_log2\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_int_log10\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_int_log10\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_int_log10\" class=\"fn\">checked_int_log10</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Checked integer base-10 logarithm, rounded down. Returns the\nlogarithm or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the fixed-point number is ≤ 0. <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_int_log10\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_int_log\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_int_log\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_int_log\" class=\"fn\">checked_int_log</a>(self, base: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Checked integer logarithm to the specified base, rounded down. Returns\nthe logarithm, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the fixed-point number is ≤ 0 or if\nthe base is &lt; 2. <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_int_log\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reverse_bits\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.reverse_bits\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.reverse_bits\" class=\"fn\">reverse_bits</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Reverses the order of the bits of the fixed-point number. <a href=\"fixed/traits/trait.Fixed.html#tymethod.reverse_bits\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_left\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.rotate_left\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.rotate_left\" class=\"fn\">rotate_left</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; Self</h4></section></summary><div class='docblock'>Shifts to the left by <code>n</code> bits, wrapping the truncated bits to the right end. <a href=\"fixed/traits/trait.Fixed.html#tymethod.rotate_left\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_right\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.rotate_right\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.rotate_right\" class=\"fn\">rotate_right</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; Self</h4></section></summary><div class='docblock'>Shifts to the right by <code>n</code> bits, wrapping the truncated bits to the left end. <a href=\"fixed/traits/trait.Fixed.html#tymethod.rotate_right\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.is_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.is_zero\" class=\"fn\">is_zero</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>true</code></a> if the number is zero. <a href=\"fixed/traits/trait.Fixed.html#tymethod.is_zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dist\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.dist\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.dist\" class=\"fn\">dist</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Returns the distance from <code>self</code> to <code>other</code>. <a href=\"fixed/traits/trait.Fixed.html#tymethod.dist\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs_diff\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.abs_diff\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.abs_diff\" class=\"fn\">abs_diff</a>(self, other: Self) -&gt; Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Unsigned\" title=\"type fixed::traits::Fixed::Unsigned\">Unsigned</a></h4></section></summary><div class='docblock'>Returns the absolute value of the difference between <code>self</code> and <code>other</code>\nusing an unsigned type without any wrapping or panicking. <a href=\"fixed/traits/trait.Fixed.html#tymethod.abs_diff\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mean\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.mean\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.mean\" class=\"fn\">mean</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Returns the mean of <code>self</code> and <code>other</code>. <a href=\"fixed/traits/trait.Fixed.html#tymethod.mean\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hypot\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.hypot\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.hypot\" class=\"fn\">hypot</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Compute the hypotenuse of a right triange. <a href=\"fixed/traits/trait.Fixed.html#tymethod.hypot\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.recip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.recip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.recip\" class=\"fn\">recip</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Returns the reciprocal. <a href=\"fixed/traits/trait.Fixed.html#tymethod.recip\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_multiple_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.next_multiple_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.next_multiple_of\" class=\"fn\">next_multiple_of</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Returns the next multiple of <code>other</code>. <a href=\"fixed/traits/trait.Fixed.html#tymethod.next_multiple_of\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.mul_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.mul_add\" class=\"fn\">mul_add</a>(self, mul: Self, add: Self) -&gt; Self</h4></section></summary><div class='docblock'>Multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>. <a href=\"fixed/traits/trait.Fixed.html#tymethod.mul_add\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_prod\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.add_prod\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.add_prod\" class=\"fn\">add_prod</a>(self, a: Self, b: Self) -&gt; Self</h4></section></summary><div class='docblock'>Adds <code>self</code> to the product <code>a</code> × <code>b</code>. <a href=\"fixed/traits/trait.Fixed.html#tymethod.add_prod\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_acc\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.mul_acc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.mul_acc\" class=\"fn\">mul_acc</a>(&amp;mut self, a: Self, b: Self)</h4></section></summary><div class='docblock'>Multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>. <a href=\"fixed/traits/trait.Fixed.html#tymethod.mul_acc\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.div_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.div_euclid\" class=\"fn\">div_euclid</a>(self, rhs: Self) -&gt; Self</h4></section></summary><div class='docblock'>Euclidean division by an integer. <a href=\"fixed/traits/trait.Fixed.html#tymethod.div_euclid\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.rem_euclid\" class=\"fn\">rem_euclid</a>(self, rhs: Self) -&gt; Self</h4></section></summary><div class='docblock'>Remainder for Euclidean division. <a href=\"fixed/traits/trait.Fixed.html#tymethod.rem_euclid\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_euclid_int\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.div_euclid_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.div_euclid_int\" class=\"fn\">div_euclid_int</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Bits\" title=\"type fixed::traits::Fixed::Bits\">Bits</a>) -&gt; Self</h4></section></summary><div class='docblock'>Euclidean division by an integer. <a href=\"fixed/traits/trait.Fixed.html#tymethod.div_euclid_int\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_euclid_int\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.rem_euclid_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.rem_euclid_int\" class=\"fn\">rem_euclid_int</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Bits\" title=\"type fixed::traits::Fixed::Bits\">Bits</a>) -&gt; Self</h4></section></summary><div class='docblock'>Remainder for Euclidean division by an integer. <a href=\"fixed/traits/trait.Fixed.html#tymethod.rem_euclid_int\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unbounded_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unbounded_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unbounded_shl\" class=\"fn\">unbounded_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; Self</h4></section></summary><div class='docblock'>Unbounded shift left. Computes <code>self &lt;&lt; rhs</code>, without bounding the value\nof <code>rhs</code>. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unbounded_shl\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unbounded_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unbounded_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unbounded_shr\" class=\"fn\">unbounded_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; Self</h4></section></summary><div class='docblock'>Unbounded shift right. Computes <code>self &gt;&gt; rhs</code>, without bounding the\nvalue of <code>rhs</code>. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unbounded_shr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sqrt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.sqrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.sqrt\" class=\"fn\">sqrt</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Returns the square root. <a href=\"fixed/traits/trait.Fixed.html#tymethod.sqrt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lerp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.lerp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.lerp\" class=\"fn\">lerp</a>(self, start: Self, end: Self) -&gt; Self</h4></section></summary><div class='docblock'>Linear interpolation between <code>start</code> and <code>end</code>. <a href=\"fixed/traits/trait.Fixed.html#tymethod.lerp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inv_lerp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.inv_lerp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.inv_lerp\" class=\"fn\">inv_lerp</a>(self, start: Self, end: Self) -&gt; Self</h4></section></summary><div class='docblock'>Inverse linear interpolation between <code>start</code> and <code>end</code>. <a href=\"fixed/traits/trait.Fixed.html#tymethod.inv_lerp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_neg\" class=\"fn\">checked_neg</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Checked negation. Returns the negated value, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_neg\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_add\" class=\"fn\">checked_add</a>(self, rhs: Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Checked addition. Returns the sum, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_add\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_sub\" class=\"fn\">checked_sub</a>(self, rhs: Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Checked subtraction. Returns the difference, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_sub\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(self, rhs: Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Checked multiplication. Returns the product, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_mul\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_div\" class=\"fn\">checked_div</a>(self, rhs: Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Checked division. Returns the quotient, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the\ndivisor is zero or on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_div\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_rem\" class=\"fn\">checked_rem</a>(self, rhs: Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Checked remainder. Returns the remainder, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the\ndivisor is zero. <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_rem\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_recip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_recip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_recip\" class=\"fn\">checked_recip</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Checked reciprocal. Returns the reciprocal, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if\n<code>self</code> is zero or on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_recip\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_next_multiple_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_next_multiple_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_next_multiple_of\" class=\"fn\">checked_next_multiple_of</a>(self, other: Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Checked next multiple of <code>other</code>. Returns the next multiple, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>\nif <code>other</code> is zero or on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_next_multiple_of\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_mul_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_mul_add\" class=\"fn\">checked_mul_add</a>(self, mul: Self, add: Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Checked multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_mul_add\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add_prod\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_add_prod\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_add_prod\" class=\"fn\">checked_add_prod</a>(self, a: Self, b: Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Adds <code>self</code> to the product <code>a</code> × <code>b</code>, returning <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_add_prod\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul_acc\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_mul_acc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_mul_acc\" class=\"fn\">checked_mul_acc</a>(&amp;mut self, a: Self, b: Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Checked multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, or returns\n<a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_mul_acc\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_div_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_div_euclid\" class=\"fn\">checked_div_euclid</a>(self, rhs: Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Checked remainder for Euclidean division. Returns the\nremainder, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the divisor is zero or the division\nresults in overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_div_euclid\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_rem_euclid\" class=\"fn\">checked_rem_euclid</a>(self, rhs: Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Checked remainder for Euclidean division. Returns the\nremainder, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the divisor is zero. <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_rem_euclid\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul_int\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_mul_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_mul_int\" class=\"fn\">checked_mul_int</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Bits\" title=\"type fixed::traits::Fixed::Bits\">Bits</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Checked multiplication by an integer. Returns the product, or\n<a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_mul_int\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div_int\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_div_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_div_int\" class=\"fn\">checked_div_int</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Bits\" title=\"type fixed::traits::Fixed::Bits\">Bits</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Checked division by an integer. Returns the quotient, or\n<a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the divisor is zero or if the division results in\noverflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_div_int\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem_int\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_rem_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_rem_int\" class=\"fn\">checked_rem_int</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Bits\" title=\"type fixed::traits::Fixed::Bits\">Bits</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Checked fixed-point remainder for division by an integer.\nReturns the remainder, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the divisor is zero or\nif the division results in overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_rem_int\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div_euclid_int\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_div_euclid_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_div_euclid_int\" class=\"fn\">checked_div_euclid_int</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Bits\" title=\"type fixed::traits::Fixed::Bits\">Bits</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Checked Euclidean division by an integer. Returns the\nquotient, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the divisor is zero or if the\ndivision results in overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_div_euclid_int\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem_euclid_int\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_rem_euclid_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_rem_euclid_int\" class=\"fn\">checked_rem_euclid_int</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Bits\" title=\"type fixed::traits::Fixed::Bits\">Bits</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Checked remainder for Euclidean division by an integer.\nReturns the remainder, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the divisor is zero or\nif the remainder results in overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_rem_euclid_int\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_shl\" class=\"fn\">checked_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Checked shift left. Returns the shifted number, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if\n<code>rhs</code> ≥ the number of bits. <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_shl\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_shr\" class=\"fn\">checked_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Checked shift right. Returns the shifted number, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>\nif <code>rhs</code> ≥ the number of bits. <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_shr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_dist\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_dist\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_dist\" class=\"fn\">checked_dist</a>(self, other: Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Checked distance. Returns the distance from <code>self</code> to <code>other</code>, or\n<a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_dist\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_hypot\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_hypot\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_hypot\" class=\"fn\">checked_hypot</a>(self, other: Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Compute the hypotenuse of a right triange, returning <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on\noverflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_hypot\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sqrt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_sqrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_sqrt\" class=\"fn\">checked_sqrt</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Checked square root. Returns <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> for negative numbers or on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_sqrt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_lerp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_lerp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_lerp\" class=\"fn\">checked_lerp</a>(self, start: Self, end: Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Checked linear interpolation between <code>start</code> and <code>end</code>. Returns <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>\non overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_lerp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_inv_lerp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_inv_lerp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_inv_lerp\" class=\"fn\">checked_inv_lerp</a>(self, start: Self, end: Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Checked inverse linear interpolation between <code>start</code> and <code>end</code>. Returns\n<a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> when <code>start</code> = <code>end</code> or on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.checked_inv_lerp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_neg\" class=\"fn\">saturating_neg</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Saturated negation. Returns the negated value, saturating on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_neg\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(self, rhs: Self) -&gt; Self</h4></section></summary><div class='docblock'>Saturating addition. Returns the sum, saturating on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_add\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_sub\" class=\"fn\">saturating_sub</a>(self, rhs: Self) -&gt; Self</h4></section></summary><div class='docblock'>Saturating subtraction. Returns the difference, saturating on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_sub\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_mul\" class=\"fn\">saturating_mul</a>(self, rhs: Self) -&gt; Self</h4></section></summary><div class='docblock'>Saturating multiplication. Returns the product, saturating on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_mul\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_div\" class=\"fn\">saturating_div</a>(self, rhs: Self) -&gt; Self</h4></section></summary><div class='docblock'>Saturating division. Returns the quotient, saturating on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_div\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_recip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_recip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_recip\" class=\"fn\">saturating_recip</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Saturating reciprocal. <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_recip\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_next_multiple_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_next_multiple_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_next_multiple_of\" class=\"fn\">saturating_next_multiple_of</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Saturating next multiple of <code>other</code>. <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_next_multiple_of\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_mul_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_mul_add\" class=\"fn\">saturating_mul_add</a>(self, mul: Self, add: Self) -&gt; Self</h4></section></summary><div class='docblock'>Saturating multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, saturating on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_mul_add\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add_prod\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_add_prod\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_add_prod\" class=\"fn\">saturating_add_prod</a>(self, a: Self, b: Self) -&gt; Self</h4></section></summary><div class='docblock'>Adds <code>self</code> to the product <code>a</code> × <code>b</code>, saturating on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_add_prod\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul_acc\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_mul_acc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_mul_acc\" class=\"fn\">saturating_mul_acc</a>(&amp;mut self, a: Self, b: Self)</h4></section></summary><div class='docblock'>Saturating multiply and add. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, saturating on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_mul_acc\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_div_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_div_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_div_euclid\" class=\"fn\">saturating_div_euclid</a>(self, rhs: Self) -&gt; Self</h4></section></summary><div class='docblock'>Saturating Euclidean division. Returns the quotient, saturating on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_div_euclid\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul_int\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_mul_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_mul_int\" class=\"fn\">saturating_mul_int</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Bits\" title=\"type fixed::traits::Fixed::Bits\">Bits</a>) -&gt; Self</h4></section></summary><div class='docblock'>Saturating multiplication by an integer. Returns the product, saturating on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_mul_int\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_div_int\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_div_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_div_int\" class=\"fn\">saturating_div_int</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Bits\" title=\"type fixed::traits::Fixed::Bits\">Bits</a>) -&gt; Self</h4></section></summary><div class='docblock'>Saturating division by an integer. Returns the quotient, saturating on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_div_int\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_div_euclid_int\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_div_euclid_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_div_euclid_int\" class=\"fn\">saturating_div_euclid_int</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Bits\" title=\"type fixed::traits::Fixed::Bits\">Bits</a>) -&gt; Self</h4></section></summary><div class='docblock'>Saturating Euclidean division by an integer. Returns the\nquotient, saturating on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_div_euclid_int\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_rem_euclid_int\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_rem_euclid_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_rem_euclid_int\" class=\"fn\">saturating_rem_euclid_int</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Bits\" title=\"type fixed::traits::Fixed::Bits\">Bits</a>) -&gt; Self</h4></section></summary><div class='docblock'>Saturating remainder for Euclidean division by an integer.\nReturns the remainder, saturating on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_rem_euclid_int\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_dist\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_dist\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_dist\" class=\"fn\">saturating_dist</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Saturating distance. Returns the distance from <code>self</code> to <code>other</code>,\nsaturating on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_dist\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_hypot\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_hypot\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_hypot\" class=\"fn\">saturating_hypot</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Compute the hypotenuse of a right triange, saturating on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_hypot\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sqrt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_sqrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_sqrt\" class=\"fn\">saturating_sqrt</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Returns the square root, saturating on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_sqrt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_lerp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_lerp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_lerp\" class=\"fn\">saturating_lerp</a>(self, start: Self, end: Self) -&gt; Self</h4></section></summary><div class='docblock'>Linear interpolation between <code>start</code> and <code>end</code>, saturating on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_lerp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_inv_lerp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_inv_lerp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_inv_lerp\" class=\"fn\">saturating_inv_lerp</a>(self, start: Self, end: Self) -&gt; Self</h4></section></summary><div class='docblock'>Inverse linear interpolation between <code>start</code> and <code>end</code>, saturating on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.saturating_inv_lerp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_neg\" class=\"fn\">wrapping_neg</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Wrapping negation. Returns the negated value, wrapping on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_neg\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_add\" class=\"fn\">wrapping_add</a>(self, rhs: Self) -&gt; Self</h4></section></summary><div class='docblock'>Wrapping addition. Returns the sum, wrapping on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_add\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_sub\" class=\"fn\">wrapping_sub</a>(self, rhs: Self) -&gt; Self</h4></section></summary><div class='docblock'>Wrapping subtraction. Returns the difference, wrapping on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_sub\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_mul\" class=\"fn\">wrapping_mul</a>(self, rhs: Self) -&gt; Self</h4></section></summary><div class='docblock'>Wrapping multiplication. Returns the product, wrapping on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_mul\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_div\" class=\"fn\">wrapping_div</a>(self, rhs: Self) -&gt; Self</h4></section></summary><div class='docblock'>Wrapping division. Returns the quotient, wrapping on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_div\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_recip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_recip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_recip\" class=\"fn\">wrapping_recip</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Wrapping reciprocal. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_recip\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_next_multiple_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_next_multiple_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_next_multiple_of\" class=\"fn\">wrapping_next_multiple_of</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Wrapping next multiple of <code>other</code>. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_next_multiple_of\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_mul_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_mul_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_mul_add\" class=\"fn\">wrapping_mul_add</a>(self, mul: Self, add: Self) -&gt; Self</h4></section></summary><div class='docblock'>Wrapping multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, wrapping on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_mul_add\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_add_prod\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_add_prod\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_add_prod\" class=\"fn\">wrapping_add_prod</a>(self, a: Self, b: Self) -&gt; Self</h4></section></summary><div class='docblock'>Adds <code>self</code> to the product <code>a</code> × <code>b</code>, wrapping on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_add_prod\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_mul_acc\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_mul_acc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_mul_acc\" class=\"fn\">wrapping_mul_acc</a>(&amp;mut self, a: Self, b: Self)</h4></section></summary><div class='docblock'>Wrapping multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, wrapping on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_mul_acc\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_div_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_div_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_div_euclid\" class=\"fn\">wrapping_div_euclid</a>(self, rhs: Self) -&gt; Self</h4></section></summary><div class='docblock'>Wrapping Euclidean division. Returns the quotient, wrapping on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_div_euclid\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_mul_int\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_mul_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_mul_int\" class=\"fn\">wrapping_mul_int</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Bits\" title=\"type fixed::traits::Fixed::Bits\">Bits</a>) -&gt; Self</h4></section></summary><div class='docblock'>Wrapping multiplication by an integer. Returns the product, wrapping on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_mul_int\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_div_int\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_div_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_div_int\" class=\"fn\">wrapping_div_int</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Bits\" title=\"type fixed::traits::Fixed::Bits\">Bits</a>) -&gt; Self</h4></section></summary><div class='docblock'>Wrapping division by an integer. Returns the quotient, wrapping on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_div_int\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_div_euclid_int\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_div_euclid_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_div_euclid_int\" class=\"fn\">wrapping_div_euclid_int</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Bits\" title=\"type fixed::traits::Fixed::Bits\">Bits</a>) -&gt; Self</h4></section></summary><div class='docblock'>Wrapping Euclidean division by an integer. Returns the\nquotient, wrapping on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_div_euclid_int\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_rem_euclid_int\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_rem_euclid_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_rem_euclid_int\" class=\"fn\">wrapping_rem_euclid_int</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Bits\" title=\"type fixed::traits::Fixed::Bits\">Bits</a>) -&gt; Self</h4></section></summary><div class='docblock'>Wrapping remainder for Euclidean division by an integer.\nReturns the remainder, wrapping on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_rem_euclid_int\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_shl\" class=\"fn\">wrapping_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; Self</h4></section></summary><div class='docblock'>Wrapping shift left. Wraps <code>rhs</code> if <code>rhs</code> ≥ the number of\nbits, then shifts and returns the number. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_shl\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_shr\" class=\"fn\">wrapping_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; Self</h4></section></summary><div class='docblock'>Wrapping shift right. Wraps <code>rhs</code> if <code>rhs</code> ≥ the number of\nbits, then shifts and returns the number. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_shr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_dist\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_dist\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_dist\" class=\"fn\">wrapping_dist</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Wrapping distance. Returns the distance from <code>self</code> to <code>other</code>, wrapping\non overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_dist\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_hypot\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_hypot\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_hypot\" class=\"fn\">wrapping_hypot</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Compute the hypotenuse of a right triange, wrapping on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_hypot\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_sqrt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_sqrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_sqrt\" class=\"fn\">wrapping_sqrt</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Returns the square root, wrapping on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_sqrt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_lerp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_lerp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_lerp\" class=\"fn\">wrapping_lerp</a>(self, start: Self, end: Self) -&gt; Self</h4></section></summary><div class='docblock'>Linear interpolation between <code>start</code> and <code>end</code>, wrapping on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_lerp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_inv_lerp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_inv_lerp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_inv_lerp\" class=\"fn\">wrapping_inv_lerp</a>(self, start: Self, end: Self) -&gt; Self</h4></section></summary><div class='docblock'>Inverse linear interpolation between <code>start</code> and <code>end</code>, wrapping on\noverflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.wrapping_inv_lerp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_neg\" class=\"fn\">unwrapped_neg</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Unwrapped negation. Returns the negated value, panicking on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_neg\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_add\" class=\"fn\">unwrapped_add</a>(self, rhs: Self) -&gt; Self</h4></section></summary><div class='docblock'>Unwrapped addition. Returns the sum, panicking on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_add\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_sub\" class=\"fn\">unwrapped_sub</a>(self, rhs: Self) -&gt; Self</h4></section></summary><div class='docblock'>Unwrapped subtraction. Returns the difference, panicking on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_sub\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_mul\" class=\"fn\">unwrapped_mul</a>(self, rhs: Self) -&gt; Self</h4></section></summary><div class='docblock'>Unwrapped multiplication. Returns the product, panicking on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_mul\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_div\" class=\"fn\">unwrapped_div</a>(self, rhs: Self) -&gt; Self</h4></section></summary><div class='docblock'>Unwrapped division. Returns the quotient, panicking on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_div\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_rem\" class=\"fn\">unwrapped_rem</a>(self, rhs: Self) -&gt; Self</h4></section></summary><div class='docblock'>Unwrapped remainder. Returns the quotient, panicking if the divisor is zero. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_rem\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_recip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_recip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_recip\" class=\"fn\">unwrapped_recip</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Unwrapped reciprocal. Returns reciprocal, panicking on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_recip\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_next_multiple_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_next_multiple_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_next_multiple_of\" class=\"fn\">unwrapped_next_multiple_of</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Unwrapped next multiple of <code>other</code>. Returns the next multiple, panicking\non overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_next_multiple_of\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_mul_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_mul_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_mul_add\" class=\"fn\">unwrapped_mul_add</a>(self, mul: Self, add: Self) -&gt; Self</h4></section></summary><div class='docblock'>Unwrapped multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, panicking on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_mul_add\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_add_prod\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_add_prod\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_add_prod\" class=\"fn\">unwrapped_add_prod</a>(self, a: Self, b: Self) -&gt; Self</h4></section></summary><div class='docblock'>Adds <code>self</code> to the product <code>a</code> × <code>b</code>, panicking on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_add_prod\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_mul_acc\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_mul_acc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_mul_acc\" class=\"fn\">unwrapped_mul_acc</a>(&amp;mut self, a: Self, b: Self)</h4></section></summary><div class='docblock'>Unwrapped multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, panicking on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_mul_acc\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_div_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_div_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_div_euclid\" class=\"fn\">unwrapped_div_euclid</a>(self, rhs: Self) -&gt; Self</h4></section></summary><div class='docblock'>Unwrapped Euclidean division. Returns the quotient, panicking on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_div_euclid\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_rem_euclid\" class=\"fn\">unwrapped_rem_euclid</a>(self, rhs: Self) -&gt; Self</h4></section></summary><div class='docblock'>Unwrapped remainder for Euclidean division. Returns the\nremainder, panicking if the divisor is zero. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_rem_euclid\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_mul_int\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_mul_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_mul_int\" class=\"fn\">unwrapped_mul_int</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Bits\" title=\"type fixed::traits::Fixed::Bits\">Bits</a>) -&gt; Self</h4></section></summary><div class='docblock'>Unwrapped multiplication by an integer. Returns the product, panicking on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_mul_int\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_div_int\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_div_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_div_int\" class=\"fn\">unwrapped_div_int</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Bits\" title=\"type fixed::traits::Fixed::Bits\">Bits</a>) -&gt; Self</h4></section></summary><div class='docblock'>Unwrapped division by an integer. Returns the quotient, panicking on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_div_int\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_rem_int\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_rem_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_rem_int\" class=\"fn\">unwrapped_rem_int</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Bits\" title=\"type fixed::traits::Fixed::Bits\">Bits</a>) -&gt; Self</h4></section></summary><div class='docblock'>Unwrapped remainder for division by an integer. Returns the\nremainder, panicking if the divisor is zero. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_rem_int\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_div_euclid_int\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_div_euclid_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_div_euclid_int\" class=\"fn\">unwrapped_div_euclid_int</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Bits\" title=\"type fixed::traits::Fixed::Bits\">Bits</a>) -&gt; Self</h4></section></summary><div class='docblock'>Unwrapped Euclidean division by an integer. Returns the\nquotient, panicking on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_div_euclid_int\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_rem_euclid_int\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_rem_euclid_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_rem_euclid_int\" class=\"fn\">unwrapped_rem_euclid_int</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Bits\" title=\"type fixed::traits::Fixed::Bits\">Bits</a>) -&gt; Self</h4></section></summary><div class='docblock'>Unwrapped remainder for Euclidean division by an integer.\nReturns the remainder, panicking on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_rem_euclid_int\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_shl\" class=\"fn\">unwrapped_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; Self</h4></section></summary><div class='docblock'>Unwrapped shift left. Panics if <code>rhs</code> ≥ the number of bits. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_shl\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_shr\" class=\"fn\">unwrapped_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; Self</h4></section></summary><div class='docblock'>Unwrapped shift right. Panics if <code>rhs</code> ≥ the number of bits. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_shr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_dist\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_dist\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_dist\" class=\"fn\">unwrapped_dist</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Unwrapped distance. Returns the distance from <code>self</code> to <code>other</code>,\npanicking on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_dist\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_hypot\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_hypot\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_hypot\" class=\"fn\">unwrapped_hypot</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Compute the hypotenuse of a right triange, panicking on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_hypot\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_sqrt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_sqrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_sqrt\" class=\"fn\">unwrapped_sqrt</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Returns the square root, panicking if the number is negative or on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_sqrt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_lerp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_lerp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_lerp\" class=\"fn\">unwrapped_lerp</a>(self, start: Self, end: Self) -&gt; Self</h4></section></summary><div class='docblock'>Linear interpolation between <code>start</code> and <code>end</code>, panicking on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_lerp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_inv_lerp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_inv_lerp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_inv_lerp\" class=\"fn\">unwrapped_inv_lerp</a>(self, start: Self, end: Self) -&gt; Self</h4></section></summary><div class='docblock'>Inverse linear interpolation between <code>start</code> and <code>end</code>, panicking on overflow. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unwrapped_inv_lerp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_neg\" class=\"fn\">overflowing_neg</a>(self) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Overflowing negation. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_neg\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_add\" class=\"fn\">overflowing_add</a>(self, rhs: Self) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Overflowing addition. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_add\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_sub\" class=\"fn\">overflowing_sub</a>(self, rhs: Self) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Overflowing subtraction. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_sub\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_mul\" class=\"fn\">overflowing_mul</a>(self, rhs: Self) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Overflowing multiplication. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_mul\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_div\" class=\"fn\">overflowing_div</a>(self, rhs: Self) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Overflowing division. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_div\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_recip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_recip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_recip\" class=\"fn\">overflowing_recip</a>(self) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Overflowing reciprocal. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_recip\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_next_multiple_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_next_multiple_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_next_multiple_of\" class=\"fn\">overflowing_next_multiple_of</a>(self, other: Self) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Overflowing next multiple of <code>other</code>. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_next_multiple_of\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_mul_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_mul_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_mul_add\" class=\"fn\">overflowing_mul_add</a>(self, mul: Self, add: Self) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Overflowing multiply  and add. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_mul_add\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_add_prod\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_add_prod\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_add_prod\" class=\"fn\">overflowing_add_prod</a>(self, a: Self, b: Self) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Adds <code>self</code> to the product <code>a</code> × <code>b</code>. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_add_prod\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_mul_acc\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_mul_acc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_mul_acc\" class=\"fn\">overflowing_mul_acc</a>(&amp;mut self, a: Self, b: Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Overflowing multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>,\nwrapping and returning <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>true</code></a> if overflow occurs. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_mul_acc\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_div_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_div_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_div_euclid\" class=\"fn\">overflowing_div_euclid</a>(self, rhs: Self) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Overflowing Euclidean division. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_div_euclid\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_mul_int\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_mul_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_mul_int\" class=\"fn\">overflowing_mul_int</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Bits\" title=\"type fixed::traits::Fixed::Bits\">Bits</a>) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Overflowing multiplication by an integer. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_mul_int\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_div_int\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_div_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_div_int\" class=\"fn\">overflowing_div_int</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Bits\" title=\"type fixed::traits::Fixed::Bits\">Bits</a>) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Overflowing division by an integer. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_div_int\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_div_euclid_int\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_div_euclid_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_div_euclid_int\" class=\"fn\">overflowing_div_euclid_int</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Bits\" title=\"type fixed::traits::Fixed::Bits\">Bits</a>) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Overflowing Euclidean division by an integer. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_div_euclid_int\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_rem_euclid_int\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_rem_euclid_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_rem_euclid_int\" class=\"fn\">overflowing_rem_euclid_int</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Bits\" title=\"type fixed::traits::Fixed::Bits\">Bits</a>) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Overflowing remainder for Euclidean division by an integer. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_rem_euclid_int\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_shl\" class=\"fn\">overflowing_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Overflowing shift left. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_shl\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_shr\" class=\"fn\">overflowing_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Overflowing shift right. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_shr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_dist\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_dist\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_dist\" class=\"fn\">overflowing_dist</a>(self, other: Self) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Overflowing distance. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_dist\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_hypot\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_hypot\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_hypot\" class=\"fn\">overflowing_hypot</a>(self, other: Self) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Compute the hypotenuse of a right triange. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_hypot\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_sqrt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_sqrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_sqrt\" class=\"fn\">overflowing_sqrt</a>(self) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Compute the square root. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_sqrt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_lerp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_lerp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_lerp\" class=\"fn\">overflowing_lerp</a>(self, start: Self, end: Self) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Overflowing linear interpolation between <code>start</code> and <code>end</code>. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_lerp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_inv_lerp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_inv_lerp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_inv_lerp\" class=\"fn\">overflowing_inv_lerp</a>(self, start: Self, end: Self) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Overflowing inverse linear interpolation between <code>start</code> and <code>end</code>. <a href=\"fixed/traits/trait.Fixed.html#tymethod.overflowing_inv_lerp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unchecked_add\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unchecked_add\" class=\"fn\">unchecked_add</a>(self, rhs: Self) -&gt; Self</h4></section></summary><div class='docblock'>Unchecked addition. Computes <code>self</code> + <code>rhs</code>, assuming\noverflow cannot occur. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unchecked_add\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unchecked_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unchecked_sub\" class=\"fn\">unchecked_sub</a>(self, rhs: Self) -&gt; Self</h4></section></summary><div class='docblock'>Unchecked subtraction. Computes <code>self</code> − <code>rhs</code>, assuming\noverflow cannot occur. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unchecked_sub\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_mul_int\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unchecked_mul_int\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"fixed/traits/trait.Fixed.html#tymethod.unchecked_mul_int\" class=\"fn\">unchecked_mul_int</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Bits\" title=\"type fixed::traits::Fixed::Bits\">Bits</a>) -&gt; Self</h4></section></summary><div class='docblock'>Unchecked multiplication by an integer. Computes\n<code>self</code> × <code>rhs</code>, assuming overflow cannot occur. <a href=\"fixed/traits/trait.Fixed.html#tymethod.unchecked_mul_int\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast_signed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#565-567\">Source</a><a href=\"#method.cast_signed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#method.cast_signed\" class=\"fn\">cast_signed</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Signed\" title=\"type fixed::traits::Fixed::Signed\">Signed</a></h4></section></summary><div class='docblock'>Returns the bit pattern of <code>self</code> reinterpreted as a signed fixed-point\nnumber of the same size. <a href=\"fixed/traits/trait.Fixed.html#method.cast_signed\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast_unsigned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#590-592\">Source</a><a href=\"#method.cast_unsigned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#method.cast_unsigned\" class=\"fn\">cast_unsigned</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Unsigned\" title=\"type fixed::traits::Fixed::Unsigned\">Unsigned</a></h4></section></summary><div class='docblock'>Returns the bit pattern of <code>self</code> reinterpreted as an unsigned\nfixed-point number of the same size. <a href=\"fixed/traits/trait.Fixed.html#method.cast_unsigned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_signed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#613-619\">Source</a><a href=\"#method.get_signed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#method.get_signed\" class=\"fn\">get_signed</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Signed\" title=\"type fixed::traits::Fixed::Signed\">Signed</a>&gt;</h4></section></summary><div class='docblock'>Returns a reference to <code>self</code> as <a href=\"fixed/traits/trait.FixedSigned.html\" title=\"trait fixed::traits::FixedSigned\"><code>FixedSigned</code></a> if the type is signed,\nor <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if it is unsigned. <a href=\"fixed/traits/trait.Fixed.html#method.get_signed\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_unsigned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#640-646\">Source</a><a href=\"#method.get_unsigned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#method.get_unsigned\" class=\"fn\">get_unsigned</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Unsigned\" title=\"type fixed::traits::Fixed::Unsigned\">Unsigned</a>&gt;</h4></section></summary><div class='docblock'>Returns a reference to <code>self</code> as <a href=\"fixed/traits/trait.FixedUnsigned.html\" title=\"trait fixed::traits::FixedUnsigned\"><code>FixedUnsigned</code></a> if the type is\nunsigned, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if it is signed. <a href=\"fixed/traits/trait.Fixed.html#method.get_unsigned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_signed_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#668-674\">Source</a><a href=\"#method.get_signed_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#method.get_signed_mut\" class=\"fn\">get_signed_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Signed\" title=\"type fixed::traits::Fixed::Signed\">Signed</a>&gt;</h4></section></summary><div class='docblock'>Returns a mutable reference to <code>self</code> as <a href=\"fixed/traits/trait.FixedSigned.html\" title=\"trait fixed::traits::FixedSigned\"><code>FixedSigned</code></a> if the type is\nsigned, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if it is unsigned. <a href=\"fixed/traits/trait.Fixed.html#method.get_signed_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_unsigned_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#696-702\">Source</a><a href=\"#method.get_unsigned_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#method.get_unsigned_mut\" class=\"fn\">get_unsigned_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Unsigned\" title=\"type fixed::traits::Fixed::Unsigned\">Unsigned</a>&gt;</h4></section></summary><div class='docblock'>Returns a mutable reference to <code>self</code> as <a href=\"fixed/traits/trait.FixedUnsigned.html\" title=\"trait fixed::traits::FixedUnsigned\"><code>FixedUnsigned</code></a> if the type\nis unsigned, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if it is signed. <a href=\"fixed/traits/trait.Fixed.html#method.get_unsigned_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.round_ties_to_even\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#3384-3386\">Source</a><a href=\"#method.round_ties_to_even\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#method.round_ties_to_even\" class=\"fn\">round_ties_to_even</a>(self) -&gt; Self</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 1.28.0: renamed to <code>round_ties_even</code></span></div></span><div class='docblock'>Rounds to the nearest integer, with ties rounded to even.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_round_ties_to_even\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#3391-3393\">Source</a><a href=\"#method.checked_round_ties_to_even\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#method.checked_round_ties_to_even\" class=\"fn\">checked_round_ties_to_even</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 1.28.0: renamed to <code>checked_round_ties_even</code></span></div></span><div class='docblock'>Checked round. Rounds to the nearest integer, with ties rounded to even,\nreturning <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_round_ties_to_even\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#3399-3401\">Source</a><a href=\"#method.saturating_round_ties_to_even\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#method.saturating_round_ties_to_even\" class=\"fn\">saturating_round_ties_to_even</a>(self) -&gt; Self</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 1.28.0: renamed to <code>saturating_round_ties_even</code></span></div></span><div class='docblock'>Saturating round. Rounds to the nearest integer, with ties rounded\nto_even, and saturating on overflow.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_round_ties_to_even\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#3407-3409\">Source</a><a href=\"#method.wrapping_round_ties_to_even\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#method.wrapping_round_ties_to_even\" class=\"fn\">wrapping_round_ties_to_even</a>(self) -&gt; Self</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 1.28.0: renamed to <code>wrapping_round_ties_even</code></span></div></span><div class='docblock'>Wrapping round. Rounds to the next integer to the nearest, with ties\nrounded to even, and wrapping on overflow.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_round_ties_to_even\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#3420-3422\">Source</a><a href=\"#method.unwrapped_round_ties_to_even\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#method.unwrapped_round_ties_to_even\" class=\"fn\">unwrapped_round_ties_to_even</a>(self) -&gt; Self</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 1.28.0: renamed to <code>unwrapped_round_ties_even</code></span></div></span><div class='docblock'>Unwrapped round. Rounds to the next integer to the nearest, with ties\nrounded to even, and panicking on overflow. <a href=\"fixed/traits/trait.Fixed.html#method.unwrapped_round_ties_to_even\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_round_ties_to_even\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#3431-3433\">Source</a><a href=\"#method.overflowing_round_ties_to_even\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.Fixed.html#method.overflowing_round_ties_to_even\" class=\"fn\">overflowing_round_ties_to_even</a>(self) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 1.28.0: renamed to <code>overflowing_round_ties_even</code></span></div></span><div class='docblock'>Overflowing round. Rounds to the next integer to the nearest, with ties\nrounded to even. <a href=\"fixed/traits/trait.Fixed.html#method.overflowing_round_ties_to_even\">Read more</a></div></details></div></details>","Fixed","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><a href=\"#impl-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3><div class=\"docblock\"><p>The implementation of items in this block is independent\nof the number of fractional bits <code>Frac</code>.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ZERO\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.ZERO\" class=\"constant\">ZERO</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Zero.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::ZERO, Fix::from_bits(<span class=\"number\">0</span>));</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.DELTA\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.DELTA\" class=\"constant\">DELTA</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>The difference between any two successive representable numbers, <i>Δ</i>.</p>\n<p>If the number has <i>f</i> = <code>Frac</code> fractional bits, then\n<i>Δ</i> = 1/2<sup><i>f</i></sup>.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::DELTA, Fix::from_bits(<span class=\"number\">1</span>));\n<span class=\"comment\">// binary 0.0001 is decimal 0.0625\n</span><span class=\"macro\">assert_eq!</span>(Fix::DELTA, <span class=\"number\">0.0625</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.MIN\" class=\"constant\">MIN</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>The smallest value that can be represented.</p>\n<p>The minimum of unsigned numbers is 0.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::MIN, Fix::from_bits(u8::MIN));</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>The largest value that can be represented.</p>\n<p>If the number has <i>f</i> = <code>Frac</code> fractional bits, then the maximum is\n(2<sup>8</sup> − 1)/2<sup><i>f</i></sup>.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::MAX, Fix::from_bits(u8::MAX));</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.IS_SIGNED\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.IS_SIGNED\" class=\"constant\">IS_SIGNED</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a> = false</h4></section></summary><div class=\"docblock\"><p><a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>false</code></a> because the <a href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\"><code>FixedU8</code></a> type is unsigned.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert!</span>(!Fix::IS_SIGNED);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_bits\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.from_bits\" class=\"fn\">from_bits</a>(bits: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a fixed-point number that has a bitwise\nrepresentation identical to the given integer.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"comment\">// 0010.0000 = 2\n</span><span class=\"macro\">assert_eq!</span>(Fix::from_bits(<span class=\"number\">0b10_0000</span>), <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_bits\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.to_bits\" class=\"fn\">to_bits</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Creates an integer that has a bitwise representation\nidentical to the given fixed-point number.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"comment\">// 2 is 0010.0000\n</span><span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2</span>).to_bits(), <span class=\"number\">0b10_0000</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.from_be\" class=\"fn\">from_be</a>(f: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number from big endian to the target’s endianness.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>f = Fix::from_bits(<span class=\"number\">0x12</span>);\n<span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"big\"</span>) {\n    <span class=\"macro\">assert_eq!</span>(Fix::from_be(f), f);\n} <span class=\"kw\">else </span>{\n    <span class=\"macro\">assert_eq!</span>(Fix::from_be(f), f.swap_bytes());\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.from_le\" class=\"fn\">from_le</a>(f: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number from little endian to the target’s endianness.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>f = Fix::from_bits(<span class=\"number\">0x12</span>);\n<span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"little\"</span>) {\n    <span class=\"macro\">assert_eq!</span>(Fix::from_le(f), f);\n} <span class=\"kw\">else </span>{\n    <span class=\"macro\">assert_eq!</span>(Fix::from_le(f), f.swap_bytes());\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.to_be\" class=\"fn\">to_be</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>self</code> to big endian from the target’s endianness.</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>f = Fix::from_bits(<span class=\"number\">0x12</span>);\n<span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"big\"</span>) {\n    <span class=\"macro\">assert_eq!</span>(f.to_be(), f);\n} <span class=\"kw\">else </span>{\n    <span class=\"macro\">assert_eq!</span>(f.to_be(), f.swap_bytes());\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.to_le\" class=\"fn\">to_le</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>self</code> to little endian from the target’s endianness.</p>\n<h5 id=\"examples-10\"><a class=\"doc-anchor\" href=\"#examples-10\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>f = Fix::from_bits(<span class=\"number\">0x12</span>);\n<span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"little\"</span>) {\n    <span class=\"macro\">assert_eq!</span>(f.to_le(), f);\n} <span class=\"kw\">else </span>{\n    <span class=\"macro\">assert_eq!</span>(f.to_le(), f.swap_bytes());\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_bytes\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.swap_bytes\" class=\"fn\">swap_bytes</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Reverses the byte order of the fixed-point number.</p>\n<h5 id=\"examples-11\"><a class=\"doc-anchor\" href=\"#examples-11\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>f = Fix::from_bits(<span class=\"number\">0x12</span>);\n<span class=\"kw\">let </span>swapped = Fix::from_bits(<span class=\"number\">0x12</span>);\n<span class=\"macro\">assert_eq!</span>(f.swap_bytes(), swapped);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be_bytes\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.from_be_bytes\" class=\"fn\">from_be_bytes</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.array.html\">1</a>]) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a fixed-point number from its representation\nas a byte array in big endian.</p>\n<h5 id=\"examples-12\"><a class=\"doc-anchor\" href=\"#examples-12\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(\n    Fix::from_be_bytes([<span class=\"number\">0x12</span>]),\n    Fix::from_bits(<span class=\"number\">0x12</span>)\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le_bytes\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.from_le_bytes\" class=\"fn\">from_le_bytes</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.array.html\">1</a>]) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a fixed-point number from its representation\nas a byte array in little endian.</p>\n<h5 id=\"examples-13\"><a class=\"doc-anchor\" href=\"#examples-13\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(\n    Fix::from_le_bytes([<span class=\"number\">0x12</span>]),\n    Fix::from_bits(<span class=\"number\">0x12</span>)\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ne_bytes\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.from_ne_bytes\" class=\"fn\">from_ne_bytes</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.array.html\">1</a>]) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a fixed-point number from its representation\nas a byte array in native endian.</p>\n<h5 id=\"examples-14\"><a class=\"doc-anchor\" href=\"#examples-14\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(\n    <span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"big\"</span>) {\n        Fix::from_ne_bytes([<span class=\"number\">0x12</span>])\n    } <span class=\"kw\">else </span>{\n        Fix::from_ne_bytes([<span class=\"number\">0x12</span>])\n    },\n    Fix::from_bits(<span class=\"number\">0x12</span>)\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be_bytes\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.to_be_bytes\" class=\"fn\">to_be_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.array.html\">1</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the memory representation of this fixed-point\nnumber as a byte array in big-endian byte order.</p>\n<h5 id=\"examples-15\"><a class=\"doc-anchor\" href=\"#examples-15\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>val = Fix::from_bits(<span class=\"number\">0x12</span>);\n<span class=\"macro\">assert_eq!</span>(\n    val.to_be_bytes(),\n    [<span class=\"number\">0x12</span>]\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le_bytes\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.to_le_bytes\" class=\"fn\">to_le_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.array.html\">1</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the memory representation of this fixed-point\nnumber as a byte array in little-endian byte order.</p>\n<h5 id=\"examples-16\"><a class=\"doc-anchor\" href=\"#examples-16\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>val = Fix::from_bits(<span class=\"number\">0x12</span>);\n<span class=\"macro\">assert_eq!</span>(\n    val.to_le_bytes(),\n    [<span class=\"number\">0x12</span>]\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_ne_bytes\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.to_ne_bytes\" class=\"fn\">to_ne_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.array.html\">1</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the memory representation of this fixed-point\nnumber as a byte array in native byte order.</p>\n<h5 id=\"examples-17\"><a class=\"doc-anchor\" href=\"#examples-17\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>val = Fix::from_bits(<span class=\"number\">0x12</span>);\n<span class=\"macro\">assert_eq!</span>(\n    val.to_ne_bytes(),\n    <span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"big\"</span>) {\n        [<span class=\"number\">0x12</span>]\n    } <span class=\"kw\">else </span>{\n        [<span class=\"number\">0x12</span>]\n    }\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_ones\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.count_ones\" class=\"fn\">count_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of ones in the binary\nrepresentation.</p>\n<h5 id=\"examples-18\"><a class=\"doc-anchor\" href=\"#examples-18\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>f = Fix::from_bits(<span class=\"number\">0b11_0010</span>);\n<span class=\"macro\">assert_eq!</span>(f.count_ones(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_zeros\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.count_zeros\" class=\"fn\">count_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of zeros in the binary\nrepresentation.</p>\n<h5 id=\"examples-19\"><a class=\"doc-anchor\" href=\"#examples-19\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>f = Fix::from_bits(!<span class=\"number\">0b11_0010</span>);\n<span class=\"macro\">assert_eq!</span>(f.count_zeros(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_ones\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.leading_ones\" class=\"fn\">leading_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of leading ones in the binary\nrepresentation.</p>\n<h5 id=\"examples-20\"><a class=\"doc-anchor\" href=\"#examples-20\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>all_ones = !Fix::ZERO;\n<span class=\"kw\">let </span>f = all_ones - Fix::from_bits(<span class=\"number\">0b10_0000</span>);\n<span class=\"macro\">assert_eq!</span>(f.leading_ones(), <span class=\"number\">8 </span>- <span class=\"number\">6</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_zeros\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.leading_zeros\" class=\"fn\">leading_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of leading zeros in the binary\nrepresentation.</p>\n<h5 id=\"examples-21\"><a class=\"doc-anchor\" href=\"#examples-21\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>f = Fix::from_bits(<span class=\"number\">0b10_0000</span>);\n<span class=\"macro\">assert_eq!</span>(f.leading_zeros(), <span class=\"number\">8 </span>- <span class=\"number\">6</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_ones\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.trailing_ones\" class=\"fn\">trailing_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of trailing ones in the binary\nrepresentation.</p>\n<h5 id=\"examples-22\"><a class=\"doc-anchor\" href=\"#examples-22\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>f = Fix::from_bits(<span class=\"number\">0b101_1111</span>);\n<span class=\"macro\">assert_eq!</span>(f.trailing_ones(), <span class=\"number\">5</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_zeros\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.trailing_zeros\" class=\"fn\">trailing_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of trailing zeros in the binary\nrepresentation.</p>\n<h5 id=\"examples-23\"><a class=\"doc-anchor\" href=\"#examples-23\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>f = Fix::from_bits(<span class=\"number\">0b10_0000</span>);\n<span class=\"macro\">assert_eq!</span>(f.trailing_zeros(), <span class=\"number\">5</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast_signed\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.cast_signed\" class=\"fn\">cast_signed</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the bit pattern of <code>self</code> reinterpreted as a signed\nfixed-point number of the same size.</p>\n<h5 id=\"examples-24\"><a class=\"doc-anchor\" href=\"#examples-24\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::{FixedI8, FixedU8};\n<span class=\"kw\">let </span>n = FixedU8::&lt;U4&gt;::MAX;\n<span class=\"macro\">assert_eq!</span>(n.cast_signed(), -FixedI8::&lt;U4&gt;::DELTA);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.significant_bits\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.significant_bits\" class=\"fn\">significant_bits</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of bits required to represent the value.</p>\n<h5 id=\"examples-25\"><a class=\"doc-anchor\" href=\"#examples-25\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">0</span>).significant_bits(), <span class=\"number\">0</span>);      <span class=\"comment\">// “____.____”\n</span><span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">0.0625</span>).significant_bits(), <span class=\"number\">1</span>); <span class=\"comment\">// “____.___1”\n</span><span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">1</span>).significant_bits(), <span class=\"number\">5</span>);      <span class=\"comment\">// “___1.0000”\n</span><span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3</span>).significant_bits(), <span class=\"number\">6</span>);      <span class=\"comment\">// “__11.0000”</span></code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reverse_bits\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.reverse_bits\" class=\"fn\">reverse_bits</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Reverses the order of the bits of the fixed-point number.</p>\n<h5 id=\"examples-26\"><a class=\"doc-anchor\" href=\"#examples-26\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>bits = <span class=\"number\">0x12_u8</span>;\n<span class=\"kw\">let </span>rev_bits = bits.reverse_bits();\n<span class=\"macro\">assert_eq!</span>(Fix::from_bits(bits).reverse_bits(), Fix::from_bits(rev_bits));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_left\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.rotate_left\" class=\"fn\">rotate_left</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Shifts to the left by <code>n</code> bits, wrapping the\ntruncated bits to the right end.</p>\n<h5 id=\"examples-27\"><a class=\"doc-anchor\" href=\"#examples-27\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>bits: u8 = (<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">8 </span>- <span class=\"number\">3</span>)) | <span class=\"number\">0b1010</span>;\n<span class=\"kw\">let </span>rot = <span class=\"number\">0b1010111</span>;\n<span class=\"macro\">assert_eq!</span>(bits.rotate_left(<span class=\"number\">3</span>), rot);\n<span class=\"macro\">assert_eq!</span>(Fix::from_bits(bits).rotate_left(<span class=\"number\">3</span>), Fix::from_bits(rot));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_right\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.rotate_right\" class=\"fn\">rotate_right</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Shifts to the right by <code>n</code> bits, wrapping the\ntruncated bits to the left end.</p>\n<h5 id=\"examples-28\"><a class=\"doc-anchor\" href=\"#examples-28\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>bits: u8 = <span class=\"number\">0b1010111</span>;\n<span class=\"kw\">let </span>rot = (<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">8 </span>- <span class=\"number\">3</span>)) | <span class=\"number\">0b1010</span>;\n<span class=\"macro\">assert_eq!</span>(bits.rotate_right(<span class=\"number\">3</span>), rot);\n<span class=\"macro\">assert_eq!</span>(Fix::from_bits(bits).rotate_right(<span class=\"number\">3</span>), Fix::from_bits(rot));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.is_zero\" class=\"fn\">is_zero</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>true</code></a> if the number is zero.</p>\n<h5 id=\"examples-29\"><a class=\"doc-anchor\" href=\"#examples-29\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert!</span>(Fix::ZERO.is_zero());\n<span class=\"macro\">assert!</span>(!Fix::from_num(<span class=\"number\">5</span>).is_zero());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_power_of_two\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.is_power_of_two\" class=\"fn\">is_power_of_two</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>true</code></a> if the fixed-point number is\n2<sup><i>k</i></sup> for some integer <i>k</i>.</p>\n<h5 id=\"examples-30\"><a class=\"doc-anchor\" href=\"#examples-30\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"comment\">// 3/8 is 0.0110\n</span><span class=\"kw\">let </span>three_eights = Fix::from_bits(<span class=\"number\">0b0110</span>);\n<span class=\"comment\">// 1/2 is 0.1000\n</span><span class=\"kw\">let </span>half = Fix::from_bits(<span class=\"number\">0b1000</span>);\n<span class=\"macro\">assert!</span>(!three_eights.is_power_of_two());\n<span class=\"macro\">assert!</span>(half.is_power_of_two());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wide_mul\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wide_mul\" class=\"fn\">wide_mul</a>&lt;RhsFrac&gt;(\n    self,\n    rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;RhsFrac&gt;,\n) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.Sum.html\" title=\"type fixed::types::extra::Sum\">Sum</a>&lt;Frac, RhsFrac&gt;&gt;<div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;RhsFrac&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Multiplies two fixed-point numbers and returns a\nwider type to retain all precision.</p>\n<p>If <code>self</code> has <i>f</i> fractional bits and 8 − <i>f</i>\ninteger bits, and <code>rhs</code> has <i>g</i> fractional bits and 8 − <i>g</i> integer bits, then the returned fixed-point number will\nhave <i>f</i> + <i>g</i> fractional bits and 16 − <i>f</i> − <i>g</i> integer bits.</p>\n<h5 id=\"examples-31\"><a class=\"doc-anchor\" href=\"#examples-31\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::{U2, U4};\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"comment\">// decimal: 1.25 × 1.0625 = 1.328_125\n// binary: 1.01 × 1.0001 = 1.010101\n</span><span class=\"kw\">let </span>a = FixedU8::&lt;U2&gt;::from_num(<span class=\"number\">1.25</span>);\n<span class=\"kw\">let </span>b = FixedU8::&lt;U4&gt;::from_num(<span class=\"number\">1.0625</span>);\n<span class=\"macro\">assert_eq!</span>(a.wide_mul(b), <span class=\"number\">1.328_125</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wide_mul_signed\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wide_mul_signed\" class=\"fn\">wide_mul_signed</a>&lt;RhsFrac&gt;(\n    self,\n    rhs: <a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;RhsFrac&gt;,\n) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.Sum.html\" title=\"type fixed::types::extra::Sum\">Sum</a>&lt;Frac, RhsFrac&gt;&gt;<div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;RhsFrac&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Multiplies a signed fixed-point number and returns a\nwider signed type to retain all precision.</p>\n<p>If <code>self</code> has <i>f</i> fractional bits and\n8 − <i>f</i>\ninteger bits, and <code>rhs</code> has <i>g</i> fractional bits and\n8 − <i>g</i>\ninteger bits, then the returned fixed-point number will\nhave <i>f</i> + <i>g</i> fractional bits and\n16 − <i>f</i> − <i>g</i>\ninteger bits.</p>\n<h5 id=\"examples-32\"><a class=\"doc-anchor\" href=\"#examples-32\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::{U2, U4};\n<span class=\"kw\">use </span>fixed::{FixedI8, FixedU8};\n<span class=\"comment\">// decimal: 1.25 × -1.0625 = -1.328_125\n// binary: 1.01 × -1.0001 = -1.010101\n</span><span class=\"kw\">let </span>a = FixedU8::&lt;U2&gt;::from_num(<span class=\"number\">1.25</span>);\n<span class=\"kw\">let </span>b = FixedI8::&lt;U4&gt;::from_num(-<span class=\"number\">1.0625</span>);\n<span class=\"macro\">assert_eq!</span>(a.wide_mul_signed(b), -<span class=\"number\">1.328_125</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wide_div\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wide_div\" class=\"fn\">wide_div</a>&lt;RhsFrac&gt;(\n    self,\n    rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;RhsFrac&gt;,\n) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.Diff.html\" title=\"type fixed::types::extra::Diff\">Diff</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.Sum.html\" title=\"type fixed::types::extra::Sum\">Sum</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.U8.html\" title=\"type fixed::types::extra::U8\">U8</a>, Frac&gt;, RhsFrac&gt;&gt;<div class=\"where\">where\n    <a class=\"type\" href=\"fixed/types/extra/type.U8.html\" title=\"type fixed::types::extra::U8\">U8</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Frac&gt;,\n    <a class=\"type\" href=\"fixed/types/extra/type.Sum.html\" title=\"type fixed::types::extra::Sum\">Sum</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.U8.html\" title=\"type fixed::types::extra::U8\">U8</a>, Frac&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;RhsFrac&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Divides two fixed-point numbers and returns a\nwider type to retain more precision.</p>\n<p>If <code>self</code> has <i>f</i> fractional bits\nand 8 − <i>f</i> integer bits, and <code>rhs</code> has\n<i>g</i> fractional bits and 8 − <i>g</i> integer\nbits, then the returned fixed-point number will\nhave 8 + <i>f</i> − <i>g</i> fractional\nbits and 8 − <i>f</i> + <i>g</i> integer\nbits.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>Panics if the divisor is zero.</p>\n<h5 id=\"examples-33\"><a class=\"doc-anchor\" href=\"#examples-33\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::{U3, U5, U6};\n<span class=\"kw\">use </span>fixed::{FixedU8, FixedU16};\n<span class=\"comment\">// decimal: 4.625 / 0.03125 = 148\n// binary: 100.101 / 0.00001 = 10010100\n</span><span class=\"kw\">let </span>a = FixedU8::&lt;U3&gt;::from_num(<span class=\"number\">4.625</span>);\n<span class=\"kw\">let </span>b = FixedU8::&lt;U5&gt;::from_num(<span class=\"number\">0.03125</span>);\n<span class=\"kw\">let </span>ans: FixedU16&lt;U6&gt; = a.wide_div(b);\n<span class=\"macro\">assert_eq!</span>(ans, <span class=\"number\">148</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wide_sdiv_signed\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wide_sdiv_signed\" class=\"fn\">wide_sdiv_signed</a>&lt;RhsFrac&gt;(\n    self,\n    rhs: <a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;RhsFrac&gt;,\n) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.Diff.html\" title=\"type fixed::types::extra::Diff\">Diff</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.Sum.html\" title=\"type fixed::types::extra::Sum\">Sum</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.U7.html\" title=\"type fixed::types::extra::U7\">U7</a>, Frac&gt;, RhsFrac&gt;&gt;<div class=\"where\">where\n    <a class=\"type\" href=\"fixed/types/extra/type.U7.html\" title=\"type fixed::types::extra::U7\">U7</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Frac&gt;,\n    <a class=\"type\" href=\"fixed/types/extra/type.Sum.html\" title=\"type fixed::types::extra::Sum\">Sum</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.U7.html\" title=\"type fixed::types::extra::U7\">U7</a>, Frac&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;RhsFrac&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Divides by a signed fixed-point number and returns a\nwider signed type to retain more precision.</p>\n<p>If <code>self</code> has <i>f</i> fractional bits and\n8 − <i>f</i>\ninteger bits, and <code>rhs</code> has <i>g</i> fractional bits and\n8 − <i>g</i>\ninteger bits, then the returned fixed-point number will have\n7 + <i>f</i> − <i>g</i>\nfractional bits and\n9 − <i>f</i> + <i>g</i>\ninteger bits.</p>\n<p>See also\n<code><a href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\"><code>FixedI8</code></a>::<a href=\"fixed/struct.FixedI8.html#method.wide_sdiv\" title=\"method fixed::FixedI8::wide_sdiv\">wide_sdiv</a></code>.</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>Panics if the divisor is zero.</p>\n<h5 id=\"examples-34\"><a class=\"doc-anchor\" href=\"#examples-34\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::{U4, U5, U6};\n<span class=\"kw\">use </span>fixed::{FixedU8, FixedI8, FixedI16};\n<span class=\"comment\">// decimal: 4.625 / -0.03125 = -148\n// binary: 100.101 / -0.00001 = -10010100\n</span><span class=\"kw\">let </span>a = FixedU8::&lt;U4&gt;::from_num(<span class=\"number\">4.625</span>);\n<span class=\"kw\">let </span>b = FixedI8::&lt;U5&gt;::from_num(-<span class=\"number\">0.03125</span>);\n<span class=\"kw\">let </span>ans: FixedI16&lt;U6&gt; = a.wide_sdiv_signed(b);\n<span class=\"macro\">assert_eq!</span>(ans, -<span class=\"number\">148</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_add\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.mul_add\" class=\"fn\">mul_add</a>&lt;MulFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt;(\n    self,\n    mul: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;MulFrac&gt;,\n    add: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;,\n) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>.</p>\n<p>The <code>mul</code> parameter can have a fixed-point type like\n<code>self</code> but with a different number of fractional bits.</p>\n<h5 id=\"panics-2\"><a class=\"doc-anchor\" href=\"#panics-2\">§</a>Panics</h5>\n<p>When debug assertions are enabled, this method panics if the result\noverflows. When debug assertions are not enabled, the wrapped value\ncan be returned, but it is not considered a breaking change if in the\nfuture it panics; if wrapping is required use <a href=\"fixed/struct.FixedU8.html#method.wrapping_mul_add\" title=\"method fixed::FixedU8::wrapping_mul_add\"><code>wrapping_mul_add</code></a>\ninstead.</p>\n<h5 id=\"examples-35\"><a class=\"doc-anchor\" href=\"#examples-35\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(\n    Fix::from_num(<span class=\"number\">4</span>).mul_add(Fix::from_num(<span class=\"number\">0.5</span>), Fix::from_num(<span class=\"number\">3</span>)),\n    Fix::from_num(<span class=\"number\">5</span>)\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_euclid\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.rem_euclid\" class=\"fn\">rem_euclid</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Remainder for Euclidean division.</p>\n<h5 id=\"panics-3\"><a class=\"doc-anchor\" href=\"#panics-3\">§</a>Panics</h5>\n<p>Panics if the divisor is zero.</p>\n<h5 id=\"examples-36\"><a class=\"doc-anchor\" href=\"#examples-36\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">7.5</span>).rem_euclid(Fix::from_num(<span class=\"number\">2</span>)), Fix::from_num(<span class=\"number\">1.5</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unbounded_shl\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unbounded_shl\" class=\"fn\">unbounded_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Unbounded shift left. Computes <code>self &lt;&lt; rhs</code>, without bounding\nthe value of <code>rhs</code>.</p>\n<p>If <code>rhs</code> ≥ 8\nthe entire value is shifted out, and 0 is returned.</p>\n<h5 id=\"examples-37\"><a class=\"doc-anchor\" href=\"#examples-37\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">1.5</span>).unbounded_shl(<span class=\"number\">2</span>), Fix::from_num(<span class=\"number\">1.5</span>) &lt;&lt; <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">1.5</span>).unbounded_shl(<span class=\"number\">8</span>), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unbounded_shr\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unbounded_shr\" class=\"fn\">unbounded_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Unbounded shift right. Computes <code>self &gt;&gt; rhs</code>, without bounding\nthe value of <code>rhs</code>.</p>\n<p>If <code>rhs</code> ≥ 8\nthe entire value is shifted out, and\n0 is returned.</p>\n<h5 id=\"examples-38\"><a class=\"doc-anchor\" href=\"#examples-38\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">1.5</span>).unbounded_shr(<span class=\"number\">2</span>), Fix::from_num(<span class=\"number\">1.5</span>) &gt;&gt; <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">1.5</span>).unbounded_shr(<span class=\"number\">8</span>), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dist\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.dist\" class=\"fn\">dist</a>(self, other: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the distance from <code>self</code> to <code>other</code>.</p>\n<p>The distance is the absolute value of the difference.</p>\n<h5 id=\"examples-39\"><a class=\"doc-anchor\" href=\"#examples-39\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::ONE.dist(Fix::from_num(<span class=\"number\">5</span>)), Fix::from_num(<span class=\"number\">4</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs_diff\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.abs_diff\" class=\"fn\">abs_diff</a>(self, other: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the absolute value of the difference between <code>self</code> and <code>other</code>.</p>\n<p>This method is the same as <a href=\"fixed/struct.FixedU8.html#method.dist\" title=\"method fixed::FixedU8::dist\"><code>dist</code></a> for unsigned fixed-point numbers.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mean\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.mean\" class=\"fn\">mean</a>(self, other: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the mean of <code>self</code> and <code>other</code>.</p>\n<h5 id=\"examples-40\"><a class=\"doc-anchor\" href=\"#examples-40\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3</span>).mean(Fix::from_num(<span class=\"number\">4</span>)), Fix::from_num(<span class=\"number\">3.5</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hypot\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.hypot\" class=\"fn\">hypot</a>(self, other: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Compute the hypotenuse of a right triange.</p>\n<p>The hypotenuse is equal to the square root of the sum of the squares of the\noperands.</p>\n<p>This method uses an iterative method for its square root, with up to 8\niterations for <a href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\"><code>FixedU8</code></a>. The result is rounded down, and the\nerror is &lt; <a href=\"fixed/struct.FixedU8.html#associatedconstant.DELTA\" title=\"associated constant fixed::FixedU8::DELTA\"><code>DELTA</code></a>. That is,\nresult ≤ √(<code>self</code>² + <code>other</code>²) &lt; result + <code>DELTA</code>.</p>\n<h5 id=\"panics-4\"><a class=\"doc-anchor\" href=\"#panics-4\">§</a>Panics</h5>\n<p>When debug assertions are enabled, this method panics if the result overflows.\nWhen debug assertions are not enabled, the wrapped value can be returned, but it\nis not considered a breaking change if in the future it panics; if wrapping is\nrequired use <a href=\"fixed/struct.FixedU8.html#method.wrapping_hypot\" title=\"method fixed::FixedU8::wrapping_hypot\"><code>wrapping_hypot</code></a> instead.</p>\n<h5 id=\"examples-41\"><a class=\"doc-anchor\" href=\"#examples-41\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n\n<span class=\"comment\">// hypot(3, 4) == 5\n</span><span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3</span>).hypot(Fix::from_num(<span class=\"number\">4</span>)), Fix::from_num(<span class=\"number\">5</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_multiple_of\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.next_multiple_of\" class=\"fn\">next_multiple_of</a>(self, other: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the smallest multiple of <code>other</code> that is ≥ <code>self</code>.</p>\n<h5 id=\"panics-5\"><a class=\"doc-anchor\" href=\"#panics-5\">§</a>Panics</h5>\n<p>Panics if <code>other</code> is zero.</p>\n<p>When debug assertions are enabled, this method also panics if the result\noverflows. When debug assertions are not enabled, the wrapped value can be\nreturned, but it is not considered a breaking change if in the future it panics;\nif wrapping is required use <a href=\"fixed/struct.FixedU8.html#method.wrapping_next_multiple_of\" title=\"method fixed::FixedU8::wrapping_next_multiple_of\"><code>wrapping_next_multiple_of</code></a> instead.</p>\n<h5 id=\"examples-42\"><a class=\"doc-anchor\" href=\"#examples-42\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(\n    Fix::from_num(<span class=\"number\">4</span>).next_multiple_of(Fix::from_num(<span class=\"number\">1.5</span>)),\n    Fix::from_num(<span class=\"number\">4.5</span>)\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inv_lerp\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.inv_lerp\" class=\"fn\">inv_lerp</a>&lt;RetFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt;(\n    self,\n    start: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;,\n    end: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;,\n) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;RetFrac&gt;</h4></section></summary><div class=\"docblock\"><p>Inverse linear interpolation between <code>start</code> and <code>end</code>.</p>\n<p>The computed value can have a fixed-point type like <code>self</code> but with a different\nnumber of fractional bits.</p>\n<p>Returns\n(<code>self</code> − <code>start</code>) / (<code>end</code> − <code>start</code>).\nThis is 0 when <code>self</code> = <code>start</code>, and 1 when <code>self</code> = <code>end</code>.</p>\n<h5 id=\"panics-6\"><a class=\"doc-anchor\" href=\"#panics-6\">§</a>Panics</h5>\n<p>Panics when <code>start</code> = <code>end</code>.</p>\n<p>When debug assertions are enabled, this method also panics if the result\noverflows. When debug assertions are not enabled, the wrapped value can be\nreturned, but it is not considered a breaking change if in the future it panics;\nif wrapping is required use <a href=\"fixed/struct.FixedU8.html#method.wrapping_inv_lerp\" title=\"method fixed::FixedU8::wrapping_inv_lerp\"><code>wrapping_inv_lerp</code></a> instead.</p>\n<h5 id=\"examples-43\"><a class=\"doc-anchor\" href=\"#examples-43\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>start = Fix::from_num(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>end = Fix::from_num(<span class=\"number\">3.5</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2</span>).inv_lerp::&lt;U4&gt;(start, end), <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2.75</span>).inv_lerp::&lt;U4&gt;(start, end), <span class=\"number\">0.5</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3.5</span>).inv_lerp::&lt;U4&gt;(start, end), <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">5</span>).inv_lerp::&lt;U4&gt;(start, end), <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.highest_one\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.highest_one\" class=\"fn\">highest_one</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the highest one in the binary\nrepresentation, or zero if <code>self</code> is zero.</p>\n<p>If <code>self</code> &gt; 0, the highest one is equal to the largest power of two\nthat is ≤ <code>self</code>.</p>\n<h5 id=\"examples-44\"><a class=\"doc-anchor\" href=\"#examples-44\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_bits(<span class=\"number\">0b11_0010</span>).highest_one(), Fix::from_bits(<span class=\"number\">0b10_0000</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">0.3</span>).highest_one(), Fix::from_num(<span class=\"number\">0.25</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">4</span>).highest_one(), Fix::from_num(<span class=\"number\">4</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">6.5</span>).highest_one(), Fix::from_num(<span class=\"number\">4</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::ZERO.highest_one(), Fix::ZERO);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_power_of_two\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.next_power_of_two\" class=\"fn\">next_power_of_two</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the smallest power of two that is ≥ <code>self</code>.</p>\n<h5 id=\"panics-7\"><a class=\"doc-anchor\" href=\"#panics-7\">§</a>Panics</h5>\n<p>When debug assertions are enabled, panics if the next power of two is\ntoo large to represent. When debug assertions are not enabled, zero\ncan be returned, but it is not considered a breaking change if in the\nfuture it panics; if this is not desirable use\n<a href=\"fixed/struct.FixedU8.html#method.checked_next_power_of_two\" title=\"method fixed::FixedU8::checked_next_power_of_two\"><code>checked_next_power_of_two</code></a> instead.</p>\n<h5 id=\"examples-45\"><a class=\"doc-anchor\" href=\"#examples-45\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_bits(<span class=\"number\">0b11_0010</span>).next_power_of_two(), Fix::from_bits(<span class=\"number\">0b100_0000</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">0.3</span>).next_power_of_two(), Fix::from_num(<span class=\"number\">0.5</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">4</span>).next_power_of_two(), Fix::from_num(<span class=\"number\">4</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">6.5</span>).next_power_of_two(), Fix::from_num(<span class=\"number\">8</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_signed\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.add_signed\" class=\"fn\">add_signed</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Addition with a signed fixed-point number.</p>\n<h5 id=\"panics-8\"><a class=\"doc-anchor\" href=\"#panics-8\">§</a>Panics</h5>\n<p>When debug assertions are enabled, this method panics if the\nresult overflows. When debug assertions are not enabled, the\nwrapped value can be returned, but it is not considered a\nbreaking change if in the future it panics; if wrapping is\nrequired use <a href=\"fixed/struct.FixedU8.html#method.wrapping_add_signed\" title=\"method fixed::FixedU8::wrapping_add_signed\"><code>wrapping_add_signed</code></a> instead.</p>\n<h5 id=\"examples-46\"><a class=\"doc-anchor\" href=\"#examples-46\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::{FixedI8, FixedU8};\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">type </span>IFix = FixedI8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">5</span>).add_signed(IFix::from_num(-<span class=\"number\">3</span>)), <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_signed\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.sub_signed\" class=\"fn\">sub_signed</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Subtraction with a signed fixed-point number.</p>\n<h5 id=\"panics-9\"><a class=\"doc-anchor\" href=\"#panics-9\">§</a>Panics</h5>\n<p>When debug assertions are enabled, this method panics if the\nresult overflows. When debug assertions are not enabled, the\nwrapped value can be returned, but it is not considered a\nbreaking change if in the future it panics; if wrapping is\nrequired use <a href=\"fixed/struct.FixedU8.html#method.wrapping_sub_signed\" title=\"method fixed::FixedU8::wrapping_sub_signed\"><code>wrapping_sub_signed</code></a> instead.</p>\n<h5 id=\"examples-47\"><a class=\"doc-anchor\" href=\"#examples-47\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::{FixedI8, FixedU8};\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">type </span>IFix = FixedI8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">5</span>).sub_signed(IFix::from_num(-<span class=\"number\">3</span>)), <span class=\"number\">8</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.const_not\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.const_not\" class=\"fn\">const_not</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Bitwise NOT. Usable in constant context.</p>\n<p>This is equivalent to the <code>!</code> operator and\n<code><a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\">Not</a>::<a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Not.html#tymethod.not\" title=\"method core::ops::bit::Not::not\">not</a></code>, but\ncan also be used in constant context. Unless required in constant\ncontext, use the operator or trait instead.</p>\n<h5 id=\"planned-deprecation\"><a class=\"doc-anchor\" href=\"#planned-deprecation\">§</a>Planned deprecation</h5>\n<p>This method will be deprecated when the <code>!</code> operator and the\n<a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\"><code>Not</code></a> trait are usable in constant context.</p>\n<h5 id=\"examples-48\"><a class=\"doc-anchor\" href=\"#examples-48\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">const </span>A: Fix = Fix::from_bits(<span class=\"number\">0x3E</span>);\n<span class=\"kw\">const </span>NOT_A: Fix = A.const_not();\n<span class=\"macro\">assert_eq!</span>(NOT_A, !A);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.const_bitand\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.const_bitand\" class=\"fn\">const_bitand</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Bitwise AND. Usable in constant context.</p>\n<p>This is equivalent to the <code>&amp;</code> operator and\n<code><a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>::<a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" title=\"method core::ops::bit::BitAnd::bitand\">bitand</a></code>,\nbut can also be used in constant context. Unless required in constant\ncontext, use the operator or trait instead.</p>\n<h5 id=\"planned-deprecation-1\"><a class=\"doc-anchor\" href=\"#planned-deprecation-1\">§</a>Planned deprecation</h5>\n<p>This method will be deprecated when the <code>&amp;</code> operator and the\n<a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\"><code>BitAnd</code></a> trait are usable in constant context.</p>\n<h5 id=\"examples-49\"><a class=\"doc-anchor\" href=\"#examples-49\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">const </span>A: Fix = Fix::from_bits(<span class=\"number\">0x3E</span>);\n<span class=\"kw\">const </span>B: Fix = Fix::from_bits(<span class=\"number\">0x55</span>);\n<span class=\"kw\">const </span>A_BITAND_B: Fix = A.const_bitand(B);\n<span class=\"macro\">assert_eq!</span>(A_BITAND_B, A &amp; B);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.const_bitor\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.const_bitor\" class=\"fn\">const_bitor</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Bitwise OR. Usable in constant context.</p>\n<p>This is equivalent to the <code>|</code> operator and\n<code><a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>::<a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitOr.html#tymethod.bitor\" title=\"method core::ops::bit::BitOr::bitor\">bitor</a></code>,\nbut can also be used in constant context. Unless required in constant\ncontext, use the operator or trait instead.</p>\n<h5 id=\"planned-deprecation-2\"><a class=\"doc-anchor\" href=\"#planned-deprecation-2\">§</a>Planned deprecation</h5>\n<p>This method will be deprecated when the <code>|</code> operator and the\n<a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\"><code>BitOr</code></a> trait are usable in constant context.</p>\n<h5 id=\"examples-50\"><a class=\"doc-anchor\" href=\"#examples-50\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">const </span>A: Fix = Fix::from_bits(<span class=\"number\">0x3E</span>);\n<span class=\"kw\">const </span>B: Fix = Fix::from_bits(<span class=\"number\">0x55</span>);\n<span class=\"kw\">const </span>A_BITOR_B: Fix = A.const_bitor(B);\n<span class=\"macro\">assert_eq!</span>(A_BITOR_B, A | B);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.const_bitxor\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.const_bitxor\" class=\"fn\">const_bitxor</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Bitwise XOR. Usable in constant context.</p>\n<p>This is equivalent to the <code>^</code> operator and\n<code><a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>::<a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" title=\"method core::ops::bit::BitXor::bitxor\">bitxor</a></code>,\nbut can also be used in constant context. Unless required in constant\ncontext, use the operator or trait instead.</p>\n<h5 id=\"planned-deprecation-3\"><a class=\"doc-anchor\" href=\"#planned-deprecation-3\">§</a>Planned deprecation</h5>\n<p>This method will be deprecated when the <code>^</code> operator and the\n<a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\"><code>BitXor</code></a> trait are usable in constant context.</p>\n<h5 id=\"examples-51\"><a class=\"doc-anchor\" href=\"#examples-51\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">const </span>A: Fix = Fix::from_bits(<span class=\"number\">0x3E</span>);\n<span class=\"kw\">const </span>B: Fix = Fix::from_bits(<span class=\"number\">0x55</span>);\n<span class=\"kw\">const </span>A_BITXOR_B: Fix = A.const_bitxor(B);\n<span class=\"macro\">assert_eq!</span>(A_BITXOR_B, A ^ B);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_neg\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_neg\" class=\"fn\">checked_neg</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked negation. Returns the negated value, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.</p>\n<p>Only zero can be negated without overflow.</p>\n<h5 id=\"examples-52\"><a class=\"doc-anchor\" href=\"#examples-52\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::ZERO.checked_neg(), <span class=\"prelude-val\">Some</span>(Fix::ZERO));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">5</span>).checked_neg(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_add\" class=\"fn\">checked_add</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked addition. Returns the sum, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.</p>\n<h5 id=\"examples-53\"><a class=\"doc-anchor\" href=\"#examples-53\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>((Fix::MAX - Fix::ONE).checked_add(Fix::ONE), <span class=\"prelude-val\">Some</span>(Fix::MAX));\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.checked_add(Fix::ONE), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_sub\" class=\"fn\">checked_sub</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked subtraction. Returns the difference, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.</p>\n<h5 id=\"examples-54\"><a class=\"doc-anchor\" href=\"#examples-54\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>((Fix::MIN + Fix::ONE).checked_sub(Fix::ONE), <span class=\"prelude-val\">Some</span>(Fix::MIN));\n<span class=\"macro\">assert_eq!</span>(Fix::MIN.checked_sub(Fix::ONE), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_rem\" class=\"fn\">checked_rem</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked remainder. Returns the remainder, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if\nthe divisor is zero.</p>\n<h5 id=\"examples-55\"><a class=\"doc-anchor\" href=\"#examples-55\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">1.5</span>).checked_rem(Fix::ONE), <span class=\"prelude-val\">Some</span>(Fix::from_num(<span class=\"number\">0.5</span>)));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">1.5</span>).checked_rem(Fix::ZERO), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul_add\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_mul_add\" class=\"fn\">checked_mul_add</a>&lt;MulFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt;(\n    self,\n    mul: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;MulFrac&gt;,\n    add: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked multiply and add.\nReturns <code>self</code> × <code>mul</code> + <code>add</code>, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.</p>\n<p>The <code>mul</code> parameter can have a fixed-point type like\n<code>self</code> but with a different number of fractional bits.</p>\n<h5 id=\"examples-56\"><a class=\"doc-anchor\" href=\"#examples-56\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(\n    Fix::from_num(<span class=\"number\">4</span>).checked_mul_add(Fix::from_num(<span class=\"number\">0.5</span>), Fix::from_num(<span class=\"number\">3</span>)),\n    <span class=\"prelude-val\">Some</span>(Fix::from_num(<span class=\"number\">5</span>))\n);\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.checked_mul_add(Fix::ONE, Fix::ZERO), <span class=\"prelude-val\">Some</span>(Fix::MAX));\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.checked_mul_add(Fix::ONE, Fix::DELTA), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul_int\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_mul_int\" class=\"fn\">checked_mul_int</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked multiplication by an integer. Returns the\nproduct, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.</p>\n<h5 id=\"examples-57\"><a class=\"doc-anchor\" href=\"#examples-57\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.checked_mul_int(<span class=\"number\">1</span>), <span class=\"prelude-val\">Some</span>(Fix::MAX));\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.checked_mul_int(<span class=\"number\">2</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div_int\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_div_int\" class=\"fn\">checked_div_int</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked division by an integer. Returns the quotient, or\n<a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the divisor is zero.</p>\n<h5 id=\"examples-58\"><a class=\"doc-anchor\" href=\"#examples-58\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.checked_div_int(<span class=\"number\">1</span>), <span class=\"prelude-val\">Some</span>(Fix::MAX));\n<span class=\"macro\">assert_eq!</span>(Fix::ONE.checked_div_int(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem_euclid\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_rem_euclid\" class=\"fn\">checked_rem_euclid</a>(\n    self,\n    rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked remainder for Euclidean division. Returns the\nremainder, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the divisor is zero.</p>\n<h5 id=\"examples-59\"><a class=\"doc-anchor\" href=\"#examples-59\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>num = Fix::from_num(<span class=\"number\">7.5</span>);\n<span class=\"macro\">assert_eq!</span>(num.checked_rem_euclid(Fix::from_num(<span class=\"number\">2</span>)), <span class=\"prelude-val\">Some</span>(Fix::from_num(<span class=\"number\">1.5</span>)));\n<span class=\"macro\">assert_eq!</span>(num.checked_rem_euclid(Fix::ZERO), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shl\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_shl\" class=\"fn\">checked_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked shift left. Returns the shifted number,\nor <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if <code>rhs</code> ≥ 8.</p>\n<h5 id=\"examples-60\"><a class=\"doc-anchor\" href=\"#examples-60\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>((Fix::ONE / <span class=\"number\">2</span>).checked_shl(<span class=\"number\">3</span>), <span class=\"prelude-val\">Some</span>(Fix::from_num(<span class=\"number\">4</span>)));\n<span class=\"macro\">assert_eq!</span>((Fix::ONE / <span class=\"number\">2</span>).checked_shl(<span class=\"number\">8</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shr\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_shr\" class=\"fn\">checked_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked shift right. Returns the shifted number,\nor <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if <code>rhs</code> ≥ 8.</p>\n<h5 id=\"examples-61\"><a class=\"doc-anchor\" href=\"#examples-61\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">4</span>).checked_shr(<span class=\"number\">3</span>), <span class=\"prelude-val\">Some</span>(Fix::ONE / <span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">4</span>).checked_shr(<span class=\"number\">8</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_dist\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_dist\" class=\"fn\">checked_dist</a>(self, other: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked distance. Returns the distance from <code>self</code> to <code>other</code>.</p>\n<p>The distance is the absolute value of the difference.</p>\n<p>Can never overflow for unsigned types.</p>\n<h5 id=\"examples-62\"><a class=\"doc-anchor\" href=\"#examples-62\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::ONE.checked_dist(Fix::from_num(<span class=\"number\">5</span>)), <span class=\"prelude-val\">Some</span>(Fix::from_num(<span class=\"number\">4</span>)));\n<span class=\"macro\">assert_eq!</span>(Fix::ZERO.checked_dist(Fix::MAX), <span class=\"prelude-val\">Some</span>(Fix::MAX));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_hypot\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_hypot\" class=\"fn\">checked_hypot</a>(self, other: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Compute the hypotenuse of a right triange, returning <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.</p>\n<p>The hypotenuse is equal to the square root of the sum of the squares of the\noperands.</p>\n<p>This method uses an iterative method for its square root, with up to 8\niterations for <a href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\"><code>FixedU8</code></a>. The result is rounded down, and the\nerror is &lt; <a href=\"fixed/struct.FixedU8.html#associatedconstant.DELTA\" title=\"associated constant fixed::FixedU8::DELTA\"><code>DELTA</code></a>. That is,\nresult ≤ √(<code>self</code>² + <code>other</code>²) &lt; result + <code>DELTA</code>.</p>\n<h5 id=\"examples-63\"><a class=\"doc-anchor\" href=\"#examples-63\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n\n<span class=\"comment\">// hypot(3, 4) == 5\n</span><span class=\"macro\">assert_eq!</span>(\n    Fix::from_num(<span class=\"number\">3</span>).checked_hypot(Fix::from_num(<span class=\"number\">4</span>)),\n    <span class=\"prelude-val\">Some</span>(Fix::from_num(<span class=\"number\">5</span>))\n);\n\n<span class=\"comment\">// hypot(8, 15) == 17, which does not fit\n</span><span class=\"macro\">assert_eq!</span>(\n    Fix::from_num(<span class=\"number\">8</span>).checked_hypot(Fix::from_num(<span class=\"number\">15</span>)),\n    <span class=\"prelude-val\">None\n</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_next_multiple_of\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_next_multiple_of\" class=\"fn\">checked_next_multiple_of</a>(\n    self,\n    other: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked next multiple of <code>other</code>. Returns the next multiple, or\n<a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if <code>other</code> is zero or on overflow.</p>\n<p>The next multiple is the smallest multiple of <code>other</code> that is ≥ <code>self</code>.</p>\n<h5 id=\"examples-64\"><a class=\"doc-anchor\" href=\"#examples-64\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(\n    Fix::from_num(<span class=\"number\">4</span>).checked_next_multiple_of(Fix::from_num(<span class=\"number\">1.5</span>)),\n    <span class=\"prelude-val\">Some</span>(Fix::from_num(<span class=\"number\">4.5</span>))\n);\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">4</span>).checked_next_multiple_of(Fix::ZERO), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.checked_next_multiple_of(Fix::from_num(<span class=\"number\">2</span>)), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_inv_lerp\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_inv_lerp\" class=\"fn\">checked_inv_lerp</a>&lt;RetFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt;(\n    self,\n    start: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;,\n    end: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;RetFrac&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked inverse linear interpolation between <code>start</code> and <code>end</code>.\nReturns <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow or when <code>start</code> = <code>end</code>.</p>\n<p>The computed value can have a fixed-point type like <code>self</code> but with a different\nnumber of fractional bits.</p>\n<p>Returns\n(<code>self</code> − <code>start</code>) / (<code>end</code> − <code>start</code>).\nThis is 0 when <code>self</code> = <code>start</code>, and 1 when <code>self</code> = <code>end</code>.</p>\n<h5 id=\"examples-65\"><a class=\"doc-anchor\" href=\"#examples-65\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>two = Fix::from_num(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>four = Fix::from_num(<span class=\"number\">4</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3</span>).checked_inv_lerp::&lt;U4&gt;(two, four), <span class=\"prelude-val\">Some</span>(Fix::from_num(<span class=\"number\">0.5</span>)));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2</span>).checked_inv_lerp::&lt;U4&gt;(two, two), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.checked_inv_lerp::&lt;U4&gt;(Fix::ZERO, Fix::from_num(<span class=\"number\">0.5</span>)), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_next_power_of_two\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_next_power_of_two\" class=\"fn\">checked_next_power_of_two</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the smallest power of two that is ≥ <code>self</code>, or\n<a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the next power of two is too large to represent.</p>\n<h5 id=\"examples-66\"><a class=\"doc-anchor\" href=\"#examples-66\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"comment\">// 3/8 is 0.0110\n</span><span class=\"kw\">let </span>three_eights = Fix::from_bits(<span class=\"number\">0b0110</span>);\n<span class=\"comment\">// 1/2 is 0.1000\n</span><span class=\"kw\">let </span>half = Fix::from_bits(<span class=\"number\">0b1000</span>);\n<span class=\"macro\">assert_eq!</span>(three_eights.checked_next_power_of_two(), <span class=\"prelude-val\">Some</span>(half));\n<span class=\"macro\">assert!</span>(Fix::MAX.checked_next_power_of_two().is_none());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add_signed\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_add_signed\" class=\"fn\">checked_add_signed</a>(\n    self,\n    rhs: <a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked addition with a signed fixed-point number.\nReturns the sum, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.</p>\n<h5 id=\"examples-67\"><a class=\"doc-anchor\" href=\"#examples-67\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::{FixedI8, FixedU8};\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">type </span>IFix = FixedI8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(\n    Fix::from_num(<span class=\"number\">5</span>).checked_add_signed(IFix::from_num(-<span class=\"number\">3</span>)),\n    <span class=\"prelude-val\">Some</span>(Fix::from_num(<span class=\"number\">2</span>))\n);\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2</span>).checked_add_signed(IFix::from_num(-<span class=\"number\">3</span>)), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub_signed\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_sub_signed\" class=\"fn\">checked_sub_signed</a>(\n    self,\n    rhs: <a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked subtraction with a signed fixed-point number.\nReturns the difference, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.</p>\n<h5 id=\"examples-68\"><a class=\"doc-anchor\" href=\"#examples-68\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::{FixedI8, FixedU8};\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">type </span>IFix = FixedI8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(\n    Fix::from_num(<span class=\"number\">5</span>).checked_sub_signed(IFix::from_num(-<span class=\"number\">3</span>)),\n    <span class=\"prelude-val\">Some</span>(Fix::from_num(<span class=\"number\">8</span>))\n);\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2</span>).checked_sub_signed(IFix::from_num(<span class=\"number\">3</span>)), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_neg\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_neg\" class=\"fn\">saturating_neg</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating negation. Returns the negated value, saturating on overflow.</p>\n<p>This method always returns zero.</p>\n<h5 id=\"examples-69\"><a class=\"doc-anchor\" href=\"#examples-69\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::ZERO.saturating_neg(), Fix::from_num(<span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">5</span>).saturating_neg(), Fix::ZERO);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating addition. Returns the sum, saturating on overflow.</p>\n<h5 id=\"examples-70\"><a class=\"doc-anchor\" href=\"#examples-70\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3</span>).saturating_add(Fix::from_num(<span class=\"number\">2</span>)), Fix::from_num(<span class=\"number\">5</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.saturating_add(Fix::ONE), Fix::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_sub\" class=\"fn\">saturating_sub</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating subtraction. Returns the difference, saturating on overflow.</p>\n<h5 id=\"examples-71\"><a class=\"doc-anchor\" href=\"#examples-71\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">5</span>).saturating_sub(Fix::from_num(<span class=\"number\">3</span>)), Fix::from_num(<span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::ZERO.saturating_sub(Fix::ONE), Fix::ZERO);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul_add\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_mul_add\" class=\"fn\">saturating_mul_add</a>&lt;MulFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt;(\n    self,\n    mul: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;MulFrac&gt;,\n    add: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;,\n) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating multiply and add.\nReturns <code>self</code> × <code>mul</code> + <code>add</code>, saturating on overflow.</p>\n<p>The <code>mul</code> parameter can have a fixed-point type like\n<code>self</code> but with a different number of fractional bits.</p>\n<h5 id=\"examples-72\"><a class=\"doc-anchor\" href=\"#examples-72\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(\n    Fix::from_num(<span class=\"number\">4</span>).saturating_mul_add(Fix::from_num(<span class=\"number\">0.5</span>), Fix::from_num(<span class=\"number\">3</span>)),\n    Fix::from_num(<span class=\"number\">5</span>)\n);\n<span class=\"kw\">let </span>half_max = Fix::MAX / <span class=\"number\">2</span>;\n<span class=\"macro\">assert_eq!</span>(half_max.saturating_mul_add(Fix::from_num(<span class=\"number\">3</span>), half_max), Fix::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul_int\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_mul_int\" class=\"fn\">saturating_mul_int</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating multiplication by an integer. Returns the product, saturating on overflow.</p>\n<h5 id=\"examples-73\"><a class=\"doc-anchor\" href=\"#examples-73\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3</span>).saturating_mul_int(<span class=\"number\">2</span>), Fix::from_num(<span class=\"number\">6</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.saturating_mul_int(<span class=\"number\">2</span>), Fix::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_div_int\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_div_int\" class=\"fn\">saturating_div_int</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating division by an integer. Returns the quotient.</p>\n<p>Can never overflow for unsigned values.</p>\n<h5 id=\"panics-10\"><a class=\"doc-anchor\" href=\"#panics-10\">§</a>Panics</h5>\n<p>Panics if the divisor is zero.</p>\n<h5 id=\"examples-74\"><a class=\"doc-anchor\" href=\"#examples-74\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"comment\">// 1.5 is binary 1.1\n</span><span class=\"kw\">let </span>one_point_5 = Fix::from_bits(<span class=\"number\">0b11 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3</span>).saturating_div_int(<span class=\"number\">2</span>), one_point_5);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_dist\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_dist\" class=\"fn\">saturating_dist</a>(self, other: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating distance. Returns the distance from <code>self</code> to <code>other</code>.</p>\n<p>The distance is the absolute value of the difference.</p>\n<p>Can never overflow for unsigned types.</p>\n<h5 id=\"examples-75\"><a class=\"doc-anchor\" href=\"#examples-75\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::ONE.saturating_dist(Fix::from_num(<span class=\"number\">5</span>)), Fix::from_num(<span class=\"number\">4</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::ZERO.saturating_dist(Fix::MAX), Fix::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_hypot\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_hypot\" class=\"fn\">saturating_hypot</a>(self, other: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Compute the hypotenuse of a right triange, saturating on overflow.</p>\n<p>The hypotenuse is equal to the square root of the sum of the squares of the\noperands.</p>\n<p>This method uses an iterative method for its square root, with up to 8\niterations for <a href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\"><code>FixedU8</code></a>. The result is rounded down, and the\nerror is &lt; <a href=\"fixed/struct.FixedU8.html#associatedconstant.DELTA\" title=\"associated constant fixed::FixedU8::DELTA\"><code>DELTA</code></a>. That is,\nresult ≤ √(<code>self</code>² + <code>other</code>²) &lt; result + <code>DELTA</code>.</p>\n<h5 id=\"examples-76\"><a class=\"doc-anchor\" href=\"#examples-76\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n\n<span class=\"comment\">// hypot(3, 4) == 5\n</span><span class=\"macro\">assert_eq!</span>(\n    Fix::from_num(<span class=\"number\">3</span>).saturating_hypot(Fix::from_num(<span class=\"number\">4</span>)),\n    Fix::from_num(<span class=\"number\">5</span>)\n);\n\n<span class=\"comment\">// hypot(8, 15) == 17, which does not fit\n</span><span class=\"macro\">assert_eq!</span>(\n    Fix::from_num(<span class=\"number\">8</span>).saturating_hypot(Fix::from_num(<span class=\"number\">15</span>)),\n    Fix::MAX\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_next_multiple_of\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_next_multiple_of\" class=\"fn\">saturating_next_multiple_of</a>(\n    self,\n    other: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;,\n) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating next multiple of <code>other</code>.</p>\n<p>The next multiple is the smallest multiple of <code>other</code> that is ≥ <code>self</code>.</p>\n<h5 id=\"panics-11\"><a class=\"doc-anchor\" href=\"#panics-11\">§</a>Panics</h5>\n<p>Panics if <code>other</code> is zero.</p>\n<h5 id=\"examples-77\"><a class=\"doc-anchor\" href=\"#examples-77\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(\n    Fix::from_num(<span class=\"number\">4</span>).saturating_next_multiple_of(Fix::from_num(<span class=\"number\">1.5</span>)),\n    Fix::from_num(<span class=\"number\">4.5</span>)\n);\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.saturating_next_multiple_of(Fix::from_num(<span class=\"number\">2</span>)), Fix::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_inv_lerp\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_inv_lerp\" class=\"fn\">saturating_inv_lerp</a>&lt;RetFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt;(\n    self,\n    start: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;,\n    end: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;,\n) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;RetFrac&gt;</h4></section></summary><div class=\"docblock\"><p>Inverse linear interpolation between <code>start</code> and <code>end</code>,\nsaturating on overflow.</p>\n<p>The computed value can have a fixed-point type like <code>self</code> but with a different\nnumber of fractional bits.</p>\n<p>Returns\n(<code>self</code> − <code>start</code>) / (<code>end</code> − <code>start</code>).\nThis is 0 when <code>self</code> = <code>start</code>, and 1 when <code>self</code> = <code>end</code>.</p>\n<h5 id=\"panics-12\"><a class=\"doc-anchor\" href=\"#panics-12\">§</a>Panics</h5>\n<p>Panics when <code>start</code> = <code>end</code>.</p>\n<h5 id=\"examples-78\"><a class=\"doc-anchor\" href=\"#examples-78\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>two = Fix::from_num(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>four = Fix::from_num(<span class=\"number\">4</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3</span>).saturating_inv_lerp::&lt;U4&gt;(two, four), <span class=\"number\">0.5</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.saturating_inv_lerp::&lt;U4&gt;(Fix::ZERO, Fix::from_num(<span class=\"number\">0.5</span>)), Fix::MAX);\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.saturating_inv_lerp::&lt;U4&gt;(Fix::from_num(<span class=\"number\">0.5</span>), Fix::ZERO), Fix::MIN);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add_signed\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_add_signed\" class=\"fn\">saturating_add_signed</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating addition with a signed fixed-point number.\nReturns the sum, saturating on overflow.</p>\n<h5 id=\"examples-79\"><a class=\"doc-anchor\" href=\"#examples-79\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::{FixedI8, FixedU8};\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">type </span>IFix = FixedI8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">5</span>).saturating_add_signed(IFix::from_num(-<span class=\"number\">3</span>)), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2</span>).saturating_add_signed(IFix::from_num(-<span class=\"number\">3</span>)), <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.saturating_add_signed(IFix::MAX), Fix::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub_signed\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_sub_signed\" class=\"fn\">saturating_sub_signed</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating subtraction with a signed fixed-point number.\nReturns the difference, saturating on overflow.</p>\n<h5 id=\"examples-80\"><a class=\"doc-anchor\" href=\"#examples-80\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::{FixedI8, FixedU8};\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">type </span>IFix = FixedI8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">5</span>).saturating_sub_signed(IFix::from_num(-<span class=\"number\">3</span>)), <span class=\"number\">8</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::ONE.saturating_sub_signed(IFix::MAX), Fix::ZERO);\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.saturating_sub_signed(IFix::MIN), Fix::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_neg\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_neg\" class=\"fn\">wrapping_neg</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping negation. Returns the negated value, wrapping on overflow.</p>\n<p>Only zero can be negated without overflow.</p>\n<h5 id=\"examples-81\"><a class=\"doc-anchor\" href=\"#examples-81\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::ZERO.wrapping_neg(), Fix::from_num(<span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">5</span>).wrapping_neg(), Fix::wrapping_from_num(-<span class=\"number\">5</span>));\n<span class=\"kw\">let </span>neg_five_bits = !Fix::from_num(<span class=\"number\">5</span>).to_bits() + <span class=\"number\">1</span>;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">5</span>).wrapping_neg(), Fix::from_bits(neg_five_bits));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_add\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_add\" class=\"fn\">wrapping_add</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping addition. Returns the sum, wrapping on overflow.</p>\n<h5 id=\"examples-82\"><a class=\"doc-anchor\" href=\"#examples-82\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>one_minus_delta = Fix::ONE - Fix::DELTA;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3</span>).wrapping_add(Fix::from_num(<span class=\"number\">2</span>)), Fix::from_num(<span class=\"number\">5</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.wrapping_add(Fix::ONE), one_minus_delta);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_sub\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_sub\" class=\"fn\">wrapping_sub</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping subtraction. Returns the difference, wrapping on overflow.</p>\n<h5 id=\"examples-83\"><a class=\"doc-anchor\" href=\"#examples-83\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>one_minus_delta = Fix::ONE - Fix::DELTA;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">5</span>).wrapping_sub(Fix::from_num(<span class=\"number\">3</span>)), Fix::from_num(<span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::ZERO.wrapping_sub(Fix::ONE), Fix::MAX - one_minus_delta);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_mul_add\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_mul_add\" class=\"fn\">wrapping_mul_add</a>&lt;MulFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt;(\n    self,\n    mul: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;MulFrac&gt;,\n    add: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;,\n) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping multiply and add.\nReturns <code>self</code> × <code>mul</code> + <code>add</code>, wrapping on overflow.</p>\n<p>The <code>mul</code> parameter can have a fixed-point type like\n<code>self</code> but with a different number of fractional bits.</p>\n<h5 id=\"examples-84\"><a class=\"doc-anchor\" href=\"#examples-84\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(\n    Fix::from_num(<span class=\"number\">4</span>).wrapping_mul_add(Fix::from_num(<span class=\"number\">0.5</span>), Fix::from_num(<span class=\"number\">3</span>)),\n    Fix::from_num(<span class=\"number\">5</span>)\n);\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.wrapping_mul_add(Fix::ONE, Fix::from_num(<span class=\"number\">0</span>)), Fix::MAX);\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.wrapping_mul_add(Fix::ONE, Fix::from_bits(<span class=\"number\">1</span>)), Fix::MIN);\n<span class=\"kw\">let </span>wrapped = Fix::MAX.wrapping_mul_int(<span class=\"number\">4</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.wrapping_mul_add(Fix::from_num(<span class=\"number\">3</span>), Fix::MAX), wrapped);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_mul_int\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_mul_int\" class=\"fn\">wrapping_mul_int</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping multiplication by an integer. Returns the product, wrapping on overflow.</p>\n<h5 id=\"examples-85\"><a class=\"doc-anchor\" href=\"#examples-85\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3</span>).wrapping_mul_int(<span class=\"number\">2</span>), Fix::from_num(<span class=\"number\">6</span>));\n<span class=\"kw\">let </span>wrapped = Fix::from_bits(!<span class=\"number\">0 </span>&lt;&lt; <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.wrapping_mul_int(<span class=\"number\">4</span>), wrapped);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_div_int\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_div_int\" class=\"fn\">wrapping_div_int</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping division by an integer. Returns the quotient.</p>\n<p>Can never overflow for unsigned values.</p>\n<h5 id=\"panics-13\"><a class=\"doc-anchor\" href=\"#panics-13\">§</a>Panics</h5>\n<p>Panics if the divisor is zero.</p>\n<h5 id=\"examples-86\"><a class=\"doc-anchor\" href=\"#examples-86\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"comment\">// 1.5 is binary 1.1\n</span><span class=\"kw\">let </span>one_point_5 = Fix::from_bits(<span class=\"number\">0b11 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3</span>).wrapping_div_int(<span class=\"number\">2</span>), one_point_5);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_shl\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_shl\" class=\"fn\">wrapping_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping shift left. Wraps <code>rhs</code> if <code>rhs</code> ≥ 8,\nthen shifts and returns the number.</p>\n<p>Unlike most other methods which wrap the result, this method (as well as\n<a href=\"fixed/struct.FixedU8.html#method.wrapping_shr\" title=\"method fixed::FixedU8::wrapping_shr\"><code>wrapping_shr</code></a>) wraps the input operand <code>rhs</code>.</p>\n<h5 id=\"examples-87\"><a class=\"doc-anchor\" href=\"#examples-87\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>((Fix::ONE / <span class=\"number\">2</span>).wrapping_shl(<span class=\"number\">3</span>), Fix::from_num(<span class=\"number\">4</span>));\n<span class=\"macro\">assert_eq!</span>((Fix::ONE / <span class=\"number\">2</span>).wrapping_shl(<span class=\"number\">3 </span>+ <span class=\"number\">8</span>), Fix::from_num(<span class=\"number\">4</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_shr\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_shr\" class=\"fn\">wrapping_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping shift right. Wraps <code>rhs</code> if <code>rhs</code> ≥ 8,\nthen shifts and returns the number.</p>\n<p>Unlike most other methods which wrap the result, this method (as well as\n<a href=\"fixed/struct.FixedU8.html#method.wrapping_shl\" title=\"method fixed::FixedU8::wrapping_shl\"><code>wrapping_shl</code></a>) wraps the input operand <code>rhs</code>.</p>\n<h5 id=\"examples-88\"><a class=\"doc-anchor\" href=\"#examples-88\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>((Fix::from_num(<span class=\"number\">4</span>)).wrapping_shr(<span class=\"number\">3</span>), Fix::ONE / <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>((Fix::from_num(<span class=\"number\">4</span>)).wrapping_shr(<span class=\"number\">3 </span>+ <span class=\"number\">8</span>), Fix::ONE / <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_dist\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_dist\" class=\"fn\">wrapping_dist</a>(self, other: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping distance. Returns the distance from <code>self</code> to <code>other</code>.</p>\n<p>The distance is the absolute value of the difference.</p>\n<p>Can never overflow for unsigned types.</p>\n<h5 id=\"examples-89\"><a class=\"doc-anchor\" href=\"#examples-89\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::ONE.wrapping_dist(Fix::from_num(<span class=\"number\">5</span>)), Fix::from_num(<span class=\"number\">4</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::ZERO.wrapping_dist(Fix::MAX), Fix::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_hypot\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_hypot\" class=\"fn\">wrapping_hypot</a>(self, other: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Compute the hypotenuse of a right triange, wrapping on overflow.</p>\n<p>The hypotenuse is equal to the square root of the sum of the squares of the\noperands.</p>\n<p>This method uses an iterative method for its square root, with up to 8\niterations for <a href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\"><code>FixedU8</code></a>. The result is rounded down, and the\nerror is &lt; <a href=\"fixed/struct.FixedU8.html#associatedconstant.DELTA\" title=\"associated constant fixed::FixedU8::DELTA\"><code>DELTA</code></a>. That is,\nresult ≤ √(<code>self</code>² + <code>other</code>²) &lt; result + <code>DELTA</code>.</p>\n<h5 id=\"examples-90\"><a class=\"doc-anchor\" href=\"#examples-90\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n\n<span class=\"comment\">// hypot(3, 4) == 5\n</span><span class=\"macro\">assert_eq!</span>(\n    Fix::from_num(<span class=\"number\">3</span>).wrapping_hypot(Fix::from_num(<span class=\"number\">4</span>)),\n    Fix::from_num(<span class=\"number\">5</span>)\n);\n\n<span class=\"comment\">// hypot(8, 15) == 17, which wraps to 1\n</span><span class=\"macro\">assert_eq!</span>(\n    Fix::from_num(<span class=\"number\">8</span>).wrapping_hypot(Fix::from_num(<span class=\"number\">15</span>)),\n    Fix::from_num(<span class=\"number\">1</span>)\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_next_multiple_of\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_next_multiple_of\" class=\"fn\">wrapping_next_multiple_of</a>(\n    self,\n    other: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;,\n) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping next multiple of <code>other</code>.</p>\n<p>The next multiple is the smallest multiple of <code>other</code> that is ≥ <code>self</code>.</p>\n<h5 id=\"panics-14\"><a class=\"doc-anchor\" href=\"#panics-14\">§</a>Panics</h5>\n<p>Panics if <code>other</code> is zero.</p>\n<h5 id=\"examples-91\"><a class=\"doc-anchor\" href=\"#examples-91\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(\n    Fix::from_num(<span class=\"number\">4</span>).wrapping_next_multiple_of(Fix::from_num(<span class=\"number\">1.5</span>)),\n    Fix::from_num(<span class=\"number\">4.5</span>)\n);\n<span class=\"kw\">let </span>max_minus_delta = Fix::MAX - Fix::DELTA;\n<span class=\"macro\">assert_eq!</span>(\n    Fix::MAX.wrapping_next_multiple_of(max_minus_delta),\n    max_minus_delta.wrapping_mul_int(<span class=\"number\">2</span>)\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_inv_lerp\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_inv_lerp\" class=\"fn\">wrapping_inv_lerp</a>&lt;RetFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt;(\n    self,\n    start: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;,\n    end: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;,\n) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;RetFrac&gt;</h4></section></summary><div class=\"docblock\"><p>Inverse linear interpolation between <code>start</code> and <code>end</code>,\nwrapping on overflow.</p>\n<p>The computed value can have a fixed-point type like <code>self</code> but with a different\nnumber of fractional bits.</p>\n<p>Returns\n(<code>self</code> − <code>start</code>) / (<code>end</code> − <code>start</code>).\nThis is 0 when <code>self</code> = <code>start</code>, and 1 when <code>self</code> = <code>end</code>.</p>\n<h5 id=\"panics-15\"><a class=\"doc-anchor\" href=\"#panics-15\">§</a>Panics</h5>\n<p>Panics when <code>start</code> = <code>end</code>.</p>\n<h5 id=\"examples-92\"><a class=\"doc-anchor\" href=\"#examples-92\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>two = Fix::from_num(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>four = Fix::from_num(<span class=\"number\">4</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3</span>).wrapping_inv_lerp::&lt;U4&gt;(two, four), <span class=\"number\">0.5</span>);\n<span class=\"macro\">assert_eq!</span>(\n    Fix::MAX.wrapping_inv_lerp::&lt;U4&gt;(Fix::ZERO, Fix::from_num(<span class=\"number\">0.5</span>)),\n    Fix::MAX.wrapping_mul_int(<span class=\"number\">2</span>)\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_next_power_of_two\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_next_power_of_two\" class=\"fn\">wrapping_next_power_of_two</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the smallest power of two that is ≥ <code>self</code>,\nwrapping to 0 if the next power of two is too large to represent.</p>\n<h5 id=\"examples-93\"><a class=\"doc-anchor\" href=\"#examples-93\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"comment\">// 3/8 is 0.0110\n</span><span class=\"kw\">let </span>three_eights = Fix::from_bits(<span class=\"number\">0b0110</span>);\n<span class=\"comment\">// 1/2 is 0.1000\n</span><span class=\"kw\">let </span>half = Fix::from_bits(<span class=\"number\">0b1000</span>);\n<span class=\"macro\">assert_eq!</span>(three_eights.wrapping_next_power_of_two(), half);\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.wrapping_next_power_of_two(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_add_signed\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_add_signed\" class=\"fn\">wrapping_add_signed</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping addition with a signed fixed-point number.\nReturns the sum, wrapping on overflow.</p>\n<h5 id=\"examples-94\"><a class=\"doc-anchor\" href=\"#examples-94\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::{FixedI8, FixedU8};\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">type </span>IFix = FixedI8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">5</span>).wrapping_add_signed(IFix::from_num(-<span class=\"number\">3</span>)), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::ZERO.wrapping_add_signed(-IFix::DELTA), Fix::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_sub_signed\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_sub_signed\" class=\"fn\">wrapping_sub_signed</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping subtraction with a signed fixed-point number.\nReturns the difference, wrapping on overflow.</p>\n<h5 id=\"examples-95\"><a class=\"doc-anchor\" href=\"#examples-95\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::{FixedI8, FixedU8};\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">type </span>IFix = FixedI8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">5</span>).wrapping_sub_signed(IFix::from_num(-<span class=\"number\">3</span>)), <span class=\"number\">8</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::ZERO.wrapping_sub_signed(IFix::DELTA), Fix::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_neg\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_neg\" class=\"fn\">unwrapped_neg</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Unwrapped negation. Returns the negated value, panicking on overflow.</p>\n<p>Only zero can be negated without overflow.</p>\n<h5 id=\"panics-16\"><a class=\"doc-anchor\" href=\"#panics-16\">§</a>Panics</h5>\n<p>Panics if the result does not fit.</p>\n<h5 id=\"examples-96\"><a class=\"doc-anchor\" href=\"#examples-96\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::ZERO.unwrapped_neg(), Fix::ZERO);</code></pre></div>\n<p>The following panics because of overflow.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>_overflow = Fix::from_num(<span class=\"number\">5</span>).unwrapped_neg();</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_add\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_add\" class=\"fn\">unwrapped_add</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Unwrapped addition. Returns the sum, panicking on overflow.</p>\n<h5 id=\"panics-17\"><a class=\"doc-anchor\" href=\"#panics-17\">§</a>Panics</h5>\n<p>Panics if the result does not fit.</p>\n<h5 id=\"examples-97\"><a class=\"doc-anchor\" href=\"#examples-97\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3</span>).unwrapped_add(Fix::from_num(<span class=\"number\">2</span>)), Fix::from_num(<span class=\"number\">5</span>));</code></pre></div>\n<p>The following panics because of overflow.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>_overflow = Fix::MAX.unwrapped_add(Fix::DELTA);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_sub\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_sub\" class=\"fn\">unwrapped_sub</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Unwrapped subtraction. Returns the difference, panicking on overflow.</p>\n<h5 id=\"panics-18\"><a class=\"doc-anchor\" href=\"#panics-18\">§</a>Panics</h5>\n<p>Panics if the result does not fit.</p>\n<h5 id=\"examples-98\"><a class=\"doc-anchor\" href=\"#examples-98\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">5</span>).unwrapped_sub(Fix::from_num(<span class=\"number\">3</span>)), Fix::from_num(<span class=\"number\">2</span>));</code></pre></div>\n<p>The following panics because of overflow.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>_overflow = Fix::MIN.unwrapped_sub(Fix::DELTA);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_rem\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_rem\" class=\"fn\">unwrapped_rem</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Unwrapped remainder. Returns the remainder, panicking if the divisor is zero.</p>\n<h5 id=\"panics-19\"><a class=\"doc-anchor\" href=\"#panics-19\">§</a>Panics</h5>\n<p>Panics if the divisor is zero.</p>\n<h5 id=\"examples-99\"><a class=\"doc-anchor\" href=\"#examples-99\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">1.5</span>).unwrapped_rem(Fix::ONE), Fix::from_num(<span class=\"number\">0.5</span>));</code></pre></div>\n<p>The following panics because the divisor is zero.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>_divisor_is_zero = Fix::from_num(<span class=\"number\">1.5</span>).unwrapped_rem(Fix::ZERO);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_mul_add\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_mul_add\" class=\"fn\">unwrapped_mul_add</a>&lt;MulFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt;(\n    self,\n    mul: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;MulFrac&gt;,\n    add: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;,\n) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Unwrapped multiply and add.\nReturns <code>self</code> × <code>mul</code> + <code>add</code>, panicking on overflow.</p>\n<p>The <code>mul</code> parameter can have a fixed-point type like\n<code>self</code> but with a different number of fractional bits.</p>\n<h5 id=\"panics-20\"><a class=\"doc-anchor\" href=\"#panics-20\">§</a>Panics</h5>\n<p>Panics if the result does not fit.</p>\n<h5 id=\"examples-100\"><a class=\"doc-anchor\" href=\"#examples-100\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(\n    Fix::from_num(<span class=\"number\">4</span>).unwrapped_mul_add(Fix::from_num(<span class=\"number\">0.5</span>), Fix::from_num(<span class=\"number\">3</span>)),\n    Fix::from_num(<span class=\"number\">5</span>)\n);</code></pre></div>\n<p>The following panics because of overflow.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>_overflow = Fix::MAX.unwrapped_mul_add(Fix::ONE, Fix::DELTA);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_mul_int\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_mul_int\" class=\"fn\">unwrapped_mul_int</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Unwrapped multiplication by an integer. Returns the product, panicking on overflow.</p>\n<h5 id=\"panics-21\"><a class=\"doc-anchor\" href=\"#panics-21\">§</a>Panics</h5>\n<p>Panics if the result does not fit.</p>\n<h5 id=\"examples-101\"><a class=\"doc-anchor\" href=\"#examples-101\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3</span>).unwrapped_mul_int(<span class=\"number\">2</span>), Fix::from_num(<span class=\"number\">6</span>));</code></pre></div>\n<p>The following panics because of overflow.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>_overflow = Fix::MAX.unwrapped_mul_int(<span class=\"number\">4</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_div_int\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_div_int\" class=\"fn\">unwrapped_div_int</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Unwrapped division by an integer. Returns the quotient.</p>\n<p>Can never overflow for unsigned values.</p>\n<h5 id=\"panics-22\"><a class=\"doc-anchor\" href=\"#panics-22\">§</a>Panics</h5>\n<p>Panics if the divisor is zero.</p>\n<h5 id=\"examples-102\"><a class=\"doc-anchor\" href=\"#examples-102\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"comment\">// 1.5 is binary 1.1\n</span><span class=\"kw\">let </span>one_point_5 = Fix::from_bits(<span class=\"number\">0b11 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3</span>).unwrapped_div_int(<span class=\"number\">2</span>), one_point_5);</code></pre></div>\n<p>The following panics because the divisor is zero.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>_divisor_is_zero = Fix::from_num(<span class=\"number\">3</span>).unwrapped_div_int(<span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_rem_euclid\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_rem_euclid\" class=\"fn\">unwrapped_rem_euclid</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Unwrapped remainder for Euclidean division. Returns the\nremainder, panicking if the divisor is zero.</p>\n<h5 id=\"examples-103\"><a class=\"doc-anchor\" href=\"#examples-103\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>num = Fix::from_num(<span class=\"number\">7.5</span>);\n<span class=\"macro\">assert_eq!</span>(num.unwrapped_rem_euclid(Fix::from_num(<span class=\"number\">2</span>)), Fix::from_num(<span class=\"number\">1.5</span>));</code></pre></div>\n<p>The following panics because the divisor is zero.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>_divisor_is_zero = Fix::from_num(<span class=\"number\">3</span>).unwrapped_rem_euclid(Fix::ZERO);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_shl\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_shl\" class=\"fn\">unwrapped_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Unwrapped shift left. Panics if <code>rhs</code> ≥ 8.</p>\n<h5 id=\"panics-23\"><a class=\"doc-anchor\" href=\"#panics-23\">§</a>Panics</h5>\n<p>Panics if <code>rhs</code> ≥ 8.</p>\n<h5 id=\"examples-104\"><a class=\"doc-anchor\" href=\"#examples-104\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>((Fix::ONE / <span class=\"number\">2</span>).unwrapped_shl(<span class=\"number\">3</span>), Fix::from_num(<span class=\"number\">4</span>));</code></pre></div>\n<p>The following panics because of overflow.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>_overflow = Fix::ONE.unwrapped_shl(<span class=\"number\">8</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_shr\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_shr\" class=\"fn\">unwrapped_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Unwrapped shift right. Panics if <code>rhs</code> ≥ 8.</p>\n<h5 id=\"panics-24\"><a class=\"doc-anchor\" href=\"#panics-24\">§</a>Panics</h5>\n<p>Panics if <code>rhs</code> ≥ 8.</p>\n<h5 id=\"examples-105\"><a class=\"doc-anchor\" href=\"#examples-105\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>((Fix::from_num(<span class=\"number\">4</span>)).unwrapped_shr(<span class=\"number\">3</span>), Fix::ONE / <span class=\"number\">2</span>);</code></pre></div>\n<p>The following panics because of overflow.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>_overflow = Fix::ONE.unwrapped_shr(<span class=\"number\">8</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_dist\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_dist\" class=\"fn\">unwrapped_dist</a>(self, other: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Unwrapped distance. Returns the distance from <code>self</code> to <code>other</code>.</p>\n<p>The distance is the absolute value of the difference.</p>\n<p>Can never overflow for unsigned types.</p>\n<h5 id=\"examples-106\"><a class=\"doc-anchor\" href=\"#examples-106\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::ONE.unwrapped_dist(Fix::from_num(<span class=\"number\">5</span>)), Fix::from_num(<span class=\"number\">4</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::ZERO.unwrapped_dist(Fix::MAX), Fix::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_hypot\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_hypot\" class=\"fn\">unwrapped_hypot</a>(self, other: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Compute the hypotenuse of a right triange, panicking on overflow.</p>\n<p>The hypotenuse is equal to the square root of the sum of the squares of the\noperands.</p>\n<p>This method uses an iterative method for its square root, with up to 8\niterations for <a href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\"><code>FixedU8</code></a>. The result is rounded down, and the\nerror is &lt; <a href=\"fixed/struct.FixedU8.html#associatedconstant.DELTA\" title=\"associated constant fixed::FixedU8::DELTA\"><code>DELTA</code></a>. That is,\nresult ≤ √(<code>self</code>² + <code>other</code>²) &lt; result + <code>DELTA</code>.</p>\n<h5 id=\"panics-25\"><a class=\"doc-anchor\" href=\"#panics-25\">§</a>Panics</h5>\n<p>Panics if the result does not fit.</p>\n<h5 id=\"examples-107\"><a class=\"doc-anchor\" href=\"#examples-107\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n\n<span class=\"comment\">// hypot(3, 4) == 5\n</span><span class=\"macro\">assert_eq!</span>(\n    Fix::from_num(<span class=\"number\">3</span>).overflowing_hypot(Fix::from_num(<span class=\"number\">4</span>)),\n    (Fix::from_num(<span class=\"number\">5</span>), <span class=\"bool-val\">false</span>)\n);</code></pre></div>\n<p>The following panics because of overflow.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n\n<span class=\"comment\">// hypot(8, 15) == 17, which does not fit\n</span><span class=\"kw\">let </span>_overflow = Fix::from_num(<span class=\"number\">8</span>).unwrapped_hypot(Fix::from_num(<span class=\"number\">15</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_next_multiple_of\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_next_multiple_of\" class=\"fn\">unwrapped_next_multiple_of</a>(\n    self,\n    other: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;,\n) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the next multiple of <code>other</code>, panicking on overflow.</p>\n<p>The next multiple is the smallest multiple of <code>other</code> that is ≥ <code>self</code>.</p>\n<h5 id=\"panics-26\"><a class=\"doc-anchor\" href=\"#panics-26\">§</a>Panics</h5>\n<p>Panics if <code>other</code> is zero or on overflow.</p>\n<h5 id=\"examples-108\"><a class=\"doc-anchor\" href=\"#examples-108\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(\n    Fix::from_num(<span class=\"number\">4</span>).unwrapped_next_multiple_of(Fix::from_num(<span class=\"number\">1.5</span>)),\n    Fix::from_num(<span class=\"number\">4.5</span>)\n);</code></pre></div>\n<p>The following panics because of overflow.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>_overflow = Fix::MAX.unwrapped_next_multiple_of(Fix::from_num(<span class=\"number\">2</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_inv_lerp\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_inv_lerp\" class=\"fn\">unwrapped_inv_lerp</a>&lt;RetFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt;(\n    self,\n    start: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;,\n    end: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;,\n) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;RetFrac&gt;</h4></section></summary><div class=\"docblock\"><p>Inverse linear interpolation between <code>start</code> and <code>end</code>,\npanicking on overflow.</p>\n<p>The computed value can have a fixed-point type like <code>self</code> but with a different\nnumber of fractional bits.</p>\n<p>Returns\n(<code>self</code> − <code>start</code>) / (<code>end</code> − <code>start</code>).\nThis is 0 when <code>self</code> = <code>start</code>, and 1 when <code>self</code> = <code>end</code>.</p>\n<h5 id=\"panics-27\"><a class=\"doc-anchor\" href=\"#panics-27\">§</a>Panics</h5>\n<p>Panics when <code>start</code> = <code>end</code> or when the results overflows.</p>\n<h5 id=\"examples-109\"><a class=\"doc-anchor\" href=\"#examples-109\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>two = Fix::from_num(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>four = Fix::from_num(<span class=\"number\">4</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3</span>).unwrapped_inv_lerp::&lt;U4&gt;(two, four), <span class=\"number\">0.5</span>);</code></pre></div>\n<p>The following panics because <code>start</code> = <code>end</code>.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>two = Fix::from_num(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>_zero_range = two.unwrapped_inv_lerp::&lt;U4&gt;(two, two);</code></pre></div>\n<p>The following panics because of overflow.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>_overflow = Fix::MAX.unwrapped_inv_lerp::&lt;U4&gt;(Fix::ZERO, Fix::from_num(<span class=\"number\">0.5</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_next_power_of_two\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_next_power_of_two\" class=\"fn\">unwrapped_next_power_of_two</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the smallest power of two that is ≥ <code>self</code>,\npanicking if the next power of two is too large to represent.</p>\n<h5 id=\"panics-28\"><a class=\"doc-anchor\" href=\"#panics-28\">§</a>Panics</h5>\n<p>Panics if the result does not fit.</p>\n<h5 id=\"examples-110\"><a class=\"doc-anchor\" href=\"#examples-110\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"comment\">// 3/8 is 0.0110\n</span><span class=\"kw\">let </span>three_eights = Fix::from_bits(<span class=\"number\">0b0110</span>);\n<span class=\"comment\">// 1/2 is 0.1000\n</span><span class=\"kw\">let </span>half = Fix::from_bits(<span class=\"number\">0b1000</span>);\n<span class=\"macro\">assert_eq!</span>(three_eights.unwrapped_next_power_of_two(), half);</code></pre></div>\n<p>The following panics because of overflow.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>_overflow = Fix::MAX.unwrapped_next_power_of_two();</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_add_signed\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_add_signed\" class=\"fn\">unwrapped_add_signed</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Unwrapped addition with a signed fixed-point number.\nReturns the sum, panicking on overflow.</p>\n<h5 id=\"panics-29\"><a class=\"doc-anchor\" href=\"#panics-29\">§</a>Panics</h5>\n<p>Panics if the result does not fit.</p>\n<h5 id=\"examples-111\"><a class=\"doc-anchor\" href=\"#examples-111\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::{FixedI8, FixedU8};\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">type </span>IFix = FixedI8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">5</span>).unwrapped_add_signed(IFix::from_num(-<span class=\"number\">3</span>)), <span class=\"number\">2</span>);</code></pre></div>\n<p>The following panics because of overflow.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::{FixedI8, FixedU8};\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">type </span>IFix = FixedI8&lt;U4&gt;;\n<span class=\"kw\">let </span>_overflow = Fix::from_num(<span class=\"number\">2</span>).unwrapped_add_signed(IFix::from_num(-<span class=\"number\">3</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_sub_signed\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_sub_signed\" class=\"fn\">unwrapped_sub_signed</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Unwrapped subtraction with a signed fixed-point number.\nReturns the difference, panicking on overflow.</p>\n<h5 id=\"panics-30\"><a class=\"doc-anchor\" href=\"#panics-30\">§</a>Panics</h5>\n<p>Panics if the result does not fit.</p>\n<h5 id=\"examples-112\"><a class=\"doc-anchor\" href=\"#examples-112\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::{FixedI8, FixedU8};\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">type </span>IFix = FixedI8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">5</span>).unwrapped_sub_signed(IFix::from_num(-<span class=\"number\">3</span>)), <span class=\"number\">8</span>);</code></pre></div>\n<p>The following panics because of overflow.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::{FixedI8, FixedU8};\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">type </span>IFix = FixedI8&lt;U4&gt;;\n<span class=\"kw\">let </span>_overflow = Fix::from_num(<span class=\"number\">2</span>).unwrapped_sub_signed(IFix::from_num(<span class=\"number\">3</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_neg\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_neg\" class=\"fn\">overflowing_neg</a>(self) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Overflowing negation.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the negated value and a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> indicating whether\nan overflow has occurred. On overflow, the wrapped value is returned.</p>\n<p>Only zero can be negated without overflow.</p>\n<h5 id=\"examples-113\"><a class=\"doc-anchor\" href=\"#examples-113\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::ZERO.overflowing_neg(), (Fix::ZERO, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">5</span>).overflowing_neg(), Fix::overflowing_from_num(-<span class=\"number\">5</span>));\n<span class=\"kw\">let </span>neg_five_bits = !Fix::from_num(<span class=\"number\">5</span>).to_bits() + <span class=\"number\">1</span>;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">5</span>).overflowing_neg(), (Fix::from_bits(neg_five_bits), <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_add\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_add\" class=\"fn\">overflowing_add</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Overflowing addition.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the sum and a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> indicating whether an\noverflow has occurred. On overflow, the wrapped value is returned.</p>\n<h5 id=\"examples-114\"><a class=\"doc-anchor\" href=\"#examples-114\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>one_minus_delta = Fix::ONE - Fix::DELTA;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3</span>).overflowing_add(Fix::from_num(<span class=\"number\">2</span>)), (Fix::from_num(<span class=\"number\">5</span>), <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.overflowing_add(Fix::ONE), (one_minus_delta, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_sub\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_sub\" class=\"fn\">overflowing_sub</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Overflowing subtraction.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the difference and a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> indicating whether an\noverflow has occurred. On overflow, the wrapped value is returned.</p>\n<h5 id=\"examples-115\"><a class=\"doc-anchor\" href=\"#examples-115\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>one_minus_delta = Fix::ONE - Fix::DELTA;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">5</span>).overflowing_sub(Fix::from_num(<span class=\"number\">3</span>)), (Fix::from_num(<span class=\"number\">2</span>), <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::ZERO.overflowing_sub(Fix::ONE), (Fix::MAX - one_minus_delta, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_mul_add\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_mul_add\" class=\"fn\">overflowing_mul_add</a>&lt;MulFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt;(\n    self,\n    mul: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;MulFrac&gt;,\n    add: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;,\n) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Overflowing multiply and add.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of <code>self</code> × <code>mul</code> + <code>add</code> and a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> indicating\nwhether an overflow has occurred. On overflow, the wrapped value is\nreturned.</p>\n<p>The <code>mul</code> parameter can have a fixed-point type like\n<code>self</code> but with a different number of fractional bits.</p>\n<h5 id=\"examples-116\"><a class=\"doc-anchor\" href=\"#examples-116\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(\n    Fix::MAX.overflowing_mul_add(Fix::ONE, Fix::ZERO),\n    (Fix::MAX, <span class=\"bool-val\">false</span>)\n);\n<span class=\"macro\">assert_eq!</span>(\n    Fix::MAX.overflowing_mul_add(Fix::ONE, Fix::DELTA),\n    (Fix::MIN, <span class=\"bool-val\">true</span>)\n);\n<span class=\"macro\">assert_eq!</span>(\n    Fix::MAX.overflowing_mul_add(Fix::from_num(<span class=\"number\">3</span>), Fix::MAX),\n    Fix::MAX.overflowing_mul_int(<span class=\"number\">4</span>)\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_mul_int\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_mul_int\" class=\"fn\">overflowing_mul_int</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Overflowing multiplication by an integer.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the product and a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> indicating whether an\noverflow has occurred. On overflow, the wrapped value is returned.</p>\n<h5 id=\"examples-117\"><a class=\"doc-anchor\" href=\"#examples-117\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3</span>).overflowing_mul_int(<span class=\"number\">2</span>), (Fix::from_num(<span class=\"number\">6</span>), <span class=\"bool-val\">false</span>));\n<span class=\"kw\">let </span>wrapped = Fix::from_bits(!<span class=\"number\">0 </span>&lt;&lt; <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.overflowing_mul_int(<span class=\"number\">4</span>), (wrapped, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_div_int\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_div_int\" class=\"fn\">overflowing_div_int</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Overflowing division by an integer.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the quotient and <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>false</code></a>, as the division can never overflow for unsigned values.</p>\n<h5 id=\"panics-31\"><a class=\"doc-anchor\" href=\"#panics-31\">§</a>Panics</h5>\n<p>Panics if the divisor is zero.</p>\n<h5 id=\"examples-118\"><a class=\"doc-anchor\" href=\"#examples-118\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"comment\">// 1.5 is binary 1.1\n</span><span class=\"kw\">let </span>one_point_5 = Fix::from_bits(<span class=\"number\">0b11 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3</span>).overflowing_div_int(<span class=\"number\">2</span>), (one_point_5, <span class=\"bool-val\">false</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_shl\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_shl\" class=\"fn\">overflowing_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Overflowing shift left.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the shifted value and a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> indicating whether\nan overflow has occurred. Overflow occurs when <code>rhs</code> ≥ 8.\nOn overflow <code>rhs</code> is wrapped before the shift operation.</p>\n<h5 id=\"examples-119\"><a class=\"doc-anchor\" href=\"#examples-119\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>((Fix::ONE / <span class=\"number\">2</span>).overflowing_shl(<span class=\"number\">3</span>), (Fix::from_num(<span class=\"number\">4</span>), <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>((Fix::ONE / <span class=\"number\">2</span>).overflowing_shl(<span class=\"number\">3 </span>+ <span class=\"number\">8</span>), (Fix::from_num(<span class=\"number\">4</span>), <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_shr\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_shr\" class=\"fn\">overflowing_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Overflowing shift right.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the shifted value and a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> indicating whether\nan overflow has occurred. Overflow occurs when <code>rhs</code> ≥ 8.\nOn overflow <code>rhs</code> is wrapped before the shift operation.</p>\n<h5 id=\"examples-120\"><a class=\"doc-anchor\" href=\"#examples-120\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>((Fix::from_num(<span class=\"number\">4</span>)).overflowing_shr(<span class=\"number\">3</span>), (Fix::ONE / <span class=\"number\">2</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>((Fix::from_num(<span class=\"number\">4</span>)).overflowing_shr(<span class=\"number\">3 </span>+ <span class=\"number\">8</span>), (Fix::ONE / <span class=\"number\">2</span>, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_dist\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_dist\" class=\"fn\">overflowing_dist</a>(\n    self,\n    other: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;,\n) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Overflowing distance.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the distance from <code>self</code> to <code>other</code> and <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>false</code></a>, as overflow can never happen for unsigned types.</p>\n<p>The distance is the absolute value of the difference.</p>\n<h5 id=\"examples-121\"><a class=\"doc-anchor\" href=\"#examples-121\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(\n    Fix::ONE.overflowing_dist(Fix::from_num(<span class=\"number\">5</span>)),\n    (Fix::from_num(<span class=\"number\">4</span>), <span class=\"bool-val\">false</span>)\n);\n<span class=\"macro\">assert_eq!</span>(\n    Fix::ZERO.overflowing_dist(Fix::MAX),\n    (Fix::MAX, <span class=\"bool-val\">false</span>)\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_hypot\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_hypot\" class=\"fn\">overflowing_hypot</a>(\n    self,\n    other: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;,\n) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Compute the hypotenuse of a right triange.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the hypotenuse and a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a>, indicating whether an\noverflow has occurred. On overflow, the wrapped value is returned.</p>\n<p>The hypotenuse is equal to the square root of the sum of the squares of the\noperands.</p>\n<p>This method uses an iterative method for its square root, with up to 8\niterations for <a href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\"><code>FixedU8</code></a>. The result is rounded down, and the\nerror is &lt; <a href=\"fixed/struct.FixedU8.html#associatedconstant.DELTA\" title=\"associated constant fixed::FixedU8::DELTA\"><code>DELTA</code></a>. That is,\nresult ≤ √(<code>self</code>² + <code>other</code>²) &lt; result + <code>DELTA</code>.</p>\n<h5 id=\"examples-122\"><a class=\"doc-anchor\" href=\"#examples-122\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n\n<span class=\"comment\">// hypot(3, 4) == 5\n</span><span class=\"macro\">assert_eq!</span>(\n    Fix::from_num(<span class=\"number\">3</span>).overflowing_hypot(Fix::from_num(<span class=\"number\">4</span>)),\n    (Fix::from_num(<span class=\"number\">5</span>), <span class=\"bool-val\">false</span>)\n);\n\n<span class=\"comment\">// hypot(8, 15) == 17, which wraps to 1\n</span><span class=\"macro\">assert_eq!</span>(\n    Fix::from_num(<span class=\"number\">8</span>).overflowing_hypot(Fix::from_num(<span class=\"number\">15</span>)),\n    (Fix::from_num(<span class=\"number\">1</span>), <span class=\"bool-val\">true</span>)\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_next_multiple_of\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_next_multiple_of\" class=\"fn\">overflowing_next_multiple_of</a>(\n    self,\n    other: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;,\n) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Overflowing next multiple of <code>other</code>.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the next multiple and a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> indicating whether an\noverflow has occurred. On overflow, the wrapped value is returned.</p>\n<p>The next multiple is the smallest multiple of <code>other</code> that is ≥ <code>self</code>.</p>\n<h5 id=\"panics-32\"><a class=\"doc-anchor\" href=\"#panics-32\">§</a>Panics</h5>\n<p>Panics if <code>other</code> is zero.</p>\n<h5 id=\"examples-123\"><a class=\"doc-anchor\" href=\"#examples-123\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(\n    Fix::from_num(<span class=\"number\">4</span>).overflowing_next_multiple_of(Fix::from_num(<span class=\"number\">1.5</span>)),\n    (Fix::from_num(<span class=\"number\">4.5</span>), <span class=\"bool-val\">false</span>)\n);\n<span class=\"kw\">let </span>max_minus_delta = Fix::MAX - Fix::DELTA;\n<span class=\"macro\">assert_eq!</span>(\n    Fix::MAX.overflowing_next_multiple_of(max_minus_delta),\n    (max_minus_delta.wrapping_mul_int(<span class=\"number\">2</span>), <span class=\"bool-val\">true</span>)\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_inv_lerp\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_inv_lerp\" class=\"fn\">overflowing_inv_lerp</a>&lt;RetFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt;(\n    self,\n    start: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;,\n    end: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;,\n) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;RetFrac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Overflowing inverse linear interpolation between <code>start</code> and <code>end</code>.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the result and a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> indicationg whether an overflow\nhas occurred. On overflow, the wrapped value is returned.</p>\n<p>The computed value can have a fixed-point type like <code>self</code> but with a different\nnumber of fractional bits.</p>\n<p>Computes\n(<code>self</code> − <code>start</code>) / (<code>end</code> − <code>start</code>).\nThis is 0 when <code>self</code> = <code>start</code>, and 1 when <code>self</code> = <code>end</code>.</p>\n<h5 id=\"panics-33\"><a class=\"doc-anchor\" href=\"#panics-33\">§</a>Panics</h5>\n<p>Panics when <code>start</code> = <code>end</code>.</p>\n<h5 id=\"examples-124\"><a class=\"doc-anchor\" href=\"#examples-124\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>two = Fix::from_num(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>four = Fix::from_num(<span class=\"number\">4</span>);\n<span class=\"macro\">assert_eq!</span>(\n    Fix::from_num(<span class=\"number\">3</span>).overflowing_inv_lerp::&lt;U4&gt;(two, four),\n    (Fix::from_num(<span class=\"number\">0.5</span>), <span class=\"bool-val\">false</span>)\n);\n<span class=\"macro\">assert_eq!</span>(\n    Fix::MAX.overflowing_inv_lerp::&lt;U4&gt;(Fix::ZERO, Fix::from_num(<span class=\"number\">0.5</span>)),\n    (Fix::MAX.wrapping_mul_int(<span class=\"number\">2</span>), <span class=\"bool-val\">true</span>)\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_add_signed\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_add_signed\" class=\"fn\">overflowing_add_signed</a>(\n    self,\n    rhs: <a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;,\n) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Overflowing addition with a signed fixed-point number.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the sum and a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> indicating\nwhether an overflow has occurred. On overflow, the wrapped\nvalue is returned.</p>\n<h5 id=\"examples-125\"><a class=\"doc-anchor\" href=\"#examples-125\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::{FixedI8, FixedU8};\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">type </span>IFix = FixedI8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(\n    Fix::from_num(<span class=\"number\">5</span>).overflowing_add_signed(IFix::from_num(-<span class=\"number\">3</span>)),\n    (Fix::from_num(<span class=\"number\">2</span>), <span class=\"bool-val\">false</span>)\n);\n<span class=\"macro\">assert_eq!</span>(\n    Fix::ZERO.overflowing_add_signed(-IFix::DELTA),\n    (Fix::MAX, <span class=\"bool-val\">true</span>)\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_sub_signed\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_sub_signed\" class=\"fn\">overflowing_sub_signed</a>(\n    self,\n    rhs: <a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;,\n) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Overflowing subtraction with a signed fixed-point number.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the difference and a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a>\nindicating whether an overflow has occurred. On overflow,\nthe wrapped value is returned.</p>\n<h5 id=\"examples-126\"><a class=\"doc-anchor\" href=\"#examples-126\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::{FixedI8, FixedU8};\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">type </span>IFix = FixedI8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(\n    Fix::from_num(<span class=\"number\">5</span>).overflowing_sub_signed(IFix::from_num(-<span class=\"number\">3</span>)),\n    (Fix::from_num(<span class=\"number\">8</span>), <span class=\"bool-val\">false</span>)\n);\n<span class=\"macro\">assert_eq!</span>(\n    Fix::ZERO.overflowing_sub_signed(IFix::DELTA),\n    (Fix::MAX, <span class=\"bool-val\">true</span>)\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_add\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"fixed/struct.FixedU8.html#tymethod.unchecked_add\" class=\"fn\">unchecked_add</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Unchecked addition. Computes <code>self</code> + <code>rhs</code>, assuming\noverflow cannot occur.</p>\n<p>Calling <code>x.unchecked_add(y)</code> is semantically equivalent to\ncalling\n<code>x.<a href=\"fixed/struct.FixedU8.html#method.checked_add\" title=\"method fixed::FixedU8::checked_add\">checked_add</a>(y).<a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#method.unwrap_unchecked\" title=\"method core::option::Option::unwrap_unchecked\">unwrap_unchecked</a>()</code>.</p>\n<p>If you’re just trying to avoid the panic in debug mode, then\n<strong>do not</strong> use this. Instead, you’re looking for\n<a href=\"fixed/struct.FixedU8.html#method.wrapping_add\" title=\"method fixed::FixedU8::wrapping_add\"><code>wrapping_add</code></a>.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>This results in undefined behavior when\n<code>self</code> + <code>rhs</code> &gt; <a href=\"fixed/struct.FixedU8.html#associatedconstant.MAX\" title=\"associated constant fixed::FixedU8::MAX\"><code>MAX</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_sub\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"fixed/struct.FixedU8.html#tymethod.unchecked_sub\" class=\"fn\">unchecked_sub</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Unchecked subtraction. Computes <code>self</code> − <code>rhs</code>,\nassuming overflow cannot occur.</p>\n<p>Calling <code>x.unchecked_sub(y)</code> is semantically equivalent to\ncalling\n<code>x.<a href=\"fixed/struct.FixedU8.html#method.checked_sub\" title=\"method fixed::FixedU8::checked_sub\">checked_sub</a>(y).<a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#method.unwrap_unchecked\" title=\"method core::option::Option::unwrap_unchecked\">unwrap_unchecked</a>()</code>.</p>\n<p>If you’re just trying to avoid the panic in debug mode, then\n<strong>do not</strong> use this. Instead, you’re looking for\n<a href=\"fixed/struct.FixedU8.html#method.wrapping_sub\" title=\"method fixed::FixedU8::wrapping_sub\"><code>wrapping_sub</code></a>.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>This results in undefined behavior when\n<code>self</code> − <code>rhs</code> &gt; <a href=\"fixed/struct.FixedU8.html#associatedconstant.MAX\" title=\"associated constant fixed::FixedU8::MAX\"><code>MAX</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_mul_int\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"fixed/struct.FixedU8.html#tymethod.unchecked_mul_int\" class=\"fn\">unchecked_mul_int</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Unchecked multiplication by an integer. Computes\n<code>self</code> × <code>rhs</code>, assuming overflow cannot occur.</p>\n<p>Calling <code>x.unchecked_mul_int(y)</code> is semantically equivalent to\ncalling\n<code>x.<a href=\"fixed/struct.FixedU8.html#method.checked_mul_int\" title=\"method fixed::FixedU8::checked_mul_int\">checked_mul_int</a>(y).<a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#method.unwrap_unchecked\" title=\"method core::option::Option::unwrap_unchecked\">unwrap_unchecked</a>()</code>.</p>\n<p>If you’re just trying to avoid the panic in debug mode, then\n<strong>do not</strong> use this. Instead, you’re looking for\n<a href=\"fixed/struct.FixedU8.html#method.wrapping_mul_int\" title=\"method fixed::FixedU8::wrapping_mul_int\"><code>wrapping_mul_int</code></a>.</p>\n<h5 id=\"safety-2\"><a class=\"doc-anchor\" href=\"#safety-2\">§</a>Safety</h5>\n<p>This results in undefined behavior when\n<code>self</code> × <code>rhs</code> &gt; <a href=\"fixed/struct.FixedU8.html#associatedconstant.MAX\" title=\"associated constant fixed::FixedU8::MAX\"><code>MAX</code></a>.</p>\n</div></details></div></details>",0,"fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><a href=\"#impl-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;<div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.IsLessOrEqual.html\" title=\"trait fixed::types::extra::IsLessOrEqual\">IsLessOrEqual</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.U5.html\" title=\"type fixed::types::extra::U5\">U5</a>, Output = <a class=\"type\" href=\"fixed/types/extra/type.True.html\" title=\"type fixed::types::extra::True\">True</a>&gt; + <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>,</div></h3><div class=\"docblock\"><p>This block contains constants in the range 4 ≤ <i>x</i> &lt; 8.</p>\n</div></section></summary><div class=\"docblock\"><p>These constants are not representable in unsigned fixed-point numbers with less than 3 integer bits.</p>\n<h4 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h4>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::consts;\n<span class=\"kw\">use </span>fixed::types::extra::U5;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U5&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::TAU, Fix::from_num(consts::TAU));\n<span class=\"macro\">assert!</span>(<span class=\"number\">4 </span>&lt;= Fix::TAU &amp;&amp; Fix::TAU &lt; <span class=\"number\">8</span>);</code></pre></div>\n<p>The following example fails to compile, since the maximum\nrepresentable value with 6 fractional bits and 2 integer bits is &lt; 4.</p>\n\n<div class=\"example-wrap compile_fail\"><a href=\"#\" class=\"tooltip\" title=\"This example deliberately fails to compile\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::consts;\n<span class=\"kw\">use </span>fixed::types::extra::U6;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U6&gt;;\n<span class=\"kw\">let _ </span>= Fix::TAU;</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.TAU\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.TAU\" class=\"constant\">TAU</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>A turn, τ = 6.28318…</p>\n</div></details></div></details>",0,"fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><a href=\"#impl-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;<div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.IsLessOrEqual.html\" title=\"trait fixed::types::extra::IsLessOrEqual\">IsLessOrEqual</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.U6.html\" title=\"type fixed::types::extra::U6\">U6</a>, Output = <a class=\"type\" href=\"fixed/types/extra/type.True.html\" title=\"type fixed::types::extra::True\">True</a>&gt; + <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>,</div></h3><div class=\"docblock\"><p>This block contains constants in the range 2 ≤ <i>x</i> &lt; 4.</p>\n</div></section></summary><div class=\"docblock\"><p>These constants are not representable in unsigned fixed-point numbers with less than 2 integer bits.</p>\n<h4 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h4>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::consts;\n<span class=\"kw\">use </span>fixed::types::extra::U6;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U6&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::E, Fix::from_num(consts::E));\n<span class=\"macro\">assert!</span>(<span class=\"number\">2 </span>&lt;= Fix::E &amp;&amp; Fix::E &lt; <span class=\"number\">4</span>);</code></pre></div>\n<p>The following example fails to compile, since the maximum\nrepresentable value with 7 fractional bits and 1 integer bit is &lt; 2.</p>\n\n<div class=\"example-wrap compile_fail\"><a href=\"#\" class=\"tooltip\" title=\"This example deliberately fails to compile\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::consts;\n<span class=\"kw\">use </span>fixed::types::extra::U7;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U7&gt;;\n<span class=\"kw\">let _ </span>= Fix::E;</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.FRAC_TAU_2\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.FRAC_TAU_2\" class=\"constant\">FRAC_TAU_2</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>τ/2 = 3.14159…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.FRAC_TAU_3\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.FRAC_TAU_3\" class=\"constant\">FRAC_TAU_3</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>τ/3 = 2.09439…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.PI\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.PI\" class=\"constant\">PI</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Archimedes’ constant, π = 3.14159…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.SQRT_2PI\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.SQRT_2PI\" class=\"constant\">SQRT_2PI</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>√2π = 2.50662…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.E\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.E\" class=\"constant\">E</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Euler’s number, e = 2.71828…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.LOG2_10\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.LOG2_10\" class=\"constant\">LOG2_10</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>log<sub>2</sub> 10 = 3.32192…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.LN_10\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.LN_10\" class=\"constant\">LN_10</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>ln 10 = 2.30258…</p>\n</div></details></div></details>",0,"fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><a href=\"#impl-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;<div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.IsLessOrEqual.html\" title=\"trait fixed::types::extra::IsLessOrEqual\">IsLessOrEqual</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.U7.html\" title=\"type fixed::types::extra::U7\">U7</a>, Output = <a class=\"type\" href=\"fixed/types/extra/type.True.html\" title=\"type fixed::types::extra::True\">True</a>&gt; + <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>,</div></h3><div class=\"docblock\"><p>This block contains constants in the range 1 ≤ <i>x</i> &lt; 2.</p>\n</div></section></summary><div class=\"docblock\"><p>These constants are not representable in unsigned fixed-point numbers with less than 1 integer bit.</p>\n<h4 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h4>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::consts;\n<span class=\"kw\">use </span>fixed::types::extra::U7;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U7&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::LOG2_E, Fix::from_num(consts::LOG2_E));\n<span class=\"macro\">assert!</span>(<span class=\"number\">1 </span>&lt;= Fix::LOG2_E &amp;&amp; Fix::LOG2_E &lt; <span class=\"number\">2</span>);</code></pre></div>\n<p>The following example fails to compile, since the maximum\nrepresentable value with 8 fractional bits and 0 integer bits is &lt; 1.</p>\n\n<div class=\"example-wrap compile_fail\"><a href=\"#\" class=\"tooltip\" title=\"This example deliberately fails to compile\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::consts;\n<span class=\"kw\">use </span>fixed::types::extra::U8;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U8&gt;;\n<span class=\"kw\">let _ </span>= Fix::LOG2_E;</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ONE\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.ONE\" class=\"constant\">ONE</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>One.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::ONE, Fix::from_num(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.FRAC_TAU_4\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.FRAC_TAU_4\" class=\"constant\">FRAC_TAU_4</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>τ/4 = 1.57079…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.FRAC_TAU_6\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.FRAC_TAU_6\" class=\"constant\">FRAC_TAU_6</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>τ/6 = 1.04719…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.FRAC_PI_2\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.FRAC_PI_2\" class=\"constant\">FRAC_PI_2</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>π/2 = 1.57079…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.FRAC_PI_3\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.FRAC_PI_3\" class=\"constant\">FRAC_PI_3</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>π/3 = 1.04719…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.SQRT_PI\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.SQRT_PI\" class=\"constant\">SQRT_PI</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>√π = 1.77245…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.FRAC_2_SQRT_PI\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.FRAC_2_SQRT_PI\" class=\"constant\">FRAC_2_SQRT_PI</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>2/√π = 1.12837…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.SQRT_2\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.SQRT_2\" class=\"constant\">SQRT_2</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>√2 = 1.41421…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.SQRT_3\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.SQRT_3\" class=\"constant\">SQRT_3</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>√3 = 1.73205…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.SQRT_E\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.SQRT_E\" class=\"constant\">SQRT_E</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>√e = 1.64872…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.LOG2_E\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.LOG2_E\" class=\"constant\">LOG2_E</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>log<sub>2</sub> e = 1.44269…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.PHI\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.PHI\" class=\"constant\">PHI</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>The golden ratio, φ = 1.61803…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.SQRT_PHI\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.SQRT_PHI\" class=\"constant\">SQRT_PHI</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>√φ = 1.27201…</p>\n</div></details></div></details>",0,"fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><a href=\"#impl-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;<div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.IsLessOrEqual.html\" title=\"trait fixed::types::extra::IsLessOrEqual\">IsLessOrEqual</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.U8.html\" title=\"type fixed::types::extra::U8\">U8</a>, Output = <a class=\"type\" href=\"fixed/types/extra/type.True.html\" title=\"type fixed::types::extra::True\">True</a>&gt; + <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>,</div></h3><div class=\"docblock\"><p>This block contains constants in the range 0.5 ≤ <i>x</i> &lt; 1.</p>\n</div></section></summary><div class=\"docblock\"><h4 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h4>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::consts;\n<span class=\"kw\">use </span>fixed::types::extra::U8;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U8&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::LN_2, Fix::from_num(consts::LN_2));\n<span class=\"macro\">assert!</span>(<span class=\"number\">0.5 </span>&lt;= Fix::LN_2 &amp;&amp; Fix::LN_2 &lt; <span class=\"number\">1</span>);</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.FRAC_TAU_8\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.FRAC_TAU_8\" class=\"constant\">FRAC_TAU_8</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>τ/8 = 0.785398…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.FRAC_TAU_12\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.FRAC_TAU_12\" class=\"constant\">FRAC_TAU_12</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>τ/12 = 0.523598…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.FRAC_4_TAU\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.FRAC_4_TAU\" class=\"constant\">FRAC_4_TAU</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>4/τ = 0.636619…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.FRAC_PI_4\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.FRAC_PI_4\" class=\"constant\">FRAC_PI_4</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>π/4 = 0.785398…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.FRAC_PI_6\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.FRAC_PI_6\" class=\"constant\">FRAC_PI_6</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>π/6 = 0.523598…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.FRAC_2_PI\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.FRAC_2_PI\" class=\"constant\">FRAC_2_PI</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>2/π = 0.636619…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.FRAC_1_SQRT_PI\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.FRAC_1_SQRT_PI\" class=\"constant\">FRAC_1_SQRT_PI</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>1/√π = 0.564189…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.FRAC_1_SQRT_2\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.FRAC_1_SQRT_2\" class=\"constant\">FRAC_1_SQRT_2</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>1/√2 = 0.707106…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.FRAC_1_SQRT_3\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.FRAC_1_SQRT_3\" class=\"constant\">FRAC_1_SQRT_3</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>1/√3 = 0.577350…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.LN_2\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.LN_2\" class=\"constant\">LN_2</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>ln 2 = 0.693147…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.FRAC_1_PHI\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.FRAC_1_PHI\" class=\"constant\">FRAC_1_PHI</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>The golden ratio conjugate, Φ = 1/φ = 0.618033…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.GAMMA\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.GAMMA\" class=\"constant\">GAMMA</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>The Euler-Mascheroni constant, γ = 0.577215…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.CATALAN\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.CATALAN\" class=\"constant\">CATALAN</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Catalan’s constant = 0.915965…</p>\n</div></details></div></details>",0,"fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><a href=\"#impl-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3><div class=\"docblock\"><p>The implementation of items in this block depends on the\nnumber of fractional bits <code>Frac</code>.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.INT_NBITS\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.INT_NBITS\" class=\"constant\">INT_NBITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>The number of integer bits.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U6;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U6&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::INT_NBITS, <span class=\"number\">8 </span>- <span class=\"number\">6</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.FRAC_NBITS\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.FRAC_NBITS\" class=\"constant\">FRAC_NBITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a> = Frac::U32</h4></section></summary><div class=\"docblock\"><p>The number of fractional bits.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U6;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U6&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::FRAC_NBITS, <span class=\"number\">6</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_num\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed/struct.FixedU8.html#tymethod.from_num\" class=\"fn\">from_num</a>&lt;Src: <a class=\"trait\" href=\"fixed/traits/trait.ToFixed.html\" title=\"trait fixed::traits::ToFixed\">ToFixed</a>&gt;(src: Src) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a fixed-point number from another number.</p>\n<p>The other number can be:</p>\n<ul>\n<li>Another fixed-point number. Any extra fractional bits are\ndiscarded, which rounds towards −∞.</li>\n<li>An integer of type <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\" title=\"primitive i8\"><code>i8</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\" title=\"primitive i16\"><code>i16</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\" title=\"primitive i32\"><code>i32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\" title=\"primitive i64\"><code>i64</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\" title=\"primitive i128\"><code>i128</code></a>,\n<a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\" title=\"primitive isize\"><code>isize</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\" title=\"primitive u8\"><code>u8</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\" title=\"primitive u16\"><code>u16</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\" title=\"primitive u32\"><code>u32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\" title=\"primitive u64\"><code>u64</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\" title=\"primitive u128\"><code>u128</code></a>, or\n<a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\" title=\"primitive usize\"><code>usize</code></a>.</li>\n<li>A floating-point number of type <code><a href=\"half/index.html\" title=\"mod half\">half</a>::<a href=\"half/binary16/struct.f16.html\" title=\"struct half::binary16::f16\">f16</a></code>,\n<code><a href=\"half/index.html\" title=\"mod half\">half</a>::<a href=\"half/bfloat/struct.bf16.html\" title=\"struct half::bfloat::bf16\">bf16</a></code>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f32.html\" title=\"primitive f32\"><code>f32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f64.html\" title=\"primitive f64\"><code>f64</code></a> or <a href=\"fixed/struct.F128.html\" title=\"struct fixed::F128\"><code>F128</code></a>. For\nthis conversion, the method rounds to the nearest, with ties rounding to\neven.</li>\n<li>Any other number <code>src</code> for which <a href=\"fixed/traits/trait.ToFixed.html\" title=\"trait fixed::traits::ToFixed\"><code>ToFixed</code></a> is implemented, in\nwhich case this method returns\n<code>src.<a href=\"fixed/traits/trait.ToFixed.html#tymethod.to_fixed\" title=\"method fixed::traits::ToFixed::to_fixed\">to_fixed</a>()</code>.</li>\n</ul>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>For floating-point numbers, panics if the value is not <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f64.html#method.is_finite\" title=\"method f64::is_finite\">finite</a>.</p>\n<p>When debug assertions are enabled, panics if the value does not fit.\nWhen debug assertions are not enabled, the wrapped value can be\nreturned, but it is not considered a breaking change if in the future\nit panics; if wrapping is required use <a href=\"fixed/struct.FixedU8.html#method.wrapping_from_num\" title=\"associated function fixed::FixedU8::wrapping_from_num\"><code>wrapping_from_num</code></a> instead.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::types::I16F16;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n\n<span class=\"comment\">// 1.75 is 1.11 in binary\n</span><span class=\"kw\">let </span>src = I16F16::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">16 </span>- <span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(src), Fix::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">2</span>)));\n\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3i32</span>), Fix::from_bits(<span class=\"number\">3 </span>&lt;&lt; <span class=\"number\">4</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3i64</span>), Fix::from_bits(<span class=\"number\">3 </span>&lt;&lt; <span class=\"number\">4</span>));\n\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">1.75f32</span>), Fix::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">2</span>)));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">1.75f64</span>), Fix::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">4</span>-<span class=\"number\">2</span>)));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_num\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed/struct.FixedU8.html#tymethod.to_num\" class=\"fn\">to_num</a>&lt;Dst: <a class=\"trait\" href=\"fixed/traits/trait.FromFixed.html\" title=\"trait fixed::traits::FromFixed\">FromFixed</a>&gt;(self) -&gt; Dst</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to another number.</p>\n<p>The other number can be:</p>\n<ul>\n<li>Another fixed-point number. Any extra fractional bits are\ndiscarded, which rounds towards −∞.</li>\n<li>An integer of type <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\" title=\"primitive i8\"><code>i8</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\" title=\"primitive i16\"><code>i16</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\" title=\"primitive i32\"><code>i32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\" title=\"primitive i64\"><code>i64</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\" title=\"primitive i128\"><code>i128</code></a>,\n<a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\" title=\"primitive isize\"><code>isize</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\" title=\"primitive u8\"><code>u8</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\" title=\"primitive u16\"><code>u16</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\" title=\"primitive u32\"><code>u32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\" title=\"primitive u64\"><code>u64</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\" title=\"primitive u128\"><code>u128</code></a>, or\n<a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\" title=\"primitive usize\"><code>usize</code></a>. Any fractional bits are discarded, which rounds towards\n−∞.</li>\n<li>A floating-point number of type <code><a href=\"half/index.html\" title=\"mod half\">half</a>::<a href=\"half/binary16/struct.f16.html\" title=\"struct half::binary16::f16\">f16</a></code>,\n<code><a href=\"half/index.html\" title=\"mod half\">half</a>::<a href=\"half/bfloat/struct.bf16.html\" title=\"struct half::bfloat::bf16\">bf16</a></code>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f32.html\" title=\"primitive f32\"><code>f32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f64.html\" title=\"primitive f64\"><code>f64</code></a> or <a href=\"fixed/struct.F128.html\" title=\"struct fixed::F128\"><code>F128</code></a>. For\nthis conversion, the method rounds to the nearest, with ties rounding to\neven.</li>\n<li>Any other type <code>Dst</code> for which <a href=\"fixed/traits/trait.FromFixed.html\" title=\"trait fixed::traits::FromFixed\"><code>FromFixed</code></a> is implemented, in\nwhich case this method returns\n<code>Dst::<a href=\"fixed/traits/trait.FromFixed.html#tymethod.from_fixed\" title=\"associated function fixed::traits::FromFixed::from_fixed\">from_fixed</a>(self)</code>.</li>\n</ul>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>When debug assertions are enabled, panics if the value does not fit.\nWhen debug assertions are not enabled, the wrapped value can be\nreturned, but it is not considered a breaking change if in the future\nit panics; if wrapping is required use <a href=\"fixed/struct.FixedU8.html#method.wrapping_to_num\" title=\"method fixed::FixedU8::wrapping_to_num\"><code>wrapping_to_num</code></a> instead.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::types::I30F2;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n\n<span class=\"comment\">// 1.75 is 1.11 in binary\n</span><span class=\"kw\">let </span>src = Fix::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(src.to_num::&lt;I30F2&gt;(), I30F2::from_bits(<span class=\"number\">0b111</span>));\n<span class=\"comment\">// src &gt;&gt; 2 is 0.0111, which for I30F2 is truncated to 0.01\n</span><span class=\"macro\">assert_eq!</span>((src &gt;&gt; <span class=\"number\">2u32</span>).to_num::&lt;I30F2&gt;(), I30F2::from_bits(<span class=\"number\">0b1</span>));\n\n<span class=\"comment\">// 2.5 is 10.1 in binary\n</span><span class=\"kw\">let </span>two_point_5 = Fix::from_bits(<span class=\"number\">0b101 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(two_point_5.to_num::&lt;i32&gt;(), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(two_point_5.to_num::&lt;i64&gt;(), <span class=\"number\">2</span>);\n\n<span class=\"comment\">// 1.625 is 1.101 in binary\n</span><span class=\"kw\">let </span>one_point_625 = Fix::from_bits(<span class=\"number\">0b1101 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(one_point_625.to_num::&lt;f32&gt;(), <span class=\"number\">1.625f32</span>);\n<span class=\"macro\">assert_eq!</span>(one_point_625.to_num::&lt;f64&gt;(), <span class=\"number\">1.625f64</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_from_num\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_from_num\" class=\"fn\">checked_from_num</a>&lt;Src: <a class=\"trait\" href=\"fixed/traits/trait.ToFixed.html\" title=\"trait fixed::traits::ToFixed\">ToFixed</a>&gt;(src: Src) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a fixed-point number from another number if it\nfits, otherwise returns <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>.</p>\n<p>The other number can be:</p>\n<ul>\n<li>Another fixed-point number. Any extra fractional bits are\ndiscarded, which rounds towards −∞.</li>\n<li>An integer of type <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\" title=\"primitive i8\"><code>i8</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\" title=\"primitive i16\"><code>i16</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\" title=\"primitive i32\"><code>i32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\" title=\"primitive i64\"><code>i64</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\" title=\"primitive i128\"><code>i128</code></a>,\n<a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\" title=\"primitive isize\"><code>isize</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\" title=\"primitive u8\"><code>u8</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\" title=\"primitive u16\"><code>u16</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\" title=\"primitive u32\"><code>u32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\" title=\"primitive u64\"><code>u64</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\" title=\"primitive u128\"><code>u128</code></a>, or\n<a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\" title=\"primitive usize\"><code>usize</code></a>.</li>\n<li>A floating-point number of type <code><a href=\"half/index.html\" title=\"mod half\">half</a>::<a href=\"half/binary16/struct.f16.html\" title=\"struct half::binary16::f16\">f16</a></code>,\n<code><a href=\"half/index.html\" title=\"mod half\">half</a>::<a href=\"half/bfloat/struct.bf16.html\" title=\"struct half::bfloat::bf16\">bf16</a></code>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f32.html\" title=\"primitive f32\"><code>f32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f64.html\" title=\"primitive f64\"><code>f64</code></a> or <a href=\"fixed/struct.F128.html\" title=\"struct fixed::F128\"><code>F128</code></a>. For\nthis conversion, the method rounds to the nearest, with ties rounding to\neven.</li>\n<li>Any other number <code>src</code> for which <a href=\"fixed/traits/trait.ToFixed.html\" title=\"trait fixed::traits::ToFixed\"><code>ToFixed</code></a> is implemented, in\nwhich case this method returns\n<code>src.<a href=\"fixed/traits/trait.ToFixed.html#tymethod.checked_to_fixed\" title=\"method fixed::traits::ToFixed::checked_to_fixed\">checked_to_fixed</a>()</code>.</li>\n</ul>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::{U2, U4};\n<span class=\"kw\">use </span>fixed::types::I16F16;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n\n<span class=\"comment\">// 1.75 is 1.11 in binary\n</span><span class=\"kw\">let </span>src = I16F16::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">16 </span>- <span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::checked_from_num(src), <span class=\"prelude-val\">Some</span>(Fix::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">2</span>))));\n<span class=\"kw\">let </span>too_large = FixedU8::&lt;U2&gt;::MAX;\n<span class=\"macro\">assert!</span>(Fix::checked_from_num(too_large).is_none());\n\n<span class=\"macro\">assert_eq!</span>(Fix::checked_from_num(<span class=\"number\">3</span>), <span class=\"prelude-val\">Some</span>(Fix::from_bits(<span class=\"number\">3 </span>&lt;&lt; <span class=\"number\">4</span>)));\n<span class=\"kw\">let </span>too_large = u8::MAX;\n<span class=\"macro\">assert!</span>(Fix::checked_from_num(too_large).is_none());\n<span class=\"kw\">let </span>too_small = -<span class=\"number\">1</span>;\n<span class=\"macro\">assert!</span>(Fix::checked_from_num(too_small).is_none());\n\n<span class=\"comment\">// 1.75 is 1.11 in binary\n</span><span class=\"kw\">let </span>expected = Fix::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::checked_from_num(<span class=\"number\">1.75f32</span>), <span class=\"prelude-val\">Some</span>(expected));\n<span class=\"macro\">assert_eq!</span>(Fix::checked_from_num(<span class=\"number\">1.75f64</span>), <span class=\"prelude-val\">Some</span>(expected));\n<span class=\"macro\">assert!</span>(Fix::checked_from_num(<span class=\"number\">2e38</span>).is_none());\n<span class=\"macro\">assert!</span>(Fix::checked_from_num(f64::NAN).is_none());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_to_num\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_to_num\" class=\"fn\">checked_to_num</a>&lt;Dst: <a class=\"trait\" href=\"fixed/traits/trait.FromFixed.html\" title=\"trait fixed::traits::FromFixed\">FromFixed</a>&gt;(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Dst&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to another number if it\nfits, otherwise returns <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>.</p>\n<p>The other number can be:</p>\n<ul>\n<li>Another fixed-point number. Any extra fractional bits are\ndiscarded, which rounds towards −∞.</li>\n<li>An integer of type <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\" title=\"primitive i8\"><code>i8</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\" title=\"primitive i16\"><code>i16</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\" title=\"primitive i32\"><code>i32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\" title=\"primitive i64\"><code>i64</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\" title=\"primitive i128\"><code>i128</code></a>,\n<a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\" title=\"primitive isize\"><code>isize</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\" title=\"primitive u8\"><code>u8</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\" title=\"primitive u16\"><code>u16</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\" title=\"primitive u32\"><code>u32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\" title=\"primitive u64\"><code>u64</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\" title=\"primitive u128\"><code>u128</code></a>, or\n<a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\" title=\"primitive usize\"><code>usize</code></a>. Any fractional bits are discarded, which rounds towards\n−∞.</li>\n<li>A floating-point number of type <code><a href=\"half/index.html\" title=\"mod half\">half</a>::<a href=\"half/binary16/struct.f16.html\" title=\"struct half::binary16::f16\">f16</a></code>,\n<code><a href=\"half/index.html\" title=\"mod half\">half</a>::<a href=\"half/bfloat/struct.bf16.html\" title=\"struct half::bfloat::bf16\">bf16</a></code>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f32.html\" title=\"primitive f32\"><code>f32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f64.html\" title=\"primitive f64\"><code>f64</code></a> or <a href=\"fixed/struct.F128.html\" title=\"struct fixed::F128\"><code>F128</code></a>. For\nthis conversion, the method rounds to the nearest, with ties rounding to\neven.</li>\n<li>Any other type <code>Dst</code> for which <a href=\"fixed/traits/trait.FromFixed.html\" title=\"trait fixed::traits::FromFixed\"><code>FromFixed</code></a> is implemented, in\nwhich case this method returns\n<code>Dst::<a href=\"fixed/traits/trait.FromFixed.html#tymethod.checked_from_fixed\" title=\"associated function fixed::traits::FromFixed::checked_from_fixed\">checked_from_fixed</a>(self)</code>.</li>\n</ul>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::{U0, U4, U6};\n<span class=\"kw\">use </span>fixed::types::I16F16;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n\n<span class=\"comment\">// 1.75 is 1.11 in binary\n</span><span class=\"kw\">let </span>src = Fix::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">2</span>));\n<span class=\"kw\">let </span>expected = I16F16::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">16 </span>- <span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(src.checked_to_num::&lt;I16F16&gt;(), <span class=\"prelude-val\">Some</span>(expected));\n<span class=\"kw\">type </span>TooFewIntBits = FixedU8&lt;U6&gt;;\n<span class=\"macro\">assert!</span>(Fix::MAX.checked_to_num::&lt;TooFewIntBits&gt;().is_none());\n\n<span class=\"comment\">// 2.5 is 10.1 in binary\n</span><span class=\"kw\">let </span>two_point_5 = Fix::from_bits(<span class=\"number\">0b101 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(two_point_5.checked_to_num::&lt;i32&gt;(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(two_point_5.checked_to_num::&lt;i64&gt;(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>));\n<span class=\"kw\">type </span>AllInt = FixedU8&lt;U0&gt;;\n<span class=\"macro\">assert!</span>(AllInt::MAX.checked_to_num::&lt;i8&gt;().is_none());\n\n<span class=\"comment\">// 1.625 is 1.101 in binary\n</span><span class=\"kw\">let </span>one_point_625 = Fix::from_bits(<span class=\"number\">0b1101 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(one_point_625.checked_to_num::&lt;f32&gt;(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">1.625f32</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_from_num\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_from_num\" class=\"fn\">saturating_from_num</a>&lt;Src: <a class=\"trait\" href=\"fixed/traits/trait.ToFixed.html\" title=\"trait fixed::traits::ToFixed\">ToFixed</a>&gt;(src: Src) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a fixed-point number from another number,\nsaturating if it does not fit.</p>\n<p>The other number can be:</p>\n<ul>\n<li>Another fixed-point number. Any extra fractional bits are\ndiscarded, which rounds towards −∞.</li>\n<li>An integer of type <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\" title=\"primitive i8\"><code>i8</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\" title=\"primitive i16\"><code>i16</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\" title=\"primitive i32\"><code>i32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\" title=\"primitive i64\"><code>i64</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\" title=\"primitive i128\"><code>i128</code></a>,\n<a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\" title=\"primitive isize\"><code>isize</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\" title=\"primitive u8\"><code>u8</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\" title=\"primitive u16\"><code>u16</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\" title=\"primitive u32\"><code>u32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\" title=\"primitive u64\"><code>u64</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\" title=\"primitive u128\"><code>u128</code></a>, or\n<a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\" title=\"primitive usize\"><code>usize</code></a>.</li>\n<li>A floating-point number of type <code><a href=\"half/index.html\" title=\"mod half\">half</a>::<a href=\"half/binary16/struct.f16.html\" title=\"struct half::binary16::f16\">f16</a></code>,\n<code><a href=\"half/index.html\" title=\"mod half\">half</a>::<a href=\"half/bfloat/struct.bf16.html\" title=\"struct half::bfloat::bf16\">bf16</a></code>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f32.html\" title=\"primitive f32\"><code>f32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f64.html\" title=\"primitive f64\"><code>f64</code></a> or <a href=\"fixed/struct.F128.html\" title=\"struct fixed::F128\"><code>F128</code></a>. For\nthis conversion, the method rounds to the nearest, with ties rounding to\neven.</li>\n<li>Any other number <code>src</code> for which <a href=\"fixed/traits/trait.ToFixed.html\" title=\"trait fixed::traits::ToFixed\"><code>ToFixed</code></a> is implemented, in\nwhich case this method returns\n<code>src.<a href=\"fixed/traits/trait.ToFixed.html#tymethod.saturating_to_fixed\" title=\"method fixed::traits::ToFixed::saturating_to_fixed\">saturating_to_fixed</a>()</code>.</li>\n</ul>\n<h5 id=\"panics-2\"><a class=\"doc-anchor\" href=\"#panics-2\">§</a>Panics</h5>\n<p>This method panics if the value is a floating-point <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f64.html#method.is_nan\" title=\"method f64::is_nan\">NaN</a>.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::{U2, U4};\n<span class=\"kw\">use </span>fixed::types::I16F16;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n\n<span class=\"comment\">// 1.75 is 1.11 in binary\n</span><span class=\"kw\">let </span>src = I16F16::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">16 </span>- <span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::saturating_from_num(src), Fix::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">2</span>)));\n<span class=\"kw\">let </span>too_large = FixedU8::&lt;U2&gt;::MAX;\n<span class=\"macro\">assert_eq!</span>(Fix::saturating_from_num(too_large), Fix::MAX);\n\n<span class=\"macro\">assert_eq!</span>(Fix::saturating_from_num(<span class=\"number\">3</span>), Fix::from_bits(<span class=\"number\">3 </span>&lt;&lt; <span class=\"number\">4</span>));\n<span class=\"kw\">let </span>too_small = -<span class=\"number\">1</span>;\n<span class=\"macro\">assert_eq!</span>(Fix::saturating_from_num(too_small), Fix::MIN);\n\n<span class=\"comment\">// 1.75 is 1.11 in binary\n</span><span class=\"kw\">let </span>expected = Fix::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::saturating_from_num(<span class=\"number\">1.75f32</span>), expected);\n<span class=\"macro\">assert_eq!</span>(Fix::saturating_from_num(<span class=\"number\">1.75f64</span>), expected);\n<span class=\"macro\">assert_eq!</span>(Fix::saturating_from_num(<span class=\"number\">2e38</span>), Fix::MAX);\n<span class=\"macro\">assert_eq!</span>(Fix::saturating_from_num(f64::NEG_INFINITY), Fix::MIN);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_to_num\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_to_num\" class=\"fn\">saturating_to_num</a>&lt;Dst: <a class=\"trait\" href=\"fixed/traits/trait.FromFixed.html\" title=\"trait fixed::traits::FromFixed\">FromFixed</a>&gt;(self) -&gt; Dst</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to another number,\nsaturating the value if it does not fit.</p>\n<p>The other number can be:</p>\n<ul>\n<li>Another fixed-point number. Any extra fractional bits are\ndiscarded, which rounds towards −∞.</li>\n<li>An integer of type <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\" title=\"primitive i8\"><code>i8</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\" title=\"primitive i16\"><code>i16</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\" title=\"primitive i32\"><code>i32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\" title=\"primitive i64\"><code>i64</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\" title=\"primitive i128\"><code>i128</code></a>,\n<a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\" title=\"primitive isize\"><code>isize</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\" title=\"primitive u8\"><code>u8</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\" title=\"primitive u16\"><code>u16</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\" title=\"primitive u32\"><code>u32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\" title=\"primitive u64\"><code>u64</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\" title=\"primitive u128\"><code>u128</code></a>, or\n<a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\" title=\"primitive usize\"><code>usize</code></a>. Any fractional bits are discarded, which rounds towards\n−∞.</li>\n<li>A floating-point number of type <code><a href=\"half/index.html\" title=\"mod half\">half</a>::<a href=\"half/binary16/struct.f16.html\" title=\"struct half::binary16::f16\">f16</a></code>,\n<code><a href=\"half/index.html\" title=\"mod half\">half</a>::<a href=\"half/bfloat/struct.bf16.html\" title=\"struct half::bfloat::bf16\">bf16</a></code>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f32.html\" title=\"primitive f32\"><code>f32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f64.html\" title=\"primitive f64\"><code>f64</code></a> or <a href=\"fixed/struct.F128.html\" title=\"struct fixed::F128\"><code>F128</code></a>. For\nthis conversion, the method rounds to the nearest, with ties rounding to\neven.</li>\n<li>Any other type <code>Dst</code> for which <a href=\"fixed/traits/trait.FromFixed.html\" title=\"trait fixed::traits::FromFixed\"><code>FromFixed</code></a> is implemented, in\nwhich case this method returns\n<code>Dst::<a href=\"fixed/traits/trait.FromFixed.html#tymethod.saturating_from_fixed\" title=\"associated function fixed::traits::FromFixed::saturating_from_fixed\">saturating_from_fixed</a>(self)</code>.</li>\n</ul>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::{U0, U4, U6};\n<span class=\"kw\">use </span>fixed::types::I16F16;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n\n<span class=\"comment\">// 1.75 is 1.11 in binary\n</span><span class=\"kw\">let </span>src = Fix::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">2</span>));\n<span class=\"kw\">let </span>expected = I16F16::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">16 </span>- <span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(src.saturating_to_num::&lt;I16F16&gt;(), expected);\n<span class=\"kw\">type </span>TooFewIntBits = FixedU8&lt;U6&gt;;\n<span class=\"kw\">let </span>saturated = Fix::MAX.saturating_to_num::&lt;TooFewIntBits&gt;();\n<span class=\"macro\">assert_eq!</span>(saturated, TooFewIntBits::MAX);\n\n<span class=\"comment\">// 2.5 is 10.1 in binary\n</span><span class=\"kw\">let </span>two_point_5 = Fix::from_bits(<span class=\"number\">0b101 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(two_point_5.saturating_to_num::&lt;i32&gt;(), <span class=\"number\">2</span>);\n<span class=\"kw\">type </span>AllInt = FixedU8&lt;U0&gt;;\n<span class=\"macro\">assert_eq!</span>(AllInt::MAX.saturating_to_num::&lt;i8&gt;(), i8::MAX);\n\n<span class=\"comment\">// 1.625 is 1.101 in binary\n</span><span class=\"kw\">let </span>one_point_625 = Fix::from_bits(<span class=\"number\">0b1101 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(one_point_625.saturating_to_num::&lt;f32&gt;(), <span class=\"number\">1.625f32</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_from_num\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_from_num\" class=\"fn\">wrapping_from_num</a>&lt;Src: <a class=\"trait\" href=\"fixed/traits/trait.ToFixed.html\" title=\"trait fixed::traits::ToFixed\">ToFixed</a>&gt;(src: Src) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a fixed-point number from another number,\nwrapping the value on overflow.</p>\n<p>The other number can be:</p>\n<ul>\n<li>Another fixed-point number. Any extra fractional bits are\ndiscarded, which rounds towards −∞.</li>\n<li>An integer of type <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\" title=\"primitive i8\"><code>i8</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\" title=\"primitive i16\"><code>i16</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\" title=\"primitive i32\"><code>i32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\" title=\"primitive i64\"><code>i64</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\" title=\"primitive i128\"><code>i128</code></a>,\n<a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\" title=\"primitive isize\"><code>isize</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\" title=\"primitive u8\"><code>u8</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\" title=\"primitive u16\"><code>u16</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\" title=\"primitive u32\"><code>u32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\" title=\"primitive u64\"><code>u64</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\" title=\"primitive u128\"><code>u128</code></a>, or\n<a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\" title=\"primitive usize\"><code>usize</code></a>.</li>\n<li>A floating-point number of type <code><a href=\"half/index.html\" title=\"mod half\">half</a>::<a href=\"half/binary16/struct.f16.html\" title=\"struct half::binary16::f16\">f16</a></code>,\n<code><a href=\"half/index.html\" title=\"mod half\">half</a>::<a href=\"half/bfloat/struct.bf16.html\" title=\"struct half::bfloat::bf16\">bf16</a></code>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f32.html\" title=\"primitive f32\"><code>f32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f64.html\" title=\"primitive f64\"><code>f64</code></a> or <a href=\"fixed/struct.F128.html\" title=\"struct fixed::F128\"><code>F128</code></a>. For\nthis conversion, the method rounds to the nearest, with ties rounding to\neven.</li>\n<li>Any other number <code>src</code> for which <a href=\"fixed/traits/trait.ToFixed.html\" title=\"trait fixed::traits::ToFixed\"><code>ToFixed</code></a> is implemented, in\nwhich case this method returns\n<code>src.<a href=\"fixed/traits/trait.ToFixed.html#tymethod.wrapping_to_fixed\" title=\"method fixed::traits::ToFixed::wrapping_to_fixed\">wrapping_to_fixed</a>()</code>.</li>\n</ul>\n<h5 id=\"panics-3\"><a class=\"doc-anchor\" href=\"#panics-3\">§</a>Panics</h5>\n<p>For floating-point numbers, panics if the value is not <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f64.html#method.is_finite\" title=\"method f64::is_finite\">finite</a>.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::{U0, U4};\n<span class=\"kw\">use </span>fixed::types::I16F16;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n\n<span class=\"comment\">// 1.75 is 1.11 in binary\n</span><span class=\"kw\">let </span>src = I16F16::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">16 </span>- <span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::wrapping_from_num(src), Fix::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">2</span>)));\n<span class=\"comment\">// integer 0b1101 &lt;&lt; (8 - 7) will wrap to fixed-point 1010...\n</span><span class=\"kw\">let </span>too_large = FixedU8::&lt;U0&gt;::from_bits(<span class=\"number\">0b1101 </span>&lt;&lt; (<span class=\"number\">8 </span>- <span class=\"number\">7</span>));\n<span class=\"kw\">let </span>wrapped = Fix::from_bits(<span class=\"number\">0b1010 </span>&lt;&lt; (<span class=\"number\">8 </span>- <span class=\"number\">4</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::wrapping_from_num(too_large), wrapped);\n\n<span class=\"comment\">// integer 0b1101 &lt;&lt; (8 - 7) will wrap to fixed-point 1010...\n</span><span class=\"kw\">let </span>large: u8 = <span class=\"number\">0b1101 </span>&lt;&lt; (<span class=\"number\">8 </span>- <span class=\"number\">7</span>);\n<span class=\"kw\">let </span>wrapped = Fix::from_bits(<span class=\"number\">0b1010 </span>&lt;&lt; (<span class=\"number\">8 </span>- <span class=\"number\">4</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::wrapping_from_num(large), wrapped);\n\n<span class=\"comment\">// 1.75 is 1.11 in binary\n</span><span class=\"kw\">let </span>expected = Fix::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::wrapping_from_num(<span class=\"number\">1.75f32</span>), expected);\n<span class=\"comment\">// 1.75 &lt;&lt; (8 - 4) wraps to binary 11000...\n</span><span class=\"kw\">let </span>large = <span class=\"number\">1.75 </span>* <span class=\"number\">2f32</span>.powi(<span class=\"number\">8 </span>- <span class=\"number\">4</span>);\n<span class=\"kw\">let </span>wrapped = Fix::from_bits(<span class=\"number\">0b1100 </span>&lt;&lt; (<span class=\"number\">8 </span>- <span class=\"number\">4</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::wrapping_from_num(large), wrapped);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_to_num\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_to_num\" class=\"fn\">wrapping_to_num</a>&lt;Dst: <a class=\"trait\" href=\"fixed/traits/trait.FromFixed.html\" title=\"trait fixed::traits::FromFixed\">FromFixed</a>&gt;(self) -&gt; Dst</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to another number,\nwrapping the value on overflow.</p>\n<p>The other number can be:</p>\n<ul>\n<li>Another fixed-point number. Any extra fractional bits are\ndiscarded, which rounds towards −∞.</li>\n<li>An integer of type <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\" title=\"primitive i8\"><code>i8</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\" title=\"primitive i16\"><code>i16</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\" title=\"primitive i32\"><code>i32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\" title=\"primitive i64\"><code>i64</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\" title=\"primitive i128\"><code>i128</code></a>,\n<a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\" title=\"primitive isize\"><code>isize</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\" title=\"primitive u8\"><code>u8</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\" title=\"primitive u16\"><code>u16</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\" title=\"primitive u32\"><code>u32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\" title=\"primitive u64\"><code>u64</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\" title=\"primitive u128\"><code>u128</code></a>, or\n<a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\" title=\"primitive usize\"><code>usize</code></a>. Any fractional bits are discarded, which rounds towards\n−∞.</li>\n<li>A floating-point number of type <code><a href=\"half/index.html\" title=\"mod half\">half</a>::<a href=\"half/binary16/struct.f16.html\" title=\"struct half::binary16::f16\">f16</a></code>,\n<code><a href=\"half/index.html\" title=\"mod half\">half</a>::<a href=\"half/bfloat/struct.bf16.html\" title=\"struct half::bfloat::bf16\">bf16</a></code>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f32.html\" title=\"primitive f32\"><code>f32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f64.html\" title=\"primitive f64\"><code>f64</code></a> or <a href=\"fixed/struct.F128.html\" title=\"struct fixed::F128\"><code>F128</code></a>. For\nthis conversion, the method rounds to the nearest, with ties rounding to\neven.</li>\n<li>Any other type <code>Dst</code> for which <a href=\"fixed/traits/trait.FromFixed.html\" title=\"trait fixed::traits::FromFixed\"><code>FromFixed</code></a> is implemented, in\nwhich case this method returns\n<code>Dst::<a href=\"fixed/traits/trait.FromFixed.html#tymethod.wrapping_from_fixed\" title=\"associated function fixed::traits::FromFixed::wrapping_from_fixed\">wrapping_from_fixed</a>(self)</code>.</li>\n</ul>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::{U0, U4, U6};\n<span class=\"kw\">use </span>fixed::types::I16F16;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n\n<span class=\"comment\">// 1.75 is 1.11 in binary\n</span><span class=\"kw\">let </span>src = Fix::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">2</span>));\n<span class=\"kw\">let </span>expected = I16F16::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">16 </span>- <span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(src.wrapping_to_num::&lt;I16F16&gt;(), expected);\n<span class=\"kw\">type </span>TooFewIntBits = FixedU8&lt;U6&gt;;\n<span class=\"kw\">let </span>wrapped = TooFewIntBits::from_bits(Fix::MAX.to_bits() &lt;&lt; <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.wrapping_to_num::&lt;TooFewIntBits&gt;(), wrapped);\n\n<span class=\"comment\">// 2.5 is 10.1 in binary\n</span><span class=\"kw\">let </span>two_point_5 = Fix::from_bits(<span class=\"number\">0b101 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(two_point_5.wrapping_to_num::&lt;i32&gt;(), <span class=\"number\">2</span>);\n<span class=\"kw\">type </span>AllInt = FixedU8&lt;U0&gt;;\n<span class=\"macro\">assert_eq!</span>(AllInt::MAX.wrapping_to_num::&lt;i8&gt;(), -<span class=\"number\">1</span>);\n\n<span class=\"comment\">// 1.625 is 1.101 in binary\n</span><span class=\"kw\">let </span>one_point_625 = Fix::from_bits(<span class=\"number\">0b1101 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(one_point_625.wrapping_to_num::&lt;f32&gt;(), <span class=\"number\">1.625f32</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_from_num\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_from_num\" class=\"fn\">unwrapped_from_num</a>&lt;Src: <a class=\"trait\" href=\"fixed/traits/trait.ToFixed.html\" title=\"trait fixed::traits::ToFixed\">ToFixed</a>&gt;(src: Src) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a fixed-point number from another number,\npanicking on overflow.</p>\n<p>The other number can be:</p>\n<ul>\n<li>Another fixed-point number. Any extra fractional bits are\ndiscarded, which rounds towards −∞.</li>\n<li>An integer of type <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\" title=\"primitive i8\"><code>i8</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\" title=\"primitive i16\"><code>i16</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\" title=\"primitive i32\"><code>i32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\" title=\"primitive i64\"><code>i64</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\" title=\"primitive i128\"><code>i128</code></a>,\n<a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\" title=\"primitive isize\"><code>isize</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\" title=\"primitive u8\"><code>u8</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\" title=\"primitive u16\"><code>u16</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\" title=\"primitive u32\"><code>u32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\" title=\"primitive u64\"><code>u64</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\" title=\"primitive u128\"><code>u128</code></a>, or\n<a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\" title=\"primitive usize\"><code>usize</code></a>.</li>\n<li>A floating-point number of type <code><a href=\"half/index.html\" title=\"mod half\">half</a>::<a href=\"half/binary16/struct.f16.html\" title=\"struct half::binary16::f16\">f16</a></code>,\n<code><a href=\"half/index.html\" title=\"mod half\">half</a>::<a href=\"half/bfloat/struct.bf16.html\" title=\"struct half::bfloat::bf16\">bf16</a></code>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f32.html\" title=\"primitive f32\"><code>f32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f64.html\" title=\"primitive f64\"><code>f64</code></a> or <a href=\"fixed/struct.F128.html\" title=\"struct fixed::F128\"><code>F128</code></a>. For\nthis conversion, the method rounds to the nearest, with ties rounding to\neven.</li>\n<li>Any other number <code>src</code> for which <a href=\"fixed/traits/trait.ToFixed.html\" title=\"trait fixed::traits::ToFixed\"><code>ToFixed</code></a> is implemented, in\nwhich case this method returns\n<code>src.<a href=\"fixed/traits/trait.ToFixed.html#method.unwrapped_to_fixed\" title=\"method fixed::traits::ToFixed::unwrapped_to_fixed\">unwrapped_to_fixed</a>()</code>.</li>\n</ul>\n<h5 id=\"panics-4\"><a class=\"doc-anchor\" href=\"#panics-4\">§</a>Panics</h5>\n<p>Panics if the value does not fit.</p>\n<p>For floating-point numbers, also panics if the value is not <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f64.html#method.is_finite\" title=\"method f64::is_finite\">finite</a>.</p>\n<h5 id=\"examples-10\"><a class=\"doc-anchor\" href=\"#examples-10\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::types::I16F16;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n\n<span class=\"comment\">// 1.75 is 1.11 in binary\n</span><span class=\"kw\">let </span>src = I16F16::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">16 </span>- <span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::unwrapped_from_num(src), Fix::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">2</span>)));</code></pre></div>\n<p>The following panics because of overflow.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::{U0, U4};\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>too_large = FixedU8::&lt;U0&gt;::from_bits(<span class=\"number\">0b1101 </span>&lt;&lt; (<span class=\"number\">8 </span>- <span class=\"number\">7</span>));\n<span class=\"kw\">let </span>_overflow = Fix::unwrapped_from_num(too_large);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_to_num\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_to_num\" class=\"fn\">unwrapped_to_num</a>&lt;Dst: <a class=\"trait\" href=\"fixed/traits/trait.FromFixed.html\" title=\"trait fixed::traits::FromFixed\">FromFixed</a>&gt;(self) -&gt; Dst</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to another number,\npanicking on overflow.</p>\n<p>The other number can be:</p>\n<ul>\n<li>Another fixed-point number. Any extra fractional bits are\ndiscarded, which rounds towards −∞.</li>\n<li>An integer of type <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\" title=\"primitive i8\"><code>i8</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\" title=\"primitive i16\"><code>i16</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\" title=\"primitive i32\"><code>i32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\" title=\"primitive i64\"><code>i64</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\" title=\"primitive i128\"><code>i128</code></a>,\n<a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\" title=\"primitive isize\"><code>isize</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\" title=\"primitive u8\"><code>u8</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\" title=\"primitive u16\"><code>u16</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\" title=\"primitive u32\"><code>u32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\" title=\"primitive u64\"><code>u64</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\" title=\"primitive u128\"><code>u128</code></a>, or\n<a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\" title=\"primitive usize\"><code>usize</code></a>. Any fractional bits are discarded, which rounds towards\n−∞.</li>\n<li>A floating-point number of type <code><a href=\"half/index.html\" title=\"mod half\">half</a>::<a href=\"half/binary16/struct.f16.html\" title=\"struct half::binary16::f16\">f16</a></code>,\n<code><a href=\"half/index.html\" title=\"mod half\">half</a>::<a href=\"half/bfloat/struct.bf16.html\" title=\"struct half::bfloat::bf16\">bf16</a></code>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f32.html\" title=\"primitive f32\"><code>f32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f64.html\" title=\"primitive f64\"><code>f64</code></a> or <a href=\"fixed/struct.F128.html\" title=\"struct fixed::F128\"><code>F128</code></a>. For\nthis conversion, the method rounds to the nearest, with ties rounding to\neven.</li>\n<li>Any other type <code>Dst</code> for which <a href=\"fixed/traits/trait.FromFixed.html\" title=\"trait fixed::traits::FromFixed\"><code>FromFixed</code></a> is implemented, in\nwhich case this method returns\n<code>Dst::<a href=\"fixed/traits/trait.FromFixed.html#method.unwrapped_from_fixed\" title=\"associated function fixed::traits::FromFixed::unwrapped_from_fixed\">unwrapped_from_fixed</a>(self)</code>.</li>\n</ul>\n<h5 id=\"panics-5\"><a class=\"doc-anchor\" href=\"#panics-5\">§</a>Panics</h5>\n<p>Panics if the value does not fit.</p>\n<h5 id=\"examples-11\"><a class=\"doc-anchor\" href=\"#examples-11\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::types::I16F16;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n\n<span class=\"comment\">// 1.75 is 1.11 in binary\n</span><span class=\"kw\">let </span>src = Fix::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">2</span>));\n<span class=\"kw\">let </span>expected = I16F16::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">16 </span>- <span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(src.unwrapped_to_num::&lt;I16F16&gt;(), expected);</code></pre></div>\n<p>The following panics because of overflow.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::{U4, U6};\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">type </span>TooFewIntBits = FixedU8&lt;U6&gt;;\n<span class=\"kw\">let </span>_overflow = Fix::MAX.unwrapped_to_num::&lt;TooFewIntBits&gt;();</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_from_num\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_from_num\" class=\"fn\">overflowing_from_num</a>&lt;Src: <a class=\"trait\" href=\"fixed/traits/trait.ToFixed.html\" title=\"trait fixed::traits::ToFixed\">ToFixed</a>&gt;(src: Src) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Creates a fixed-point number from another number.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the fixed-point number and a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> indicating\nwhether an overflow has occurred. On overflow, the wrapped value is\nreturned.</p>\n<p>The other number can be:</p>\n<ul>\n<li>Another fixed-point number. Any extra fractional bits are\ndiscarded, which rounds towards −∞.</li>\n<li>An integer of type <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\" title=\"primitive i8\"><code>i8</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\" title=\"primitive i16\"><code>i16</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\" title=\"primitive i32\"><code>i32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\" title=\"primitive i64\"><code>i64</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\" title=\"primitive i128\"><code>i128</code></a>,\n<a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\" title=\"primitive isize\"><code>isize</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\" title=\"primitive u8\"><code>u8</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\" title=\"primitive u16\"><code>u16</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\" title=\"primitive u32\"><code>u32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\" title=\"primitive u64\"><code>u64</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\" title=\"primitive u128\"><code>u128</code></a>, or\n<a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\" title=\"primitive usize\"><code>usize</code></a>.</li>\n<li>A floating-point number of type <code><a href=\"half/index.html\" title=\"mod half\">half</a>::<a href=\"half/binary16/struct.f16.html\" title=\"struct half::binary16::f16\">f16</a></code>,\n<code><a href=\"half/index.html\" title=\"mod half\">half</a>::<a href=\"half/bfloat/struct.bf16.html\" title=\"struct half::bfloat::bf16\">bf16</a></code>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f32.html\" title=\"primitive f32\"><code>f32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f64.html\" title=\"primitive f64\"><code>f64</code></a> or <a href=\"fixed/struct.F128.html\" title=\"struct fixed::F128\"><code>F128</code></a>. For\nthis conversion, the method rounds to the nearest, with ties rounding to\neven.</li>\n<li>Any other number <code>src</code> for which <a href=\"fixed/traits/trait.ToFixed.html\" title=\"trait fixed::traits::ToFixed\"><code>ToFixed</code></a> is implemented, in\nwhich case this method returns\n<code>src.<a href=\"fixed/traits/trait.ToFixed.html#tymethod.overflowing_to_fixed\" title=\"method fixed::traits::ToFixed::overflowing_to_fixed\">overflowing_to_fixed</a>()</code>.</li>\n</ul>\n<h5 id=\"panics-6\"><a class=\"doc-anchor\" href=\"#panics-6\">§</a>Panics</h5>\n<p>For floating-point numbers, panics if the value is not <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f64.html#method.is_finite\" title=\"method f64::is_finite\">finite</a>.</p>\n<h5 id=\"examples-12\"><a class=\"doc-anchor\" href=\"#examples-12\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::{U0, U4};\n<span class=\"kw\">use </span>fixed::types::I16F16;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n\n<span class=\"comment\">// 1.75 is 1.11 in binary\n</span><span class=\"kw\">let </span>src = I16F16::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">16 </span>- <span class=\"number\">2</span>));\n<span class=\"kw\">let </span>expected = Fix::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::overflowing_from_num(src), (expected, <span class=\"bool-val\">false</span>));\n<span class=\"comment\">// integer 0b1101 &lt;&lt; (8 - 7) will wrap to fixed-point 1010...\n</span><span class=\"kw\">let </span>too_large = FixedU8::&lt;U0&gt;::from_bits(<span class=\"number\">0b1101 </span>&lt;&lt; (<span class=\"number\">8 </span>- <span class=\"number\">7</span>));\n<span class=\"kw\">let </span>wrapped = Fix::from_bits(<span class=\"number\">0b1010 </span>&lt;&lt; (<span class=\"number\">8 </span>- <span class=\"number\">4</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::overflowing_from_num(too_large), (wrapped, <span class=\"bool-val\">true</span>));\n\n<span class=\"macro\">assert_eq!</span>(Fix::overflowing_from_num(<span class=\"number\">3</span>), (Fix::from_bits(<span class=\"number\">3 </span>&lt;&lt; <span class=\"number\">4</span>), <span class=\"bool-val\">false</span>));\n<span class=\"comment\">// integer 0b1101 &lt;&lt; (8 - 7) will wrap to fixed-point 1010...\n</span><span class=\"kw\">let </span>large: u8 = <span class=\"number\">0b1101 </span>&lt;&lt; (<span class=\"number\">8 </span>- <span class=\"number\">7</span>);\n<span class=\"kw\">let </span>wrapped = Fix::from_bits(<span class=\"number\">0b1010 </span>&lt;&lt; (<span class=\"number\">8 </span>- <span class=\"number\">4</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::overflowing_from_num(large), (wrapped, <span class=\"bool-val\">true</span>));\n\n<span class=\"comment\">// 1.75 is 1.11 in binary\n</span><span class=\"kw\">let </span>expected = Fix::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::overflowing_from_num(<span class=\"number\">1.75f32</span>), (expected, <span class=\"bool-val\">false</span>));\n<span class=\"comment\">// 1.75 &lt;&lt; (8 - 4) wraps to binary 11000...\n</span><span class=\"kw\">let </span>large = <span class=\"number\">1.75 </span>* <span class=\"number\">2f32</span>.powi(<span class=\"number\">8 </span>- <span class=\"number\">4</span>);\n<span class=\"kw\">let </span>wrapped = Fix::from_bits(<span class=\"number\">0b1100 </span>&lt;&lt; (<span class=\"number\">8 </span>- <span class=\"number\">4</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::overflowing_from_num(large), (wrapped, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_to_num\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_to_num\" class=\"fn\">overflowing_to_num</a>&lt;Dst: <a class=\"trait\" href=\"fixed/traits/trait.FromFixed.html\" title=\"trait fixed::traits::FromFixed\">FromFixed</a>&gt;(self) -&gt; (Dst, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to another number.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the number and a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> indicating whether an\noverflow has occurred. On overflow, the wrapped value is returned.</p>\n<p>The other number can be:</p>\n<ul>\n<li>Another fixed-point number. Any extra fractional bits are\ndiscarded, which rounds towards −∞.</li>\n<li>An integer of type <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\" title=\"primitive i8\"><code>i8</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\" title=\"primitive i16\"><code>i16</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\" title=\"primitive i32\"><code>i32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\" title=\"primitive i64\"><code>i64</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\" title=\"primitive i128\"><code>i128</code></a>,\n<a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\" title=\"primitive isize\"><code>isize</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\" title=\"primitive u8\"><code>u8</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\" title=\"primitive u16\"><code>u16</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\" title=\"primitive u32\"><code>u32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\" title=\"primitive u64\"><code>u64</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\" title=\"primitive u128\"><code>u128</code></a>, or\n<a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\" title=\"primitive usize\"><code>usize</code></a>. Any fractional bits are discarded, which rounds towards\n−∞.</li>\n<li>A floating-point number of type <code><a href=\"half/index.html\" title=\"mod half\">half</a>::<a href=\"half/binary16/struct.f16.html\" title=\"struct half::binary16::f16\">f16</a></code>,\n<code><a href=\"half/index.html\" title=\"mod half\">half</a>::<a href=\"half/bfloat/struct.bf16.html\" title=\"struct half::bfloat::bf16\">bf16</a></code>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f32.html\" title=\"primitive f32\"><code>f32</code></a>, <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f64.html\" title=\"primitive f64\"><code>f64</code></a> or <a href=\"fixed/struct.F128.html\" title=\"struct fixed::F128\"><code>F128</code></a>. For\nthis conversion, the method rounds to the nearest, with ties rounding to\neven.</li>\n<li>Any other type <code>Dst</code> for which <a href=\"fixed/traits/trait.FromFixed.html\" title=\"trait fixed::traits::FromFixed\"><code>FromFixed</code></a> is implemented, in\nwhich case this method returns\n<code>Dst::<a href=\"fixed/traits/trait.FromFixed.html#tymethod.overflowing_from_fixed\" title=\"associated function fixed::traits::FromFixed::overflowing_from_fixed\">overflowing_from_fixed</a>(self)</code>.</li>\n</ul>\n<h5 id=\"examples-13\"><a class=\"doc-anchor\" href=\"#examples-13\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::{U0, U4, U6};\n<span class=\"kw\">use </span>fixed::types::I16F16;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n\n<span class=\"comment\">// 1.75 is 1.11 in binary\n</span><span class=\"kw\">let </span>src = Fix::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">2</span>));\n<span class=\"kw\">let </span>expected = I16F16::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">16 </span>- <span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(src.overflowing_to_num::&lt;I16F16&gt;(), (expected, <span class=\"bool-val\">false</span>));\n<span class=\"kw\">type </span>TooFewIntBits = FixedU8&lt;U6&gt;;\n<span class=\"kw\">let </span>wrapped = TooFewIntBits::from_bits(Fix::MAX.to_bits() &lt;&lt; <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.overflowing_to_num::&lt;TooFewIntBits&gt;(), (wrapped, <span class=\"bool-val\">true</span>));\n\n<span class=\"comment\">// 2.5 is 10.1 in binary\n</span><span class=\"kw\">let </span>two_point_5 = Fix::from_bits(<span class=\"number\">0b101 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(two_point_5.overflowing_to_num::&lt;i32&gt;(), (<span class=\"number\">2</span>, <span class=\"bool-val\">false</span>));\n<span class=\"kw\">let </span>does_not_fit = FixedU8::&lt;U0&gt;::MAX;\n<span class=\"kw\">let </span>wrapped = -<span class=\"number\">1i8</span>;\n<span class=\"macro\">assert_eq!</span>(does_not_fit.overflowing_to_num::&lt;i8&gt;(), (wrapped, <span class=\"bool-val\">true</span>));\n\n<span class=\"comment\">// 1.625 is 1.101 in binary\n</span><span class=\"kw\">let </span>one_point_625 = Fix::from_bits(<span class=\"number\">0b1101 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(one_point_625.overflowing_to_num::&lt;f32&gt;(), (<span class=\"number\">1.625f32</span>, <span class=\"bool-val\">false</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.const_from_fixed\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.const_from_fixed\" class=\"fn\">const_from_fixed</a>&lt;SrcFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt;(\n    src: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;SrcFrac&gt;,\n) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a fixed-point number from a fixed-point number with the same\nunderlying integer type. Usable in constant context.</p>\n<p>This is equivalent to the <a href=\"fixed/struct.FixedU8.html#method.unwrapped_from_num\" title=\"associated function fixed::FixedU8::unwrapped_from_num\"><code>unwrapped_from_num</code></a> method with\n<code><a href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;SrcFrac&gt;</code>\nas its generic parameter, but can also be used in constant context.\nUnless required in constant context, use <a href=\"fixed/struct.FixedU8.html#method.unwrapped_from_num\" title=\"associated function fixed::FixedU8::unwrapped_from_num\"><code>unwrapped_from_num</code></a> or\n<a href=\"fixed/struct.FixedU8.html#method.from_num\" title=\"associated function fixed::FixedU8::from_num\"><code>from_num</code></a> instead.</p>\n<h5 id=\"planned-deprecation\"><a class=\"doc-anchor\" href=\"#planned-deprecation\">§</a>Planned deprecation</h5>\n<p>This method will be deprecated when the <a href=\"fixed/struct.FixedU8.html#method.unwrapped_from_num\" title=\"associated function fixed::FixedU8::unwrapped_from_num\"><code>unwrapped_from_num</code></a>\nmethod is usable in constant context.</p>\n<h5 id=\"panics-7\"><a class=\"doc-anchor\" href=\"#panics-7\">§</a>Panics</h5>\n<p>Panics if the value does not fit.</p>\n<h5 id=\"examples-14\"><a class=\"doc-anchor\" href=\"#examples-14\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::{U2, U4};\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>FixA = FixedU8&lt;U2&gt;;\n<span class=\"kw\">type </span>FixB = FixedU8&lt;U4&gt;;\n<span class=\"kw\">const </span>A: FixA = FixA::unwrapped_from_str(<span class=\"string\">\"3.5\"</span>);\n<span class=\"kw\">const </span>B: FixB = FixB::const_from_fixed(A);\n<span class=\"macro\">assert_eq!</span>(B, <span class=\"number\">3.5</span>);</code></pre></div>\n<p>The following would fail to compile because of overflow.</p>\n\n<div class=\"example-wrap compile_fail\"><a href=\"#\" class=\"tooltip\" title=\"This example deliberately fails to compile\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::{U2, U4};\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">const </span>_OVERFLOW: FixedU8&lt;U4&gt; = FixedU8::const_from_fixed(FixedU8::&lt;U2&gt;::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.const_from_int\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.const_from_int\" class=\"fn\">const_from_int</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a fixed-point number from the underlying integer type\n<a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\" title=\"primitive u8\"><code>u8</code></a>.\nUsable in constant context.</p>\n<p>This is equivalent to the <a href=\"fixed/struct.FixedU8.html#method.unwrapped_from_num\" title=\"associated function fixed::FixedU8::unwrapped_from_num\"><code>unwrapped_from_num</code></a> method with\n<a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\" title=\"primitive u8\"><code>u8</code></a>\nas its generic parameter, but can also be used in constant context.\nUnless required in constant context, use <a href=\"fixed/struct.FixedU8.html#method.unwrapped_from_num\" title=\"associated function fixed::FixedU8::unwrapped_from_num\"><code>unwrapped_from_num</code></a> or\n<a href=\"fixed/struct.FixedU8.html#method.from_num\" title=\"associated function fixed::FixedU8::from_num\"><code>from_num</code></a> instead.</p>\n<h5 id=\"planned-deprecation-1\"><a class=\"doc-anchor\" href=\"#planned-deprecation-1\">§</a>Planned deprecation</h5>\n<p>This method will be deprecated when the <a href=\"fixed/struct.FixedU8.html#method.unwrapped_from_num\" title=\"associated function fixed::FixedU8::unwrapped_from_num\"><code>unwrapped_from_num</code></a>\nmethod is usable in constant context.</p>\n<h5 id=\"panics-8\"><a class=\"doc-anchor\" href=\"#panics-8\">§</a>Panics</h5>\n<p>Panics if the value does not fit.</p>\n<h5 id=\"examples-15\"><a class=\"doc-anchor\" href=\"#examples-15\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">const </span>FIVE: Fix = Fix::const_from_int(<span class=\"number\">5</span>);\n<span class=\"macro\">assert_eq!</span>(FIVE, <span class=\"number\">5</span>);</code></pre></div>\n<p>The following would fail to compile because of overflow.</p>\n\n<div class=\"example-wrap compile_fail\"><a href=\"#\" class=\"tooltip\" title=\"This example deliberately fails to compile\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">const </span>_OVERFLOW: FixedU8&lt;U4&gt; = FixedU8::const_from_int(u8::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lit\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.lit\" class=\"fn\">lit</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Parses a fixed-point literal.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<p>This is similar to <a href=\"fixed/struct.FixedU8.html#method.from_str\" title=\"associated function fixed::FixedU8::from_str\"><code>from_str</code></a> but accepts a prefix for setting\nthe radix, and ignores underscores, such that the parsing is more similar to\nnumeric literals in Rust code.</p>\n<p>Strings starting with “<code>0b</code>” are parsed as binary, strings\nstarting with “<code>0o</code>” are parsed as octal, and strings starting with “<code>0x</code>” are\nparsed as hexadecimal.</p>\n<p>Exponents are supported as well. For decimal, binary and octal numbers, the\nseparator “<code>e</code>” or “<code>E</code>” can be used to start an exponent, which is then\nfollowed by an optional sign “<code>+</code>” or “<code>-</code>”, and then by a decimal integer which\nis the exponent. For hexadecimal numbers, since “<code>e</code>” and “<code>E</code>” are hexadecimal\ndigits, the separator “<code>@</code>” has to be used instead. The separator “<code>@</code>” is\naccepted for all radices. The parsed value is scaled by the radix to the power\nof the exponent.</p>\n<p>For binary, octal and hexadecimal, base-2 exponents are supported too, using the\nseparator “<code>p</code>” or “<code>P</code>”. The parsed value is scaled by 2 to the power of the\nexponent. For example, for hexadecimal “<code>P8</code>” means ×2⁸, and is equivalent to\n“<code>@2</code>” which means ×16².</p>\n<h5 id=\"constants\"><a class=\"doc-anchor\" href=\"#constants\">§</a>Constants</h5>\n<p>The <code>lit</code> method is useful to write constant fixed-point literals, and can be\nevaluated in constant context.</p>\n<p><strong>Warning:</strong> Normal calls to the <code>lit</code> method are <em>not</em> evaluated at compile\ntime. To ensure that the call is evaluated at compile time, <code>lit</code> must be used\nin an inline constant expression, or used to initialize a constant.</p>\n<p>For example, here <code>lit</code> would be evaluated at compile time:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">const </span>ONE_AND_HALF: Fix = Fix::lit(<span class=\"string\">\"1.5\"</span>);</code></pre></div>\n<p>However, here <code>lit</code> would be evaluated at run time:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"comment\">// Evaluated at run time.\n</span><span class=\"kw\">let </span>one_and_half = Fix::lit(<span class=\"string\">\"1.5\"</span>);</code></pre></div>\n<p>To evaluate at compile time without introducing a constant into the scope:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>one_and_half = <span class=\"kw\">const </span>{ Fix::lit(<span class=\"string\">\"1.5\"</span>) };</code></pre></div>\n<h5 id=\"panics-9\"><a class=\"doc-anchor\" href=\"#panics-9\">§</a>Panics</h5>\n<p>Panics if the number is not valid or overflows.</p>\n<h5 id=\"examples-16\"><a class=\"doc-anchor\" href=\"#examples-16\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n\n<span class=\"macro\">assert_eq!</span>(Fix::lit(<span class=\"string\">\"1.75\"</span>), <span class=\"number\">1.75</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::lit(<span class=\"string\">\"1_.7_5_\"</span>), <span class=\"number\">1.75</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::lit(<span class=\"string\">\"17.5e-1\"</span>), <span class=\"number\">1.75</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::lit(<span class=\"string\">\"0_.017_5_e+0_2\"</span>), <span class=\"number\">1.75</span>);\n\n<span class=\"macro\">assert_eq!</span>(Fix::lit(<span class=\"string\">\"0b1.11\"</span>), <span class=\"number\">1.75</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::lit(<span class=\"string\">\"0b_111e-2\"</span>), <span class=\"number\">1.75</span>);\n\n<span class=\"macro\">assert_eq!</span>(Fix::lit(<span class=\"string\">\"0o1.6\"</span>), <span class=\"number\">1.75</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::lit(<span class=\"string\">\"0o.16E1\"</span>), <span class=\"number\">1.75</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::lit(<span class=\"string\">\"0o7p-2\"</span>), <span class=\"number\">1.75</span>);\n\n<span class=\"macro\">assert_eq!</span>(Fix::lit(<span class=\"string\">\"0x1.C\"</span>), <span class=\"number\">1.75</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::lit(<span class=\"string\">\"0x0.1C@1\"</span>), <span class=\"number\">1.75</span>);</code></pre></div>\n<p>This method is useful to write constant fixed-point literals.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">const </span>ONE_AND_HALF: Fix = Fix::lit(<span class=\"string\">\"1.5\"</span>);\n<span class=\"macro\">assert_eq!</span>(ONE_AND_HALF, <span class=\"number\">1.5</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.from_str\" class=\"fn\">from_str</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses a string slice containing decimal digits to return a fixed-point number.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<p>The number can have an optional exponent. The separator “<code>e</code>”, “<code>E</code>” or “<code>@</code>”\ncan be used to start an exponent, which is then followed by an optional sign\n“<code>+</code>” or “<code>-</code>”, and then by a decimal integer which is the exponent. The parsed\nvalue is scaled by 10 to the power of the exponent.</p>\n<h5 id=\"examples-17\"><a class=\"doc-anchor\" href=\"#examples-17\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_str(<span class=\"string\">\"1.75\"</span>), <span class=\"prelude-val\">Ok</span>(Fix::from_num(<span class=\"number\">1.75</span>)));\n<span class=\"macro\">assert_eq!</span>(Fix::from_str(<span class=\"string\">\"0.00625E+3\"</span>), <span class=\"prelude-val\">Ok</span>(Fix::from_num(<span class=\"number\">6.25</span>)));\n<span class=\"macro\">assert_eq!</span>(Fix::from_str(<span class=\"string\">\"1.25e-1\"</span>), <span class=\"prelude-val\">Ok</span>(Fix::from_num(<span class=\"number\">0.125</span>)));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str_binary\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.from_str_binary\" class=\"fn\">from_str_binary</a>(\n    src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses a string slice containing binary digits to return a fixed-point number.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<p>The number can have an optional exponent. The separator “<code>e</code>”, “<code>E</code>” or “<code>@</code>”\ncan be used to start an exponent, which is then followed by an optional sign\n“<code>+</code>” or “<code>-</code>”, and then by a decimal integer which is the exponent. The parsed\nvalue is scaled by the radix (2 for binary) to the power of the exponent.</p>\n<p>Base-2 exponents are supported too, using the separator “<code>p</code>” or “<code>P</code>”. The\nparsed value is scaled by 2 to the power of the exponent. For binary, since the\nradix is 2, base-2 exponents are equivalent to the other form of exponent.</p>\n<h5 id=\"examples-18\"><a class=\"doc-anchor\" href=\"#examples-18\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"comment\">// 1.11 in binary is 1.75\n</span><span class=\"macro\">assert_eq!</span>(Fix::from_str_binary(<span class=\"string\">\"1.11\"</span>), <span class=\"prelude-val\">Ok</span>(Fix::from_num(<span class=\"number\">1.75</span>)));\n\n<span class=\"comment\">// 111.0101 in binary is 7.3125\n</span><span class=\"macro\">assert_eq!</span>(Fix::from_str_binary(<span class=\"string\">\"1.110101e2\"</span>), <span class=\"prelude-val\">Ok</span>(Fix::from_num(<span class=\"number\">7.3125</span>)));\n<span class=\"macro\">assert_eq!</span>(Fix::from_str_binary(<span class=\"string\">\"11101.01e-2\"</span>), <span class=\"prelude-val\">Ok</span>(Fix::from_num(<span class=\"number\">7.3125</span>)));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str_octal\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.from_str_octal\" class=\"fn\">from_str_octal</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses a string slice containing octal digits to return a fixed-point number.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<p>The number can have an optional exponent. The separator “<code>e</code>”, “<code>E</code>” or “<code>@</code>”\ncan be used to start an exponent, which is then followed by an optional sign\n“<code>+</code>” or “<code>-</code>”, and then by a decimal integer which is the exponent. The parsed\nvalue is scaled by 8 to the power of the exponent.</p>\n<p>Base-2 exponents are supported too, using the separator “<code>p</code>” or “<code>P</code>”. The\nparsed value is scaled by 2 to the power of the exponent. For example, for octal\n“<code>P6</code>” means ×2⁶, and is equivalent to “<code>E2</code>” which means ×8².</p>\n<h5 id=\"examples-19\"><a class=\"doc-anchor\" href=\"#examples-19\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"comment\">// 1.75 is 1.11 in binary, 1.6 in octal\n</span><span class=\"kw\">let </span>f = Fix::from_str_octal(<span class=\"string\">\"1.6\"</span>);\n<span class=\"kw\">let </span>check = Fix::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(f, <span class=\"prelude-val\">Ok</span>(check));\n<span class=\"macro\">assert_eq!</span>(Fix::from_str_octal(<span class=\"string\">\"160e-2\"</span>), <span class=\"prelude-val\">Ok</span>(check));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str_hex\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.from_str_hex\" class=\"fn\">from_str_hex</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses a string slice containing hexadecimal digits to return a fixed-point number.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<p>The number can have an optional exponent. Since “<code>e</code>” and “<code>E</code>” are valid\nhexadecimal digits, they cannot be used as a separator to start an exponent, so\n“<code>@</code>” is used instead. This is then followed by an optional sign “<code>+</code>” or “<code>-</code>”,\nand then by a decimal integer which is the exponent. The parsed value is scaled\nby 16 to the power of the exponent.</p>\n<p>Base-2 exponents are supported too, using the separator “<code>p</code>” or “<code>P</code>”. The\nparsed value is scaled by 2 to the power of the exponent. For example, for\nhexadecimal “<code>P8</code>” means ×2⁸, and is equivalent to “<code>@2</code>” which means ×16².</p>\n<h5 id=\"examples-20\"><a class=\"doc-anchor\" href=\"#examples-20\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"comment\">// 1.C in hexadecimal is 1.75\n</span><span class=\"macro\">assert_eq!</span>(Fix::from_str_hex(<span class=\"string\">\"1.C\"</span>), <span class=\"prelude-val\">Ok</span>(Fix::from_num(<span class=\"number\">1.75</span>)));\n<span class=\"macro\">assert_eq!</span>(Fix::from_str_hex(<span class=\"string\">\"1C@-1\"</span>), <span class=\"prelude-val\">Ok</span>(Fix::from_num(<span class=\"number\">1.75</span>)));\n<span class=\"macro\">assert_eq!</span>(Fix::from_str_hex(<span class=\"string\">\".01C@+2\"</span>), <span class=\"prelude-val\">Ok</span>(Fix::from_num(<span class=\"number\">1.75</span>)));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ascii\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.from_ascii\" class=\"fn\">from_ascii</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses an ASCII-byte slice containing decimal digits to return a fixed-point number.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<p>The number can have an optional exponent. The separator “<code>e</code>”, “<code>E</code>” or “<code>@</code>”\ncan be used to start an exponent, which is then followed by an optional sign\n“<code>+</code>” or “<code>-</code>”, and then by a decimal integer which is the exponent. The parsed\nvalue is scaled by 10 to the power of the exponent.</p>\n<h5 id=\"examples-21\"><a class=\"doc-anchor\" href=\"#examples-21\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_ascii(<span class=\"string\">b\"1.75\"</span>), <span class=\"prelude-val\">Ok</span>(Fix::from_num(<span class=\"number\">1.75</span>)));\n<span class=\"macro\">assert_eq!</span>(Fix::from_ascii(<span class=\"string\">b\"0.00625E+3\"</span>), <span class=\"prelude-val\">Ok</span>(Fix::from_num(<span class=\"number\">6.25</span>)));\n<span class=\"macro\">assert_eq!</span>(Fix::from_ascii(<span class=\"string\">b\"1.25e-1\"</span>), <span class=\"prelude-val\">Ok</span>(Fix::from_num(<span class=\"number\">0.125</span>)));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ascii_binary\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.from_ascii_binary\" class=\"fn\">from_ascii_binary</a>(\n    src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses an ASCII-byte slice containing binary digits to return a fixed-point number.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<p>The number can have an optional exponent. The separator “<code>e</code>”, “<code>E</code>” or “<code>@</code>”\ncan be used to start an exponent, which is then followed by an optional sign\n“<code>+</code>” or “<code>-</code>”, and then by a decimal integer which is the exponent. The parsed\nvalue is scaled by the radix (2 for binary) to the power of the exponent.</p>\n<p>Base-2 exponents are supported too, using the separator “<code>p</code>” or “<code>P</code>”. The\nparsed value is scaled by 2 to the power of the exponent. For binary, since the\nradix is 2, base-2 exponents are equivalent to the other form of exponent.</p>\n<h5 id=\"examples-22\"><a class=\"doc-anchor\" href=\"#examples-22\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"comment\">// 1.11 in binary is 1.75\n</span><span class=\"macro\">assert_eq!</span>(Fix::from_ascii_binary(<span class=\"string\">b\"1.11\"</span>), <span class=\"prelude-val\">Ok</span>(Fix::from_num(<span class=\"number\">1.75</span>)));\n\n<span class=\"comment\">// 111.0101 in binary is 7.3125\n</span><span class=\"macro\">assert_eq!</span>(Fix::from_ascii_binary(<span class=\"string\">b\"1.110101e2\"</span>), <span class=\"prelude-val\">Ok</span>(Fix::from_num(<span class=\"number\">7.3125</span>)));\n<span class=\"macro\">assert_eq!</span>(Fix::from_ascii_binary(<span class=\"string\">b\"11101.01e-2\"</span>), <span class=\"prelude-val\">Ok</span>(Fix::from_num(<span class=\"number\">7.3125</span>)));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ascii_octal\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.from_ascii_octal\" class=\"fn\">from_ascii_octal</a>(\n    src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses an ASCII-byte slice containing octal digits to return a fixed-point number.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<p>The number can have an optional exponent. The separator “<code>e</code>”, “<code>E</code>” or “<code>@</code>”\ncan be used to start an exponent, which is then followed by an optional sign\n“<code>+</code>” or “<code>-</code>”, and then by a decimal integer which is the exponent. The parsed\nvalue is scaled by 8 to the power of the exponent.</p>\n<p>Base-2 exponents are supported too, using the separator “<code>p</code>” or “<code>P</code>”. The\nparsed value is scaled by 2 to the power of the exponent. For example, for octal\n“<code>P6</code>” means ×2⁶, and is equivalent to “<code>E2</code>” which means ×8².</p>\n<h5 id=\"examples-23\"><a class=\"doc-anchor\" href=\"#examples-23\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"comment\">// 1.75 is 1.11 in binary, 1.6 in octal\n</span><span class=\"kw\">let </span>f = Fix::from_ascii_octal(<span class=\"string\">b\"1.6\"</span>);\n<span class=\"kw\">let </span>check = Fix::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(f, <span class=\"prelude-val\">Ok</span>(check));\n<span class=\"macro\">assert_eq!</span>(Fix::from_ascii_octal(<span class=\"string\">b\"160e-2\"</span>), <span class=\"prelude-val\">Ok</span>(check));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ascii_hex\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.from_ascii_hex\" class=\"fn\">from_ascii_hex</a>(\n    src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses an ASCII-byte slice containing hexadecimal digits to return\na fixed-point number.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<p>The number can have an optional exponent. Since “<code>e</code>” and “<code>E</code>” are valid\nhexadecimal digits, they cannot be used as a separator to start an exponent, so\n“<code>@</code>” is used instead. This is then followed by an optional sign “<code>+</code>” or “<code>-</code>”,\nand then by a decimal integer which is the exponent. The parsed value is scaled\nby 16 to the power of the exponent.</p>\n<p>Base-2 exponents are supported too, using the separator “<code>p</code>” or “<code>P</code>”. The\nparsed value is scaled by 2 to the power of the exponent. For example, for\nhexadecimal “<code>P8</code>” means ×2⁸, and is equivalent to “<code>@2</code>” which means ×16².</p>\n<h5 id=\"examples-24\"><a class=\"doc-anchor\" href=\"#examples-24\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"comment\">// 1.C in hexadecimal is 1.75\n</span><span class=\"macro\">assert_eq!</span>(Fix::from_ascii_hex(<span class=\"string\">b\"1.C\"</span>), <span class=\"prelude-val\">Ok</span>(Fix::from_num(<span class=\"number\">1.75</span>)));\n<span class=\"macro\">assert_eq!</span>(Fix::from_ascii_hex(<span class=\"string\">b\"1C@-1\"</span>), <span class=\"prelude-val\">Ok</span>(Fix::from_num(<span class=\"number\">1.75</span>)));\n<span class=\"macro\">assert_eq!</span>(Fix::from_ascii_hex(<span class=\"string\">b\".01C@+2\"</span>), <span class=\"prelude-val\">Ok</span>(Fix::from_num(<span class=\"number\">1.75</span>)));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_from_str\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_from_str\" class=\"fn\">saturating_from_str</a>(\n    src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses a string slice containing decimal digits to return a fixed-point number,\nsaturating on overflow.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<h5 id=\"examples-25\"><a class=\"doc-anchor\" href=\"#examples-25\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::U8F8;\n<span class=\"macro\">assert_eq!</span>(U8F8::saturating_from_str(<span class=\"string\">\"9999\"</span>), <span class=\"prelude-val\">Ok</span>(U8F8::MAX));\n<span class=\"macro\">assert_eq!</span>(U8F8::saturating_from_str(<span class=\"string\">\"-1\"</span>), <span class=\"prelude-val\">Ok</span>(U8F8::ZERO));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_from_str_binary\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_from_str_binary\" class=\"fn\">saturating_from_str_binary</a>(\n    src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses a string slice containing binary digits to return a fixed-point number,\nsaturating on overflow.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<h5 id=\"examples-26\"><a class=\"doc-anchor\" href=\"#examples-26\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::U8F8;\n<span class=\"macro\">assert_eq!</span>(U8F8::saturating_from_str_binary(<span class=\"string\">\"101100111000\"</span>), <span class=\"prelude-val\">Ok</span>(U8F8::MAX));\n<span class=\"macro\">assert_eq!</span>(U8F8::saturating_from_str_binary(<span class=\"string\">\"-1\"</span>), <span class=\"prelude-val\">Ok</span>(U8F8::ZERO));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_from_str_octal\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_from_str_octal\" class=\"fn\">saturating_from_str_octal</a>(\n    src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses a string slice containing octal digits to return a fixed-point number,\nsaturating on overflow.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<h5 id=\"examples-27\"><a class=\"doc-anchor\" href=\"#examples-27\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::U8F8;\n<span class=\"macro\">assert_eq!</span>(U8F8::saturating_from_str_octal(<span class=\"string\">\"7777\"</span>), <span class=\"prelude-val\">Ok</span>(U8F8::MAX));\n<span class=\"macro\">assert_eq!</span>(U8F8::saturating_from_str_octal(<span class=\"string\">\"-1\"</span>), <span class=\"prelude-val\">Ok</span>(U8F8::ZERO));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_from_str_hex\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_from_str_hex\" class=\"fn\">saturating_from_str_hex</a>(\n    src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Prases a string slice containing hexadecimal digits to return a fixed-point number,\nsaturating on overflow.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<h5 id=\"examples-28\"><a class=\"doc-anchor\" href=\"#examples-28\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::U8F8;\n<span class=\"macro\">assert_eq!</span>(U8F8::saturating_from_str_hex(<span class=\"string\">\"FFFF\"</span>), <span class=\"prelude-val\">Ok</span>(U8F8::MAX));\n<span class=\"macro\">assert_eq!</span>(U8F8::saturating_from_str_hex(<span class=\"string\">\"-1\"</span>), <span class=\"prelude-val\">Ok</span>(U8F8::ZERO));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_from_ascii\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_from_ascii\" class=\"fn\">saturating_from_ascii</a>(\n    src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses an ASCII-byte slice containing decimal digits to return a\nfixed-point number, saturating on overflow.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<h5 id=\"examples-29\"><a class=\"doc-anchor\" href=\"#examples-29\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::U8F8;\n<span class=\"macro\">assert_eq!</span>(U8F8::saturating_from_ascii(<span class=\"string\">b\"9999\"</span>), <span class=\"prelude-val\">Ok</span>(U8F8::MAX));\n<span class=\"macro\">assert_eq!</span>(U8F8::saturating_from_ascii(<span class=\"string\">b\"-1\"</span>), <span class=\"prelude-val\">Ok</span>(U8F8::ZERO));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_from_ascii_binary\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_from_ascii_binary\" class=\"fn\">saturating_from_ascii_binary</a>(\n    src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses an ASCII-byte slice containing binary digits to return a\nfixed-point number, saturating on overflow.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<h5 id=\"examples-30\"><a class=\"doc-anchor\" href=\"#examples-30\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::U8F8;\n<span class=\"macro\">assert_eq!</span>(U8F8::saturating_from_ascii_binary(<span class=\"string\">b\"101100111000\"</span>), <span class=\"prelude-val\">Ok</span>(U8F8::MAX));\n<span class=\"macro\">assert_eq!</span>(U8F8::saturating_from_ascii_binary(<span class=\"string\">b\"-1\"</span>), <span class=\"prelude-val\">Ok</span>(U8F8::ZERO));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_from_ascii_octal\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_from_ascii_octal\" class=\"fn\">saturating_from_ascii_octal</a>(\n    src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses an ASCII-byte slice containing octal digits to return a\nfixed-point number, saturating on overflow.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<h5 id=\"examples-31\"><a class=\"doc-anchor\" href=\"#examples-31\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::U8F8;\n<span class=\"macro\">assert_eq!</span>(U8F8::saturating_from_ascii_octal(<span class=\"string\">b\"7777\"</span>), <span class=\"prelude-val\">Ok</span>(U8F8::MAX));\n<span class=\"macro\">assert_eq!</span>(U8F8::saturating_from_ascii_octal(<span class=\"string\">b\"-1\"</span>), <span class=\"prelude-val\">Ok</span>(U8F8::ZERO));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_from_ascii_hex\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_from_ascii_hex\" class=\"fn\">saturating_from_ascii_hex</a>(\n    src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Prases an ASCII-byte slice containing hexadecimal digits to return\na fixed-point number, saturating on overflow.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<h5 id=\"examples-32\"><a class=\"doc-anchor\" href=\"#examples-32\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::U8F8;\n<span class=\"macro\">assert_eq!</span>(U8F8::saturating_from_ascii_hex(<span class=\"string\">b\"FFFF\"</span>), <span class=\"prelude-val\">Ok</span>(U8F8::MAX));\n<span class=\"macro\">assert_eq!</span>(U8F8::saturating_from_ascii_hex(<span class=\"string\">b\"-1\"</span>), <span class=\"prelude-val\">Ok</span>(U8F8::ZERO));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_from_str\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_from_str\" class=\"fn\">wrapping_from_str</a>(\n    src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses a string slice containing decimal digits to return a fixed-point number,\nwrapping on overflow.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<h5 id=\"examples-33\"><a class=\"doc-anchor\" href=\"#examples-33\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::U8F8;\n<span class=\"comment\">// 9999.5 = 15.5 + 256 × n\n</span><span class=\"macro\">assert_eq!</span>(U8F8::wrapping_from_str(<span class=\"string\">\"9999.5\"</span>), <span class=\"prelude-val\">Ok</span>(U8F8::from_num(<span class=\"number\">15.5</span>)));\n<span class=\"macro\">assert_eq!</span>(U8F8::wrapping_from_str(<span class=\"string\">\"-9999.5\"</span>), <span class=\"prelude-val\">Ok</span>(U8F8::from_num(<span class=\"number\">240.5</span>)));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_from_str_binary\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_from_str_binary\" class=\"fn\">wrapping_from_str_binary</a>(\n    src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses a string slice containing binary digits to return a fixed-point number,\nwrapping on overflow.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<h5 id=\"examples-34\"><a class=\"doc-anchor\" href=\"#examples-34\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::U8F8;\n<span class=\"kw\">let </span>check = U8F8::from_bits(<span class=\"number\">0b1110001 </span>&lt;&lt; (<span class=\"number\">8 </span>- <span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(U8F8::wrapping_from_str_binary(<span class=\"string\">\"101100111000.1\"</span>), <span class=\"prelude-val\">Ok</span>(check));\n<span class=\"macro\">assert_eq!</span>(U8F8::wrapping_from_str_binary(<span class=\"string\">\"-101100111000.1\"</span>), <span class=\"prelude-val\">Ok</span>(check.wrapping_neg()));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_from_str_octal\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_from_str_octal\" class=\"fn\">wrapping_from_str_octal</a>(\n    src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses a string slice containing octal digits to return a fixed-point number,\nwrapping on overflow.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<h5 id=\"examples-35\"><a class=\"doc-anchor\" href=\"#examples-35\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::U8F8;\n<span class=\"kw\">let </span>check = U8F8::from_bits(<span class=\"number\">0o1654 </span>&lt;&lt; (<span class=\"number\">8 </span>- <span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(U8F8::wrapping_from_str_octal(<span class=\"string\">\"7165.4\"</span>), <span class=\"prelude-val\">Ok</span>(check));\n<span class=\"macro\">assert_eq!</span>(U8F8::wrapping_from_str_octal(<span class=\"string\">\"-7165.4\"</span>), <span class=\"prelude-val\">Ok</span>(check.wrapping_neg()));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_from_str_hex\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_from_str_hex\" class=\"fn\">wrapping_from_str_hex</a>(\n    src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses a string slice containing hexadecimal digits to return a fixed-point number,\nwrapping on overflow.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<h5 id=\"examples-36\"><a class=\"doc-anchor\" href=\"#examples-36\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::U8F8;\n<span class=\"kw\">let </span>check = U8F8::from_bits(<span class=\"number\">0xFFE</span>);\n<span class=\"macro\">assert_eq!</span>(U8F8::wrapping_from_str_hex(<span class=\"string\">\"C0F.FE\"</span>), <span class=\"prelude-val\">Ok</span>(check));\n<span class=\"macro\">assert_eq!</span>(U8F8::wrapping_from_str_hex(<span class=\"string\">\"-C0F.FE\"</span>), <span class=\"prelude-val\">Ok</span>(check.wrapping_neg()));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_from_ascii\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_from_ascii\" class=\"fn\">wrapping_from_ascii</a>(\n    src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses an ASCII-byte slice containing decimal digits to return a\nfixed-point number, wrapping on overflow.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<h5 id=\"examples-37\"><a class=\"doc-anchor\" href=\"#examples-37\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::U8F8;\n<span class=\"comment\">// 9999.5 = 15.5 + 256 × n\n</span><span class=\"macro\">assert_eq!</span>(U8F8::wrapping_from_ascii(<span class=\"string\">b\"9999.5\"</span>), <span class=\"prelude-val\">Ok</span>(U8F8::from_num(<span class=\"number\">15.5</span>)));\n<span class=\"macro\">assert_eq!</span>(U8F8::wrapping_from_ascii(<span class=\"string\">b\"-9999.5\"</span>), <span class=\"prelude-val\">Ok</span>(U8F8::from_num(<span class=\"number\">240.5</span>)));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_from_ascii_binary\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_from_ascii_binary\" class=\"fn\">wrapping_from_ascii_binary</a>(\n    src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses an ASCII-byte slice containing binary digits to return a\nfixed-point number, wrapping on overflow.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<h5 id=\"examples-38\"><a class=\"doc-anchor\" href=\"#examples-38\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::U8F8;\n<span class=\"kw\">let </span>check = U8F8::from_bits(<span class=\"number\">0b1110001 </span>&lt;&lt; (<span class=\"number\">8 </span>- <span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(U8F8::wrapping_from_ascii_binary(<span class=\"string\">b\"101100111000.1\"</span>), <span class=\"prelude-val\">Ok</span>(check));\n<span class=\"macro\">assert_eq!</span>(U8F8::wrapping_from_ascii_binary(<span class=\"string\">b\"-101100111000.1\"</span>), <span class=\"prelude-val\">Ok</span>(check.wrapping_neg()));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_from_ascii_octal\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_from_ascii_octal\" class=\"fn\">wrapping_from_ascii_octal</a>(\n    src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses an ASCII-byte slice containing octal digits to return a\nfixed-point number, wrapping on overflow.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<h5 id=\"examples-39\"><a class=\"doc-anchor\" href=\"#examples-39\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::U8F8;\n<span class=\"kw\">let </span>check = U8F8::from_bits(<span class=\"number\">0o1654 </span>&lt;&lt; (<span class=\"number\">8 </span>- <span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(U8F8::wrapping_from_ascii_octal(<span class=\"string\">b\"7165.4\"</span>), <span class=\"prelude-val\">Ok</span>(check));\n<span class=\"macro\">assert_eq!</span>(U8F8::wrapping_from_ascii_octal(<span class=\"string\">b\"-7165.4\"</span>), <span class=\"prelude-val\">Ok</span>(check.wrapping_neg()));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_from_ascii_hex\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_from_ascii_hex\" class=\"fn\">wrapping_from_ascii_hex</a>(\n    src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses an ASCII-byte slice containing hexadecimal digits to return\na fixed-point number, wrapping on overflow.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<h5 id=\"examples-40\"><a class=\"doc-anchor\" href=\"#examples-40\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::U8F8;\n<span class=\"kw\">let </span>check = U8F8::from_bits(<span class=\"number\">0xFFE</span>);\n<span class=\"macro\">assert_eq!</span>(U8F8::wrapping_from_ascii_hex(<span class=\"string\">b\"C0F.FE\"</span>), <span class=\"prelude-val\">Ok</span>(check));\n<span class=\"macro\">assert_eq!</span>(U8F8::wrapping_from_ascii_hex(<span class=\"string\">b\"-C0F.FE\"</span>), <span class=\"prelude-val\">Ok</span>(check.wrapping_neg()));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_from_str\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_from_str\" class=\"fn\">unwrapped_from_str</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Parses a string slice containing decimal digits to return a fixed-point number,\npanicking on overflow.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<h5 id=\"panics-10\"><a class=\"doc-anchor\" href=\"#panics-10\">§</a>Panics</h5>\n<p>Panics if the value does not fit or if there is a parsing error.</p>\n<h5 id=\"examples-41\"><a class=\"doc-anchor\" href=\"#examples-41\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"comment\">// 1.75 is 1.11 in binary\n</span><span class=\"kw\">let </span>f = Fix::unwrapped_from_str(<span class=\"string\">\"1.75\"</span>);\n<span class=\"macro\">assert_eq!</span>(f, Fix::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">2</span>)));</code></pre></div>\n<p>The following panics because of a parsing error.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>_error = Fix::unwrapped_from_str(<span class=\"string\">\"1.75.\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_from_str_binary\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_from_str_binary\" class=\"fn\">unwrapped_from_str_binary</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Parses a string slice containing binary digits to return a fixed-point number,\npanicking on overflow.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<h5 id=\"panics-11\"><a class=\"doc-anchor\" href=\"#panics-11\">§</a>Panics</h5>\n<p>Panics if the value does not fit or if there is a parsing error.</p>\n<h5 id=\"examples-42\"><a class=\"doc-anchor\" href=\"#examples-42\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"comment\">// 1.75 is 1.11 in binary\n</span><span class=\"kw\">let </span>f = Fix::unwrapped_from_str_binary(<span class=\"string\">\"1.11\"</span>);\n<span class=\"macro\">assert_eq!</span>(f, Fix::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">2</span>)));</code></pre></div>\n<p>The following panics because of a parsing error.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>_error = Fix::unwrapped_from_str_binary(<span class=\"string\">\"1.2\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_from_str_octal\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_from_str_octal\" class=\"fn\">unwrapped_from_str_octal</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Parses a string slice containing octal digits to return a fixed-point number,\npanicking on overflow.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<h5 id=\"panics-12\"><a class=\"doc-anchor\" href=\"#panics-12\">§</a>Panics</h5>\n<p>Panics if the value does not fit or if there is a parsing error.</p>\n<h5 id=\"examples-43\"><a class=\"doc-anchor\" href=\"#examples-43\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"comment\">// 1.75 is 1.11 in binary, 1.6 in octal\n</span><span class=\"kw\">let </span>f = Fix::unwrapped_from_str_octal(<span class=\"string\">\"1.6\"</span>);\n<span class=\"macro\">assert_eq!</span>(f, Fix::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">2</span>)));</code></pre></div>\n<p>The following panics because of a parsing error.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>_error = Fix::unwrapped_from_str_octal(<span class=\"string\">\"1.8\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_from_str_hex\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_from_str_hex\" class=\"fn\">unwrapped_from_str_hex</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Parses a string slice containing hexadecimal digits to return a fixed-point number,\nwrapping on overflow.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<h5 id=\"panics-13\"><a class=\"doc-anchor\" href=\"#panics-13\">§</a>Panics</h5>\n<p>Panics if the value does not fit or if there is a parsing error.</p>\n<h5 id=\"examples-44\"><a class=\"doc-anchor\" href=\"#examples-44\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"comment\">// 1.75 is 1.11 in binary, 1.C in hexadecimal\n</span><span class=\"kw\">let </span>f = Fix::unwrapped_from_str_hex(<span class=\"string\">\"1.C\"</span>);\n<span class=\"macro\">assert_eq!</span>(f, Fix::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">2</span>)));</code></pre></div>\n<p>The following panics because of a parsing error.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>_error = Fix::unwrapped_from_str_hex(<span class=\"string\">\"1.G\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_from_ascii\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_from_ascii\" class=\"fn\">unwrapped_from_ascii</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Parses an ASCII-byte slice containing decimal digits to return a\nfixed-point number, panicking on overflow.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<h5 id=\"panics-14\"><a class=\"doc-anchor\" href=\"#panics-14\">§</a>Panics</h5>\n<p>Panics if the value does not fit or if there is a parsing error.</p>\n<h5 id=\"examples-45\"><a class=\"doc-anchor\" href=\"#examples-45\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"comment\">// 1.75 is 1.11 in binary\n</span><span class=\"kw\">let </span>f = Fix::unwrapped_from_ascii(<span class=\"string\">b\"1.75\"</span>);\n<span class=\"macro\">assert_eq!</span>(f, Fix::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">2</span>)));</code></pre></div>\n<p>The following panics because of a parsing error.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>_error = Fix::unwrapped_from_ascii(<span class=\"string\">b\"1.75.\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_from_ascii_binary\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_from_ascii_binary\" class=\"fn\">unwrapped_from_ascii_binary</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Parses an ASCII-byte slice containing binary digits to return a\nfixed-point number, panicking on overflow.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<h5 id=\"panics-15\"><a class=\"doc-anchor\" href=\"#panics-15\">§</a>Panics</h5>\n<p>Panics if the value does not fit or if there is a parsing error.</p>\n<h5 id=\"examples-46\"><a class=\"doc-anchor\" href=\"#examples-46\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"comment\">// 1.75 is 1.11 in binary\n</span><span class=\"kw\">let </span>f = Fix::unwrapped_from_ascii_binary(<span class=\"string\">b\"1.11\"</span>);\n<span class=\"macro\">assert_eq!</span>(f, Fix::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">2</span>)));</code></pre></div>\n<p>The following panics because of a parsing error.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>_error = Fix::unwrapped_from_ascii_binary(<span class=\"string\">b\"1.2\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_from_ascii_octal\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_from_ascii_octal\" class=\"fn\">unwrapped_from_ascii_octal</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Parses an ASCII-byte slice containing octal digits to return a\nfixed-point number, panicking on overflow.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<h5 id=\"panics-16\"><a class=\"doc-anchor\" href=\"#panics-16\">§</a>Panics</h5>\n<p>Panics if the value does not fit or if there is a parsing error.</p>\n<h5 id=\"examples-47\"><a class=\"doc-anchor\" href=\"#examples-47\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"comment\">// 1.75 is 1.11 in binary, 1.6 in octal\n</span><span class=\"kw\">let </span>f = Fix::unwrapped_from_ascii_octal(<span class=\"string\">b\"1.6\"</span>);\n<span class=\"macro\">assert_eq!</span>(f, Fix::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">2</span>)));</code></pre></div>\n<p>The following panics because of a parsing error.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>_error = Fix::unwrapped_from_ascii_octal(<span class=\"string\">b\"1.8\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_from_ascii_hex\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_from_ascii_hex\" class=\"fn\">unwrapped_from_ascii_hex</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Parses an ASCII-byte slice containing hexadecimal digits to return\na fixed-point number, wrapping on overflow.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<h5 id=\"panics-17\"><a class=\"doc-anchor\" href=\"#panics-17\">§</a>Panics</h5>\n<p>Panics if the value does not fit or if there is a parsing error.</p>\n<h5 id=\"examples-48\"><a class=\"doc-anchor\" href=\"#examples-48\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"comment\">// 1.75 is 1.11 in binary, 1.C in hexadecimal\n</span><span class=\"kw\">let </span>f = Fix::unwrapped_from_ascii_hex(<span class=\"string\">b\"1.C\"</span>);\n<span class=\"macro\">assert_eq!</span>(f, Fix::from_bits(<span class=\"number\">0b111 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">2</span>)));</code></pre></div>\n<p>The following panics because of a parsing error.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>_error = Fix::unwrapped_from_ascii_hex(<span class=\"string\">b\"1.G\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_from_str\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_from_str\" class=\"fn\">overflowing_from_str</a>(\n    src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>), <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses a string slice containing decimal digits to return a fixed-point number.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the fixed-point number and a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> indicating\nwhether an overflow has occurred. On overflow, the wrapped value is\nreturned.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<h5 id=\"examples-49\"><a class=\"doc-anchor\" href=\"#examples-49\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::U8F8;\n<span class=\"macro\">assert_eq!</span>(U8F8::overflowing_from_str(<span class=\"string\">\"99.5\"</span>), <span class=\"prelude-val\">Ok</span>((U8F8::from_num(<span class=\"number\">99.5</span>), <span class=\"bool-val\">false</span>)));\n<span class=\"comment\">// 9999.5 = 15.5 + 256 × n\n</span><span class=\"macro\">assert_eq!</span>(U8F8::overflowing_from_str(<span class=\"string\">\"9999.5\"</span>), <span class=\"prelude-val\">Ok</span>((U8F8::from_num(<span class=\"number\">15.5</span>), <span class=\"bool-val\">true</span>)));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_from_str_binary\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_from_str_binary\" class=\"fn\">overflowing_from_str_binary</a>(\n    src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>), <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses a string slice containing binary digits to return a fixed-point number.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the fixed-point number and a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> indicating\nwhether an overflow has occurred. On overflow, the wrapped value is\nreturned.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<h5 id=\"examples-50\"><a class=\"doc-anchor\" href=\"#examples-50\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::U8F8;\n<span class=\"kw\">let </span>check = U8F8::from_bits(<span class=\"number\">0b1110001 </span>&lt;&lt; (<span class=\"number\">8 </span>- <span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(U8F8::overflowing_from_str_binary(<span class=\"string\">\"111000.1\"</span>), <span class=\"prelude-val\">Ok</span>((check, <span class=\"bool-val\">false</span>)));\n<span class=\"macro\">assert_eq!</span>(U8F8::overflowing_from_str_binary(<span class=\"string\">\"101100111000.1\"</span>), <span class=\"prelude-val\">Ok</span>((check, <span class=\"bool-val\">true</span>)));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_from_str_octal\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_from_str_octal\" class=\"fn\">overflowing_from_str_octal</a>(\n    src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>), <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses a string slice containing octal digits to return a fixed-point number.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the fixed-point number and a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> indicating\nwhether an overflow has occurred. On overflow, the wrapped value is\nreturned.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<h5 id=\"examples-51\"><a class=\"doc-anchor\" href=\"#examples-51\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::U8F8;\n<span class=\"kw\">let </span>check = U8F8::from_bits(<span class=\"number\">0o1654 </span>&lt;&lt; (<span class=\"number\">8 </span>- <span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(U8F8::overflowing_from_str_octal(<span class=\"string\">\"165.4\"</span>), <span class=\"prelude-val\">Ok</span>((check, <span class=\"bool-val\">false</span>)));\n<span class=\"macro\">assert_eq!</span>(U8F8::overflowing_from_str_octal(<span class=\"string\">\"7165.4\"</span>), <span class=\"prelude-val\">Ok</span>((check, <span class=\"bool-val\">true</span>)));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_from_str_hex\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_from_str_hex\" class=\"fn\">overflowing_from_str_hex</a>(\n    src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>), <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses a string slice containing hexadecimal digits to return a fixed-point number.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the fixed-point number and a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> indicating\nwhether an overflow has occurred. On overflow, the wrapped value is\nreturned.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<h5 id=\"examples-52\"><a class=\"doc-anchor\" href=\"#examples-52\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::U8F8;\n<span class=\"kw\">let </span>check = U8F8::from_bits(<span class=\"number\">0xFFE</span>);\n<span class=\"macro\">assert_eq!</span>(U8F8::overflowing_from_str_hex(<span class=\"string\">\"F.FE\"</span>), <span class=\"prelude-val\">Ok</span>((check, <span class=\"bool-val\">false</span>)));\n<span class=\"macro\">assert_eq!</span>(U8F8::overflowing_from_str_hex(<span class=\"string\">\"C0F.FE\"</span>), <span class=\"prelude-val\">Ok</span>((check, <span class=\"bool-val\">true</span>)));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_from_ascii\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_from_ascii\" class=\"fn\">overflowing_from_ascii</a>(\n    src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>), <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses an ASCII-byte slice containing decimal digits to return a fixed-point number.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the fixed-point number and a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> indicating\nwhether an overflow has occurred. On overflow, the wrapped value is\nreturned.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<h5 id=\"examples-53\"><a class=\"doc-anchor\" href=\"#examples-53\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::U8F8;\n<span class=\"macro\">assert_eq!</span>(U8F8::overflowing_from_ascii(<span class=\"string\">b\"99.5\"</span>), <span class=\"prelude-val\">Ok</span>((U8F8::from_num(<span class=\"number\">99.5</span>), <span class=\"bool-val\">false</span>)));\n<span class=\"comment\">// 9999.5 = 15.5 + 256 × n\n</span><span class=\"macro\">assert_eq!</span>(U8F8::overflowing_from_ascii(<span class=\"string\">b\"9999.5\"</span>), <span class=\"prelude-val\">Ok</span>((U8F8::from_num(<span class=\"number\">15.5</span>), <span class=\"bool-val\">true</span>)));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_from_ascii_binary\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_from_ascii_binary\" class=\"fn\">overflowing_from_ascii_binary</a>(\n    src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>), <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses an ASCII-byte slice containing binary digits to return a\nfixed-point number.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the fixed-point number and a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> indicating\nwhether an overflow has occurred. On overflow, the wrapped value is\nreturned.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<h5 id=\"examples-54\"><a class=\"doc-anchor\" href=\"#examples-54\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::U8F8;\n<span class=\"kw\">let </span>check = U8F8::from_bits(<span class=\"number\">0b1110001 </span>&lt;&lt; (<span class=\"number\">8 </span>- <span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(U8F8::overflowing_from_ascii_binary(<span class=\"string\">b\"111000.1\"</span>), <span class=\"prelude-val\">Ok</span>((check, <span class=\"bool-val\">false</span>)));\n<span class=\"macro\">assert_eq!</span>(U8F8::overflowing_from_ascii_binary(<span class=\"string\">b\"101100111000.1\"</span>), <span class=\"prelude-val\">Ok</span>((check, <span class=\"bool-val\">true</span>)));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_from_ascii_octal\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_from_ascii_octal\" class=\"fn\">overflowing_from_ascii_octal</a>(\n    src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>), <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses an ASCII-byte slice containing octal digits to return a\nfixed-point number.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the fixed-point number and a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> indicating\nwhether an overflow has occurred. On overflow, the wrapped value is\nreturned.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<h5 id=\"examples-55\"><a class=\"doc-anchor\" href=\"#examples-55\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::U8F8;\n<span class=\"kw\">let </span>check = U8F8::from_bits(<span class=\"number\">0o1654 </span>&lt;&lt; (<span class=\"number\">8 </span>- <span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(U8F8::overflowing_from_ascii_octal(<span class=\"string\">b\"165.4\"</span>), <span class=\"prelude-val\">Ok</span>((check, <span class=\"bool-val\">false</span>)));\n<span class=\"macro\">assert_eq!</span>(U8F8::overflowing_from_ascii_octal(<span class=\"string\">b\"7165.4\"</span>), <span class=\"prelude-val\">Ok</span>((check, <span class=\"bool-val\">true</span>)));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_from_ascii_hex\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_from_ascii_hex\" class=\"fn\">overflowing_from_ascii_hex</a>(\n    src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>), <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses an ASCII-byte slice containing hexadecimal digits to return\na fixed-point number.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the fixed-point number and a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> indicating\nwhether an overflow has occurred. On overflow, the wrapped value is\nreturned.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n<h5 id=\"examples-56\"><a class=\"doc-anchor\" href=\"#examples-56\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::U8F8;\n<span class=\"kw\">let </span>check = U8F8::from_bits(<span class=\"number\">0xFFE</span>);\n<span class=\"macro\">assert_eq!</span>(U8F8::overflowing_from_ascii_hex(<span class=\"string\">b\"F.FE\"</span>), <span class=\"prelude-val\">Ok</span>((check, <span class=\"bool-val\">false</span>)));\n<span class=\"macro\">assert_eq!</span>(U8F8::overflowing_from_ascii_hex(<span class=\"string\">b\"C0F.FE\"</span>), <span class=\"prelude-val\">Ok</span>((check, <span class=\"bool-val\">true</span>)));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.int\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.int\" class=\"fn\">int</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the integer part.</p>\n<p>Note that for unsigned numbers, this is equivalent to <a href=\"fixed/struct.FixedU8.html#method.floor\" title=\"method fixed::FixedU8::floor\"><code>floor</code></a>.</p>\n<h5 id=\"examples-57\"><a class=\"doc-anchor\" href=\"#examples-57\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"comment\">// 0010.0000\n</span><span class=\"kw\">let </span>two = Fix::from_num(<span class=\"number\">2</span>);\n<span class=\"comment\">// 0010.0100\n</span><span class=\"kw\">let </span>two_and_quarter = two + two / <span class=\"number\">8</span>;\n<span class=\"macro\">assert_eq!</span>(two_and_quarter.int(), two);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.frac\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.frac\" class=\"fn\">frac</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the fractional part.</p>\n<h5 id=\"examples-58\"><a class=\"doc-anchor\" href=\"#examples-58\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"comment\">// 0000.0100\n</span><span class=\"kw\">let </span>quarter = Fix::ONE / <span class=\"number\">4</span>;\n<span class=\"comment\">// 0010.0100\n</span><span class=\"kw\">let </span>two_and_quarter = quarter * <span class=\"number\">9</span>;\n<span class=\"macro\">assert_eq!</span>(two_and_quarter.frac(), quarter);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.round_to_zero\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.round_to_zero\" class=\"fn\">round_to_zero</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Rounds to the next integer towards 0.</p>\n<p>Note that for unsigned numbers, this is equivalent to <a href=\"fixed/struct.FixedU8.html#method.floor\" title=\"method fixed::FixedU8::floor\"><code>floor</code></a>.</p>\n<h5 id=\"examples-59\"><a class=\"doc-anchor\" href=\"#examples-59\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2.1</span>).round_to_zero(), Fix::from_num(<span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2.9</span>).round_to_zero(), Fix::from_num(<span class=\"number\">2</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceil\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.ceil\" class=\"fn\">ceil</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Rounds to the next integer towards +∞.</p>\n<h5 id=\"panics-18\"><a class=\"doc-anchor\" href=\"#panics-18\">§</a>Panics</h5>\n<p>When debug assertions are enabled, panics if the result does not fit.\nWhen debug assertions are not enabled, the wrapped result can be\nreturned, but it is not considered a breaking change if in the future\nit panics; if wrapping is required use <a href=\"fixed/struct.FixedU8.html#method.wrapping_ceil\" title=\"method fixed::FixedU8::wrapping_ceil\"><code>wrapping_ceil</code></a> instead.</p>\n<h5 id=\"examples-60\"><a class=\"doc-anchor\" href=\"#examples-60\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2.5</span>).ceil(), Fix::from_num(<span class=\"number\">3</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.floor\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.floor\" class=\"fn\">floor</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Rounds to the next integer towards −∞.</p>\n<h5 id=\"examples-61\"><a class=\"doc-anchor\" href=\"#examples-61\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2.5</span>).floor(), Fix::from_num(<span class=\"number\">2</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.round\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.round\" class=\"fn\">round</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Rounds to the nearest integer, with ties rounded away\nfrom zero.</p>\n<h5 id=\"panics-19\"><a class=\"doc-anchor\" href=\"#panics-19\">§</a>Panics</h5>\n<p>When debug assertions are enabled, panics if the result does not fit.\nWhen debug assertions are not enabled, the wrapped result can be\nreturned, but it is not considered a breaking change if in the future\nit panics; if wrapping is required use <a href=\"fixed/struct.FixedU8.html#method.wrapping_round\" title=\"method fixed::FixedU8::wrapping_round\"><code>wrapping_round</code></a> instead.</p>\n<h5 id=\"examples-62\"><a class=\"doc-anchor\" href=\"#examples-62\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2.5</span>).round(), Fix::from_num(<span class=\"number\">3</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.round_ties_even\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.round_ties_even\" class=\"fn\">round_ties_even</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Rounds to the nearest integer, with ties rounded to even.</p>\n<h5 id=\"panics-20\"><a class=\"doc-anchor\" href=\"#panics-20\">§</a>Panics</h5>\n<p>When debug assertions are enabled, panics if the result does not fit.\nWhen debug assertions are not enabled, the wrapped result can be\nreturned, but it is not considered a breaking change if in the future\nit panics; if wrapping is required use <a href=\"fixed/struct.FixedU8.html#method.wrapping_round_ties_even\" title=\"method fixed::FixedU8::wrapping_round_ties_even\"><code>wrapping_round_ties_even</code></a>\ninstead.</p>\n<h5 id=\"examples-63\"><a class=\"doc-anchor\" href=\"#examples-63\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2.5</span>).round_ties_even(), Fix::from_num(<span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3.5</span>).round_ties_even(), Fix::from_num(<span class=\"number\">4</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_ceil\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_ceil\" class=\"fn\">checked_ceil</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked ceil. Rounds to the next integer towards +∞,\nreturning <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.</p>\n<h5 id=\"examples-64\"><a class=\"doc-anchor\" href=\"#examples-64\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2.5</span>).checked_ceil(), <span class=\"prelude-val\">Some</span>(Fix::from_num(<span class=\"number\">3</span>)));\n<span class=\"macro\">assert!</span>(Fix::MAX.checked_ceil().is_none());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_floor\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_floor\" class=\"fn\">checked_floor</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked floor. Rounds to the next integer towards −∞. Always returns <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\"><code>Some</code></a> for unsigned values.</p>\n<h5 id=\"examples-65\"><a class=\"doc-anchor\" href=\"#examples-65\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2.5</span>).checked_floor(), <span class=\"prelude-val\">Some</span>(Fix::from_num(<span class=\"number\">2</span>)));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_round\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_round\" class=\"fn\">checked_round</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked round. Rounds to the nearest integer, with ties\nrounded away from zero, returning <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.</p>\n<h5 id=\"examples-66\"><a class=\"doc-anchor\" href=\"#examples-66\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2.5</span>).checked_round(), <span class=\"prelude-val\">Some</span>(Fix::from_num(<span class=\"number\">3</span>)));\n<span class=\"macro\">assert!</span>(Fix::MAX.checked_round().is_none());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_round_ties_even\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_round_ties_even\" class=\"fn\">checked_round_ties_even</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked round. Rounds to the nearest integer, with ties rounded to\neven, returning <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.</p>\n<h5 id=\"examples-67\"><a class=\"doc-anchor\" href=\"#examples-67\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2.5</span>).checked_round_ties_even(), <span class=\"prelude-val\">Some</span>(Fix::from_num(<span class=\"number\">2</span>)));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3.5</span>).checked_round_ties_even(), <span class=\"prelude-val\">Some</span>(Fix::from_num(<span class=\"number\">4</span>)));\n<span class=\"macro\">assert!</span>(Fix::MAX.checked_round_ties_even().is_none());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_ceil\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_ceil\" class=\"fn\">saturating_ceil</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating ceil. Rounds to the next integer towards +∞,\nsaturating on overflow.</p>\n<h5 id=\"examples-68\"><a class=\"doc-anchor\" href=\"#examples-68\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2.5</span>).saturating_ceil(), Fix::from_num(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.saturating_ceil(), Fix::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_floor\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_floor\" class=\"fn\">saturating_floor</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating floor. Rounds to the next integer towards −∞. Cannot overflow for unsigned values.</p>\n<h5 id=\"examples-69\"><a class=\"doc-anchor\" href=\"#examples-69\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2.5</span>).saturating_floor(), Fix::from_num(<span class=\"number\">2</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_round\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_round\" class=\"fn\">saturating_round</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating round. Rounds to the nearest integer, with\nties rounded away from zero, and saturating on overflow.</p>\n<h5 id=\"examples-70\"><a class=\"doc-anchor\" href=\"#examples-70\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2.5</span>).saturating_round(), Fix::from_num(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.saturating_round(), Fix::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_round_ties_even\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_round_ties_even\" class=\"fn\">saturating_round_ties_even</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating round. Rounds to the nearest integer, with ties rounded\nto even, and saturating on overflow.</p>\n<h5 id=\"examples-71\"><a class=\"doc-anchor\" href=\"#examples-71\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2.5</span>).saturating_round_ties_even(), Fix::from_num(<span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3.5</span>).saturating_round_ties_even(), Fix::from_num(<span class=\"number\">4</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.saturating_round_ties_even(), Fix::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_ceil\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_ceil\" class=\"fn\">wrapping_ceil</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping ceil. Rounds to the next integer towards +∞,\nwrapping on overflow.</p>\n<h5 id=\"examples-72\"><a class=\"doc-anchor\" href=\"#examples-72\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2.5</span>).wrapping_ceil(), Fix::from_num(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.wrapping_ceil(), Fix::MIN);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_floor\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_floor\" class=\"fn\">wrapping_floor</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping floor. Rounds to the next integer towards −∞. Cannot overflow for unsigned values.</p>\n<h5 id=\"examples-73\"><a class=\"doc-anchor\" href=\"#examples-73\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2.5</span>).wrapping_floor(), Fix::from_num(<span class=\"number\">2</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_round\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_round\" class=\"fn\">wrapping_round</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping round. Rounds to the next integer to the\nnearest, with ties rounded away from zero, and wrapping on overflow.</p>\n<h5 id=\"examples-74\"><a class=\"doc-anchor\" href=\"#examples-74\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2.5</span>).wrapping_round(), Fix::from_num(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.wrapping_round(), Fix::MIN);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_round_ties_even\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_round_ties_even\" class=\"fn\">wrapping_round_ties_even</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping round. Rounds to the next integer to the nearest, with\nties rounded to even, and wrapping on overflow.</p>\n<h5 id=\"examples-75\"><a class=\"doc-anchor\" href=\"#examples-75\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2.5</span>).wrapping_round_ties_even(), Fix::from_num(<span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3.5</span>).wrapping_round_ties_even(), Fix::from_num(<span class=\"number\">4</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.wrapping_round_ties_even(), Fix::MIN);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_ceil\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_ceil\" class=\"fn\">unwrapped_ceil</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Unwrapped ceil. Rounds to the next integer towards +∞,\npanicking on overflow.</p>\n<h5 id=\"panics-21\"><a class=\"doc-anchor\" href=\"#panics-21\">§</a>Panics</h5>\n<p>Panics if the result does not fit.</p>\n<h5 id=\"examples-76\"><a class=\"doc-anchor\" href=\"#examples-76\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2.5</span>).unwrapped_ceil(), Fix::from_num(<span class=\"number\">3</span>));</code></pre></div>\n<p>The following panics because of overflow.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>_overflow = Fix::MAX.unwrapped_ceil();</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_floor\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_floor\" class=\"fn\">unwrapped_floor</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Unwrapped floor. Rounds to the next integer towards −∞. Cannot overflow for unsigned values.</p>\n<h5 id=\"examples-77\"><a class=\"doc-anchor\" href=\"#examples-77\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2.5</span>).unwrapped_floor(), Fix::from_num(<span class=\"number\">2</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_round\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_round\" class=\"fn\">unwrapped_round</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Unwrapped round. Rounds to the next integer to the\nnearest, with ties rounded away from zero, and panicking on overflow.</p>\n<h5 id=\"panics-22\"><a class=\"doc-anchor\" href=\"#panics-22\">§</a>Panics</h5>\n<p>Panics if the result does not fit.</p>\n<h5 id=\"examples-78\"><a class=\"doc-anchor\" href=\"#examples-78\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2.5</span>).unwrapped_round(), Fix::from_num(<span class=\"number\">3</span>));</code></pre></div>\n<p>The following panics because of overflow.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>_overflow = Fix::MAX.unwrapped_round();</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_round_ties_even\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_round_ties_even\" class=\"fn\">unwrapped_round_ties_even</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Unwrapped round. Rounds to the next integer to the nearest, with\nties rounded to even, and panicking on overflow.</p>\n<h5 id=\"panics-23\"><a class=\"doc-anchor\" href=\"#panics-23\">§</a>Panics</h5>\n<p>Panics if the result does not fit.</p>\n<h5 id=\"examples-79\"><a class=\"doc-anchor\" href=\"#examples-79\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2.5</span>).unwrapped_round_ties_even(), Fix::from_num(<span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3.5</span>).unwrapped_round_ties_even(), Fix::from_num(<span class=\"number\">4</span>));</code></pre></div>\n<p>The following panics because of overflow.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>_overflow = Fix::MAX.unwrapped_round_ties_even();</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_ceil\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_ceil\" class=\"fn\">overflowing_ceil</a>(self) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Overflowing ceil. Rounds to the next integer towards +∞.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the fixed-point number and a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a>, indicating\nwhether an overflow has occurred. On overflow, the wrapped value is\nreturned.</p>\n<h5 id=\"examples-80\"><a class=\"doc-anchor\" href=\"#examples-80\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2.5</span>).overflowing_ceil(), (Fix::from_num(<span class=\"number\">3</span>), <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.overflowing_ceil(), (Fix::MIN, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_floor\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_floor\" class=\"fn\">overflowing_floor</a>(self) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Overflowing floor. Rounds to the next integer towards −∞.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the fixed-point number and\n<a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>false</code></a>.</p>\n<h5 id=\"examples-81\"><a class=\"doc-anchor\" href=\"#examples-81\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2.5</span>).overflowing_floor(), (Fix::from_num(<span class=\"number\">2</span>), <span class=\"bool-val\">false</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_round\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_round\" class=\"fn\">overflowing_round</a>(self) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Overflowing round. Rounds to the next integer to the\nnearest, with ties rounded away from zero.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the fixed-point number and a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> indicating\nwhether an overflow has occurred. On overflow, the wrapped value is\nreturned.</p>\n<h5 id=\"examples-82\"><a class=\"doc-anchor\" href=\"#examples-82\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2.5</span>).overflowing_round(), (Fix::from_num(<span class=\"number\">3</span>), <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.overflowing_round(), (Fix::MIN, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_round_ties_even\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_round_ties_even\" class=\"fn\">overflowing_round_ties_even</a>(self) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Overflowing round. Rounds to the next integer to the nearest, with\nties rounded to even.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the fixed-point number and a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> indicating\nwhether an overflow has occurred. On overflow, the wrapped value is\nreturned.</p>\n<h5 id=\"examples-83\"><a class=\"doc-anchor\" href=\"#examples-83\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2.5</span>).overflowing_round_ties_even(), (Fix::from_num(<span class=\"number\">2</span>), <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3.5</span>).overflowing_round_ties_even(), (Fix::from_num(<span class=\"number\">4</span>), <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.overflowing_round_ties_even(), (Fix::MIN, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.round_ties_to_even\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.round_ties_to_even\" class=\"fn\">round_ties_to_even</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 1.28.0: renamed to <code>round_ties_even</code></span></div></span></summary><div class=\"docblock\"><p>Rounds to the nearest integer, with ties rounded to even.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_round_ties_to_even\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_round_ties_to_even\" class=\"fn\">checked_round_ties_to_even</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 1.28.0: renamed to <code>checked_round_ties_even</code></span></div></span></summary><div class=\"docblock\"><p>Checked round. Rounds to the nearest integer, with ties rounded to\neven, returning <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_round_ties_to_even\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_round_ties_to_even\" class=\"fn\">saturating_round_ties_to_even</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 1.28.0: renamed to <code>saturating_round_ties_even</code></span></div></span></summary><div class=\"docblock\"><p>Saturating round. Rounds to the nearest integer, with ties rounded\nto even, and saturating on overflow.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_round_ties_to_even\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_round_ties_to_even\" class=\"fn\">wrapping_round_ties_to_even</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 1.28.0: renamed to <code>wrapping_round_ties_even</code></span></div></span></summary><div class=\"docblock\"><p>Wrapping round. Rounds to the next integer to the nearest, with ties\nrounded to even, and wrapping on overflow.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_round_ties_to_even\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_round_ties_to_even\" class=\"fn\">unwrapped_round_ties_to_even</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 1.28.0: renamed to <code>unwrapped_round_ties_even</code></span></div></span></summary><div class=\"docblock\"><p>Unwrapped round. Rounds to the next integer to the nearest, with\nties rounded to even, and panicking on overflow.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_round_ties_to_even\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_round_ties_to_even\" class=\"fn\">overflowing_round_ties_to_even</a>(self) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 1.28.0: renamed to <code>overflowing_round_ties_even</code></span></div></span></summary><div class=\"docblock\"><p>Overflowing round. Rounds to the next integer to the nearest, with\nties rounded to even.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.int_log2\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.int_log2\" class=\"fn\">int_log2</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a></h4></section></summary><div class=\"docblock\"><p>Integer base-2 logarithm, rounded down.</p>\n<h5 id=\"panics-24\"><a class=\"doc-anchor\" href=\"#panics-24\">§</a>Panics</h5>\n<p>Panics if the fixed-point number is zero.</p>\n<h5 id=\"examples-84\"><a class=\"doc-anchor\" href=\"#examples-84\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">4</span>).int_log2(), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3.9375</span>).int_log2(), <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">0.25</span>).int_log2(), -<span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">0.1875</span>).int_log2(), -<span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.int_log10\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.int_log10\" class=\"fn\">int_log10</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a></h4></section></summary><div class=\"docblock\"><p>Integer base-10 logarithm, rounded down.</p>\n<h5 id=\"panics-25\"><a class=\"doc-anchor\" href=\"#panics-25\">§</a>Panics</h5>\n<p>Panics if the fixed-point number is zero.</p>\n<h5 id=\"examples-85\"><a class=\"doc-anchor\" href=\"#examples-85\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::{U2, U6};\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"macro\">assert_eq!</span>(FixedU8::&lt;U2&gt;::from_num(<span class=\"number\">10</span>).int_log10(), <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(FixedU8::&lt;U2&gt;::from_num(<span class=\"number\">9.75</span>).int_log10(), <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(FixedU8::&lt;U6&gt;::from_num(<span class=\"number\">0.109375</span>).int_log10(), -<span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(FixedU8::&lt;U6&gt;::from_num(<span class=\"number\">0.09375</span>).int_log10(), -<span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.int_log\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.int_log\" class=\"fn\">int_log</a>(self, base: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a></h4></section></summary><div class=\"docblock\"><p>Integer logarithm to the specified base, rounded down.</p>\n<h5 id=\"panics-26\"><a class=\"doc-anchor\" href=\"#panics-26\">§</a>Panics</h5>\n<p>Panics if the fixed-point number is zero\nor if the base is &lt; 2.</p>\n<h5 id=\"examples-86\"><a class=\"doc-anchor\" href=\"#examples-86\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">4</span>).int_log(<span class=\"number\">2</span>), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">5.75</span>).int_log(<span class=\"number\">5</span>), <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">0.25</span>).int_log(<span class=\"number\">5</span>), -<span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">0.1875</span>).int_log(<span class=\"number\">5</span>), -<span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_int_log2\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_int_log2\" class=\"fn\">checked_int_log2</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer base-2 logarithm, rounded down.\nReturns the logarithm or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the fixed-point number is\nzero.</p>\n<h5 id=\"examples-87\"><a class=\"doc-anchor\" href=\"#examples-87\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::ZERO.checked_int_log2(), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">4</span>).checked_int_log2(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3.9375</span>).checked_int_log2(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">0.25</span>).checked_int_log2(), <span class=\"prelude-val\">Some</span>(-<span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">0.1875</span>).checked_int_log2(), <span class=\"prelude-val\">Some</span>(-<span class=\"number\">3</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_int_log10\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_int_log10\" class=\"fn\">checked_int_log10</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer base-10 logarithm, rounded down.\nReturns the logarithm or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the fixed-point number is\nzero.</p>\n<h5 id=\"examples-88\"><a class=\"doc-anchor\" href=\"#examples-88\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::{U2, U6};\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"macro\">assert_eq!</span>(FixedU8::&lt;U2&gt;::ZERO.checked_int_log10(), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(FixedU8::&lt;U2&gt;::from_num(<span class=\"number\">10</span>).checked_int_log10(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(FixedU8::&lt;U2&gt;::from_num(<span class=\"number\">9.75</span>).checked_int_log10(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(FixedU8::&lt;U6&gt;::from_num(<span class=\"number\">0.109375</span>).checked_int_log10(), <span class=\"prelude-val\">Some</span>(-<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(FixedU8::&lt;U6&gt;::from_num(<span class=\"number\">0.09375</span>).checked_int_log10(), <span class=\"prelude-val\">Some</span>(-<span class=\"number\">2</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_int_log\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_int_log\" class=\"fn\">checked_int_log</a>(self, base: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer logarithm to the specified base, rounded down.\nReturns the logarithm, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the fixed-point number is\nzero\nor if the base is &lt; 2.</p>\n<h5 id=\"examples-89\"><a class=\"doc-anchor\" href=\"#examples-89\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::ZERO.checked_int_log(<span class=\"number\">5</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">4</span>).checked_int_log(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">5.75</span>).checked_int_log(<span class=\"number\">5</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">0.25</span>).checked_int_log(<span class=\"number\">5</span>), <span class=\"prelude-val\">Some</span>(-<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">0.1875</span>).checked_int_log(<span class=\"number\">5</span>), <span class=\"prelude-val\">Some</span>(-<span class=\"number\">2</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.recip\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.recip\" class=\"fn\">recip</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the reciprocal (inverse) of the fixed-point number, 1/<code>self</code>.</p>\n<h5 id=\"panics-27\"><a class=\"doc-anchor\" href=\"#panics-27\">§</a>Panics</h5>\n<p>Panics if the fixed-point number is zero.</p>\n<p>When debug assertions are enabled, this method also panics if the\nreciprocal overflows. When debug assertions are not enabled, the\nwrapped value can be returned, but it is not considered a breaking\nchange if in the future it panics; if wrapping is required use\n<a href=\"fixed/struct.FixedU8.html#method.wrapping_recip\" title=\"method fixed::FixedU8::wrapping_recip\"><code>wrapping_recip</code></a> instead.</p>\n<h5 id=\"examples-90\"><a class=\"doc-anchor\" href=\"#examples-90\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2</span>).recip(), Fix::from_num(<span class=\"number\">0.5</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_euclid\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.div_euclid\" class=\"fn\">div_euclid</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Euclidean division.</p>\n<h5 id=\"panics-28\"><a class=\"doc-anchor\" href=\"#panics-28\">§</a>Panics</h5>\n<p>Panics if the divisor is zero.</p>\n<p>When debug assertions are enabled, this method also panics if the\ndivision overflows. When debug assertions are not enabled, the wrapped\nvalue can be returned, but it is not considered a breaking change if\nin the future it panics; if wrapping is required use\n<a href=\"fixed/struct.FixedU8.html#method.wrapping_div_euclid\" title=\"method fixed::FixedU8::wrapping_div_euclid\"><code>wrapping_div_euclid</code></a> instead.</p>\n<h5 id=\"examples-91\"><a class=\"doc-anchor\" href=\"#examples-91\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">7.5</span>).div_euclid(Fix::from_num(<span class=\"number\">2</span>)), Fix::from_num(<span class=\"number\">3</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_euclid_int\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.div_euclid_int\" class=\"fn\">div_euclid_int</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Euclidean division by an integer.</p>\n<h5 id=\"panics-29\"><a class=\"doc-anchor\" href=\"#panics-29\">§</a>Panics</h5>\n<p>Panics if the divisor is zero.</p>\n<h5 id=\"examples-92\"><a class=\"doc-anchor\" href=\"#examples-92\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">7.5</span>).div_euclid_int(<span class=\"number\">2</span>), Fix::from_num(<span class=\"number\">3</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_prod\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.add_prod\" class=\"fn\">add_prod</a>&lt;AFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, BFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt;(\n    self,\n    a: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;AFrac&gt;,\n    b: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;BFrac&gt;,\n) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Adds <code>self</code> to the product <code>a</code> × <code>b</code>.</p>\n<p>The <code>a</code> and <code>b</code> parameters can have a fixed-point type like\n<code>self</code> but with a different number of fractional bits.</p>\n<p>The <a href=\"fixed/struct.FixedU8.html#method.mul_acc\" title=\"method fixed::FixedU8::mul_acc\"><code>mul_acc</code></a> method performs the same operation as this method but mutates\n<code>self</code> instead of returning the result.</p>\n<h5 id=\"panics-30\"><a class=\"doc-anchor\" href=\"#panics-30\">§</a>Panics</h5>\n<p>When debug assertions are enabled, this method panics if the result overflows.\nWhen debug assertions are not enabled, the wrapped value can be returned, but it\nis not considered a breaking change if in the future it panics; if wrapping is\nrequired use <a href=\"fixed/struct.FixedU8.html#method.wrapping_add_prod\" title=\"method fixed::FixedU8::wrapping_add_prod\"><code>wrapping_add_prod</code></a> instead.</p>\n<h5 id=\"examples-93\"><a class=\"doc-anchor\" href=\"#examples-93\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3</span>).add_prod(Fix::from_num(<span class=\"number\">4</span>), Fix::from_num(<span class=\"number\">0.5</span>)), <span class=\"number\">5</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_acc\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.mul_acc\" class=\"fn\">mul_acc</a>&lt;AFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, BFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt;(\n    &amp;mut self,\n    a: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;AFrac&gt;,\n    b: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;BFrac&gt;,\n)</h4></section></summary><div class=\"docblock\"><p>Multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>.</p>\n<p>The <code>a</code> and <code>b</code> parameters can have a fixed-point type like\n<code>self</code> but with a different number of fractional bits.</p>\n<p>The <a href=\"fixed/struct.FixedU8.html#method.add_prod\" title=\"method fixed::FixedU8::add_prod\"><code>add_prod</code></a> method performs the same operation as this method but returns\nthe result instead of mutating <code>self</code>.</p>\n<h5 id=\"panics-31\"><a class=\"doc-anchor\" href=\"#panics-31\">§</a>Panics</h5>\n<p>When debug assertions are enabled, this method panics if the result\noverflows. When debug assertions are not enabled, the wrapped value\ncan be returned, but it is not considered a breaking change if in the\nfuture it panics; if wrapping is required use <a href=\"fixed/struct.FixedU8.html#method.wrapping_mul_acc\" title=\"method fixed::FixedU8::wrapping_mul_acc\"><code>wrapping_mul_acc</code></a>\ninstead.</p>\n<h5 id=\"examples-94\"><a class=\"doc-anchor\" href=\"#examples-94\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>acc = Fix::from_num(<span class=\"number\">3</span>);\nacc.mul_acc(Fix::from_num(<span class=\"number\">4</span>), Fix::from_num(<span class=\"number\">0.5</span>));\n<span class=\"macro\">assert_eq!</span>(acc, <span class=\"number\">5</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_euclid_int\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.rem_euclid_int\" class=\"fn\">rem_euclid_int</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Remainder for Euclidean division by an integer.</p>\n<h5 id=\"panics-32\"><a class=\"doc-anchor\" href=\"#panics-32\">§</a>Panics</h5>\n<p>Panics if the divisor is zero.</p>\n<h5 id=\"examples-95\"><a class=\"doc-anchor\" href=\"#examples-95\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">7.5</span>).rem_euclid_int(<span class=\"number\">2</span>), Fix::from_num(<span class=\"number\">1.5</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sqrt\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.sqrt\" class=\"fn\">sqrt</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns the square root.</p>\n<p>This method uses an iterative method, with up to 8 iterations for\n<a href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\"><code>FixedU8</code></a>. The result is rounded down, and the error is\n&lt; <a href=\"fixed/struct.FixedU8.html#associatedconstant.DELTA\" title=\"associated constant fixed::FixedU8::DELTA\"><code>DELTA</code></a>. That is,\nresult ≤ √<code>self</code> &lt; result + <code>DELTA</code>.</p>\n<h5 id=\"examples-96\"><a class=\"doc-anchor\" href=\"#examples-96\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2</span>).sqrt(), Fix::SQRT_2);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lerp\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.lerp\" class=\"fn\">lerp</a>&lt;RangeFrac&gt;(\n    self,\n    start: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;RangeFrac&gt;,\n    end: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;RangeFrac&gt;,\n) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;RangeFrac&gt;</h4></section></summary><div class=\"docblock\"><p>Linear interpolation between <code>start</code> and <code>end</code>.</p>\n<p>Returns\n<code>start</code> + <code>self</code> × (<code>end</code> − <code>start</code>). This\nis <code>start</code> when <code>self</code> = 0, <code>end</code> when <code>self</code> = 1, and\nlinear interpolation for all other values of <code>self</code>. Linear extrapolation is\nperformed if <code>self</code> is not in the range 0 ≤ <i>x</i> ≤ 1.</p>\n<h5 id=\"panics-33\"><a class=\"doc-anchor\" href=\"#panics-33\">§</a>Panics</h5>\n<p>When debug assertions are enabled, this method panics if the result overflows.\nWhen debug assertions are not enabled, the wrapped value can be returned, but it\nis not considered a breaking change if in the future it panics; if wrapping is\nrequired use <a href=\"fixed/struct.FixedU8.html#method.wrapping_lerp\" title=\"method fixed::FixedU8::wrapping_lerp\"><code>wrapping_lerp</code></a> instead.</p>\n<h5 id=\"examples-97\"><a class=\"doc-anchor\" href=\"#examples-97\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>start = Fix::from_num(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>end = Fix::from_num(<span class=\"number\">3.5</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">0.0</span>).lerp(start, end), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">0.5</span>).lerp(start, end), <span class=\"number\">2.75</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">1.0</span>).lerp(start, end), <span class=\"number\">3.5</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2.0</span>).lerp(start, end), <span class=\"number\">5</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked multiplication. Returns the product, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.</p>\n<h5 id=\"examples-98\"><a class=\"doc-anchor\" href=\"#examples-98\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.checked_mul(Fix::ONE), <span class=\"prelude-val\">Some</span>(Fix::MAX));\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.checked_mul(Fix::from_num(<span class=\"number\">2</span>)), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_div\" class=\"fn\">checked_div</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked division. Returns the quotient, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if\nthe divisor is zero or on overflow.</p>\n<h5 id=\"examples-99\"><a class=\"doc-anchor\" href=\"#examples-99\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.checked_div(Fix::ONE), <span class=\"prelude-val\">Some</span>(Fix::MAX));\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.checked_div(Fix::ONE / <span class=\"number\">2</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_recip\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_recip\" class=\"fn\">checked_recip</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked reciprocal. Returns the reciprocal, or\n<a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if <code>self</code> is zero or on overflow.</p>\n<h5 id=\"examples-100\"><a class=\"doc-anchor\" href=\"#examples-100\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2</span>).checked_recip(), <span class=\"prelude-val\">Some</span>(Fix::from_num(<span class=\"number\">0.5</span>)));\n<span class=\"macro\">assert_eq!</span>(Fix::ZERO.checked_recip(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div_euclid\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_div_euclid\" class=\"fn\">checked_div_euclid</a>(\n    self,\n    rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked Euclidean division. Returns the quotient, or\n<a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the divisor is zero or on overflow.</p>\n<h5 id=\"examples-101\"><a class=\"doc-anchor\" href=\"#examples-101\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">7.5</span>).checked_div_euclid(Fix::from_num(<span class=\"number\">2</span>)), <span class=\"prelude-val\">Some</span>(Fix::from_num(<span class=\"number\">3</span>)));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">7.5</span>).checked_div_euclid(Fix::ZERO), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.checked_div_euclid(Fix::from_num(<span class=\"number\">0.25</span>)), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add_prod\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_add_prod\" class=\"fn\">checked_add_prod</a>&lt;AFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, BFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt;(\n    self,\n    a: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;AFrac&gt;,\n    b: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;BFrac&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Adds <code>self</code> to the product <code>a</code> × <code>b</code>, returning <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.</p>\n<p>The <code>a</code> and <code>b</code> parameters can have a fixed-point type like\n<code>self</code> but with a different number of fractional bits.</p>\n<h5 id=\"examples-102\"><a class=\"doc-anchor\" href=\"#examples-102\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(\n    Fix::from_num(<span class=\"number\">3</span>).checked_add_prod(Fix::from_num(<span class=\"number\">4</span>), Fix::from_num(<span class=\"number\">0.5</span>)),\n    <span class=\"prelude-val\">Some</span>(Fix::from_num(<span class=\"number\">5</span>))\n);\n<span class=\"macro\">assert_eq!</span>(Fix::DELTA.checked_add_prod(Fix::MAX, Fix::ONE), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul_acc\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_mul_acc\" class=\"fn\">checked_mul_acc</a>&lt;AFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, BFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt;(\n    &amp;mut self,\n    a: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;AFrac&gt;,\n    b: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;BFrac&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>,\nor returns <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.</p>\n<p>Like all other checked methods, this method wraps the successful return value in\nan <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\"><code>Option</code></a>. Since the unchecked <a href=\"fixed/struct.FixedU8.html#method.mul_acc\" title=\"method fixed::FixedU8::mul_acc\"><code>mul_acc</code></a> method does not return a value,\nwhich is equivalent to returning <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.unit.html\" title=\"primitive unit\"><code>()</code></a>, this method wraps <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.unit.html\" title=\"primitive unit\"><code>()</code></a>\ninto <code><a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.Some\" title=\"variant core::option::Option::Some\">Some</a>(<a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.unit.html\" title=\"primitive unit\">()</a>)</code> on success.</p>\n<p>When overflow occurs, <code>self</code> is not modified and retains its previous value.</p>\n<p>The <code>a</code> and <code>b</code> parameters can have a fixed-point type like\n<code>self</code> but with a different number of fractional bits.</p>\n<h5 id=\"examples-103\"><a class=\"doc-anchor\" href=\"#examples-103\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>acc = Fix::from_num(<span class=\"number\">3</span>);\n<span class=\"kw\">let </span>check = acc.checked_mul_acc(Fix::from_num(<span class=\"number\">4</span>), Fix::from_num(<span class=\"number\">0.5</span>));\n<span class=\"macro\">assert_eq!</span>(check, <span class=\"prelude-val\">Some</span>(()));\n<span class=\"macro\">assert_eq!</span>(acc, <span class=\"number\">5</span>);\n\nacc = Fix::DELTA;\n<span class=\"kw\">let </span>check = acc.checked_mul_acc(Fix::MAX, Fix::ONE);\n<span class=\"macro\">assert_eq!</span>(check, <span class=\"prelude-val\">None</span>);\n<span class=\"comment\">// acc is unchanged on error\n</span><span class=\"macro\">assert_eq!</span>(acc, Fix::DELTA);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem_int\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_rem_int\" class=\"fn\">checked_rem_int</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked fixed-point remainder for division by an integer.\nReturns the remainder, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the divisor is zero.</p>\n<h5 id=\"examples-104\"><a class=\"doc-anchor\" href=\"#examples-104\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3.75</span>).checked_rem_int(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(Fix::from_num(<span class=\"number\">1.75</span>)));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3.75</span>).checked_rem_int(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div_euclid_int\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_div_euclid_int\" class=\"fn\">checked_div_euclid_int</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked Euclidean division by an integer. Returns the\nquotient, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the divisor is zero.</p>\n<h5 id=\"examples-105\"><a class=\"doc-anchor\" href=\"#examples-105\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">7.5</span>).checked_div_euclid_int(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(Fix::from_num(<span class=\"number\">3</span>)));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">7.5</span>).checked_div_euclid_int(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem_euclid_int\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_rem_euclid_int\" class=\"fn\">checked_rem_euclid_int</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked remainder for Euclidean division by an integer.\nReturns the remainder, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the divisor is zero.</p>\n<h5 id=\"examples-106\"><a class=\"doc-anchor\" href=\"#examples-106\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">7.5</span>).checked_rem_euclid_int(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(Fix::from_num(<span class=\"number\">1.5</span>)));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">7.5</span>).checked_rem_euclid_int(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sqrt\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_sqrt\" class=\"fn\">checked_sqrt</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Checked square root. Always returns the square root for unsigned numbers.</p>\n<p>This method uses an iterative method, with up to 8 iterations for\n<a href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\"><code>FixedU8</code></a>. The result is rounded down, and the error is\n&lt; <a href=\"fixed/struct.FixedU8.html#associatedconstant.DELTA\" title=\"associated constant fixed::FixedU8::DELTA\"><code>DELTA</code></a>. That is,\nresult ≤ √<code>self</code> &lt; result + <code>DELTA</code>.</p>\n<h5 id=\"examples-107\"><a class=\"doc-anchor\" href=\"#examples-107\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2</span>).checked_sqrt(), <span class=\"prelude-val\">Some</span>(Fix::SQRT_2));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_lerp\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.checked_lerp\" class=\"fn\">checked_lerp</a>&lt;RangeFrac&gt;(\n    self,\n    start: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;RangeFrac&gt;,\n    end: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;RangeFrac&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;RangeFrac&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked linear interpolation between <code>start</code> and <code>end</code>. Returns\n<a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.</p>\n<p>The interpolted value is\n<code>start</code> + <code>self</code> × (<code>end</code> − <code>start</code>). This\nis <code>start</code> when <code>self</code> = 0, <code>end</code> when <code>self</code> = 1, and\nlinear interpolation for all other values of <code>self</code>. Linear extrapolation is\nperformed if <code>self</code> is not in the range 0 ≤ <i>x</i> ≤ 1.</p>\n<h5 id=\"examples-108\"><a class=\"doc-anchor\" href=\"#examples-108\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">0.5</span>).checked_lerp(Fix::ZERO, Fix::MAX), <span class=\"prelude-val\">Some</span>(Fix::MAX / <span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">1.5</span>).checked_lerp(Fix::ZERO, Fix::MAX), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_mul\" class=\"fn\">saturating_mul</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating multiplication. Returns the product, saturating on overflow.</p>\n<h5 id=\"examples-109\"><a class=\"doc-anchor\" href=\"#examples-109\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3</span>).saturating_mul(Fix::from_num(<span class=\"number\">2</span>)), Fix::from_num(<span class=\"number\">6</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.saturating_mul(Fix::from_num(<span class=\"number\">2</span>)), Fix::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_div\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_div\" class=\"fn\">saturating_div</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating division. Returns the quotient, saturating on overflow.</p>\n<h5 id=\"panics-34\"><a class=\"doc-anchor\" href=\"#panics-34\">§</a>Panics</h5>\n<p>Panics if the divisor is zero.</p>\n<h5 id=\"examples-110\"><a class=\"doc-anchor\" href=\"#examples-110\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>one_half = Fix::ONE / <span class=\"number\">2</span>;\n<span class=\"macro\">assert_eq!</span>(Fix::ONE.saturating_div(Fix::from_num(<span class=\"number\">2</span>)), one_half);\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.saturating_div(one_half), Fix::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_recip\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_recip\" class=\"fn\">saturating_recip</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating reciprocal. Returns the reciprocal,\nsaturating on overflow.</p>\n<h5 id=\"panics-35\"><a class=\"doc-anchor\" href=\"#panics-35\">§</a>Panics</h5>\n<p>Panics if the fixed-point number is zero.</p>\n<h5 id=\"examples-111\"><a class=\"doc-anchor\" href=\"#examples-111\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U7;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"comment\">// only one integer bit\n</span><span class=\"kw\">type </span>Fix = FixedU8&lt;U7&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">0.25</span>).saturating_recip(), Fix::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_div_euclid\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_div_euclid\" class=\"fn\">saturating_div_euclid</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating Euclidean division. Returns the quotient,\nsaturating on overflow.</p>\n<h5 id=\"panics-36\"><a class=\"doc-anchor\" href=\"#panics-36\">§</a>Panics</h5>\n<p>Panics if the divisor is zero.</p>\n<h5 id=\"examples-112\"><a class=\"doc-anchor\" href=\"#examples-112\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">7.5</span>).saturating_div_euclid(Fix::from_num(<span class=\"number\">2</span>)), Fix::from_num(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.saturating_div_euclid(Fix::from_num(<span class=\"number\">0.25</span>)), Fix::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_div_euclid_int\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_div_euclid_int\" class=\"fn\">saturating_div_euclid_int</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating Euclidean division by an integer. Returns the quotient.</p>\n<p>Can never overflow for unsigned values.</p>\n<h5 id=\"panics-37\"><a class=\"doc-anchor\" href=\"#panics-37\">§</a>Panics</h5>\n<p>Panics if the divisor is zero.</p>\n<h5 id=\"examples-113\"><a class=\"doc-anchor\" href=\"#examples-113\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">7.5</span>).saturating_div_euclid_int(<span class=\"number\">2</span>), Fix::from_num(<span class=\"number\">3</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add_prod\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_add_prod\" class=\"fn\">saturating_add_prod</a>&lt;AFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, BFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt;(\n    self,\n    a: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;AFrac&gt;,\n    b: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;BFrac&gt;,\n) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Adds <code>self</code> to the product <code>a</code> × <code>b</code>, saturating on overflow.</p>\n<p>The <code>a</code> and <code>b</code> parameters can have a fixed-point type like\n<code>self</code> but with a different number of fractional bits.</p>\n<h5 id=\"examples-114\"><a class=\"doc-anchor\" href=\"#examples-114\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(\n    Fix::from_num(<span class=\"number\">3</span>).saturating_add_prod(Fix::from_num(<span class=\"number\">4</span>), Fix::from_num(<span class=\"number\">0.5</span>)),\n    <span class=\"number\">5\n</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::ONE.saturating_add_prod(Fix::MAX, Fix::from_num(<span class=\"number\">3</span>)), Fix::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul_acc\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_mul_acc\" class=\"fn\">saturating_mul_acc</a>&lt;AFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, BFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt;(\n    &amp;mut self,\n    a: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;AFrac&gt;,\n    b: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;BFrac&gt;,\n)</h4></section></summary><div class=\"docblock\"><p>Saturating multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>,\nsaturating on overflow.</p>\n<p>The <code>a</code> and <code>b</code> parameters can have a fixed-point type like\n<code>self</code> but with a different number of fractional bits.</p>\n<h5 id=\"examples-115\"><a class=\"doc-anchor\" href=\"#examples-115\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>acc = Fix::from_num(<span class=\"number\">3</span>);\nacc.saturating_mul_acc(Fix::from_num(<span class=\"number\">4</span>), Fix::from_num(<span class=\"number\">0.5</span>));\n<span class=\"macro\">assert_eq!</span>(acc, <span class=\"number\">5</span>);\n\nacc = Fix::MAX / <span class=\"number\">2</span>;\nacc.saturating_mul_acc(Fix::MAX / <span class=\"number\">2</span>, Fix::from_num(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(acc, Fix::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_rem_euclid_int\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_rem_euclid_int\" class=\"fn\">saturating_rem_euclid_int</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating remainder for Euclidean division by an integer. Returns the remainder.</p>\n<p>Can never overflow for unsigned values.</p>\n<h5 id=\"panics-38\"><a class=\"doc-anchor\" href=\"#panics-38\">§</a>Panics</h5>\n<p>Panics if the divisor is zero.</p>\n<h5 id=\"examples-116\"><a class=\"doc-anchor\" href=\"#examples-116\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">7.5</span>).saturating_rem_euclid_int(<span class=\"number\">2</span>), Fix::from_num(<span class=\"number\">1.5</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sqrt\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_sqrt\" class=\"fn\">saturating_sqrt</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns the square root, saturating on overflow. Can never overflow for unsigned numbers.</p>\n<p>This method uses an iterative method, with up to 8 iterations for\n<a href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\"><code>FixedU8</code></a>. The result is rounded down, and the error is\n&lt; <a href=\"fixed/struct.FixedU8.html#associatedconstant.DELTA\" title=\"associated constant fixed::FixedU8::DELTA\"><code>DELTA</code></a>. That is,\nresult ≤ √<code>self</code> &lt; result + <code>DELTA</code>.</p>\n<h5 id=\"examples-117\"><a class=\"doc-anchor\" href=\"#examples-117\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2</span>).saturating_sqrt(), Fix::SQRT_2);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_lerp\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.saturating_lerp\" class=\"fn\">saturating_lerp</a>&lt;RangeFrac&gt;(\n    self,\n    start: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;RangeFrac&gt;,\n    end: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;RangeFrac&gt;,\n) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;RangeFrac&gt;</h4></section></summary><div class=\"docblock\"><p>Linear interpolation between <code>start</code> and <code>end</code>, saturating on\noverflow.</p>\n<p>The interpolated value is\n<code>start</code> + <code>self</code> × (<code>end</code> − <code>start</code>). This\nis <code>start</code> when <code>self</code> = 0, <code>end</code> when <code>self</code> = 1, and\nlinear interpolation for all other values of <code>self</code>. Linear extrapolation is\nperformed if <code>self</code> is not in the range 0 ≤ <i>x</i> ≤ 1.</p>\n<h5 id=\"examples-118\"><a class=\"doc-anchor\" href=\"#examples-118\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">0.5</span>).saturating_lerp(Fix::ZERO, Fix::MAX), Fix::MAX / <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">1.5</span>).saturating_lerp(Fix::ZERO, Fix::MAX), Fix::MAX);\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3.0</span>).saturating_lerp(Fix::MAX, Fix::ZERO), Fix::ZERO);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_mul\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_mul\" class=\"fn\">wrapping_mul</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping multiplication. Returns the product, wrapping on overflow.</p>\n<h5 id=\"examples-119\"><a class=\"doc-anchor\" href=\"#examples-119\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3</span>).wrapping_mul(Fix::from_num(<span class=\"number\">2</span>)), Fix::from_num(<span class=\"number\">6</span>));\n<span class=\"kw\">let </span>wrapped = Fix::from_bits(!<span class=\"number\">0 </span>&lt;&lt; <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.wrapping_mul(Fix::from_num(<span class=\"number\">4</span>)), wrapped);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_div\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_div\" class=\"fn\">wrapping_div</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping division. Returns the quotient, wrapping on overflow.</p>\n<h5 id=\"panics-39\"><a class=\"doc-anchor\" href=\"#panics-39\">§</a>Panics</h5>\n<p>Panics if the divisor is zero.</p>\n<h5 id=\"examples-120\"><a class=\"doc-anchor\" href=\"#examples-120\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>one_point_5 = Fix::from_bits(<span class=\"number\">0b11 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3</span>).wrapping_div(Fix::from_num(<span class=\"number\">2</span>)), one_point_5);\n<span class=\"kw\">let </span>quarter = Fix::ONE / <span class=\"number\">4</span>;\n<span class=\"kw\">let </span>wrapped = Fix::from_bits(!<span class=\"number\">0 </span>&lt;&lt; <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.wrapping_div(quarter), wrapped);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_recip\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_recip\" class=\"fn\">wrapping_recip</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping reciprocal. Returns the reciprocal,\nwrapping on overflow.</p>\n<h5 id=\"panics-40\"><a class=\"doc-anchor\" href=\"#panics-40\">§</a>Panics</h5>\n<p>Panics if the fixed-point number is zero.</p>\n<h5 id=\"examples-121\"><a class=\"doc-anchor\" href=\"#examples-121\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U7;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"comment\">// only one integer bit\n</span><span class=\"kw\">type </span>Fix = FixedU8&lt;U7&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">0.25</span>).wrapping_recip(), Fix::ZERO);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_div_euclid\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_div_euclid\" class=\"fn\">wrapping_div_euclid</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping Euclidean division. Returns the quotient, wrapping on overflow.</p>\n<h5 id=\"panics-41\"><a class=\"doc-anchor\" href=\"#panics-41\">§</a>Panics</h5>\n<p>Panics if the divisor is zero.</p>\n<h5 id=\"examples-122\"><a class=\"doc-anchor\" href=\"#examples-122\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">7.5</span>).wrapping_div_euclid(Fix::from_num(<span class=\"number\">2</span>)), Fix::from_num(<span class=\"number\">3</span>));\n<span class=\"kw\">let </span>wrapped = Fix::MAX.wrapping_mul_int(<span class=\"number\">4</span>).round_to_zero();\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.wrapping_div_euclid(Fix::from_num(<span class=\"number\">0.25</span>)), wrapped);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_div_euclid_int\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_div_euclid_int\" class=\"fn\">wrapping_div_euclid_int</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping Euclidean division by an integer. Returns the quotient.</p>\n<p>Can never overflow for unsigned values.</p>\n<h5 id=\"panics-42\"><a class=\"doc-anchor\" href=\"#panics-42\">§</a>Panics</h5>\n<p>Panics if the divisor is zero.</p>\n<h5 id=\"examples-123\"><a class=\"doc-anchor\" href=\"#examples-123\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">7.5</span>).wrapping_div_euclid_int(<span class=\"number\">2</span>), Fix::from_num(<span class=\"number\">3</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_add_prod\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_add_prod\" class=\"fn\">wrapping_add_prod</a>&lt;AFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, BFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt;(\n    self,\n    a: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;AFrac&gt;,\n    b: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;BFrac&gt;,\n) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Adds <code>self</code> to the product <code>a</code> × <code>b</code>, wrapping on overflow.</p>\n<p>The <code>a</code> and <code>b</code> parameters can have a fixed-point type like <code>self</code> but with a\ndifferent number of fractional bits.</p>\n<h5 id=\"examples-124\"><a class=\"doc-anchor\" href=\"#examples-124\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(\n    Fix::from_num(<span class=\"number\">3</span>).wrapping_add_prod(Fix::from_num(<span class=\"number\">4</span>), Fix::from_num(<span class=\"number\">0.5</span>)),\n    <span class=\"number\">5\n</span>);\n<span class=\"macro\">assert_eq!</span>(\n    Fix::MAX.wrapping_add_prod(Fix::MAX, Fix::from_num(<span class=\"number\">3</span>)),\n    Fix::MAX.wrapping_mul_int(<span class=\"number\">4</span>)\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_mul_acc\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_mul_acc\" class=\"fn\">wrapping_mul_acc</a>&lt;AFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, BFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt;(\n    &amp;mut self,\n    a: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;AFrac&gt;,\n    b: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;BFrac&gt;,\n)</h4></section></summary><div class=\"docblock\"><p>Wrapping multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>,\nwrapping on overflow.</p>\n<p>The <code>a</code> and <code>b</code> parameters can have a fixed-point type like\n<code>self</code> but with a different number of fractional bits.</p>\n<h5 id=\"examples-125\"><a class=\"doc-anchor\" href=\"#examples-125\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>acc = Fix::from_num(<span class=\"number\">3</span>);\nacc.wrapping_mul_acc(Fix::from_num(<span class=\"number\">4</span>), Fix::from_num(<span class=\"number\">0.5</span>));\n<span class=\"macro\">assert_eq!</span>(acc, <span class=\"number\">5</span>);\n\nacc = Fix::MAX;\nacc.wrapping_mul_acc(Fix::MAX, Fix::from_num(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(acc, Fix::MAX.wrapping_mul_int(<span class=\"number\">4</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_rem_euclid_int\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_rem_euclid_int\" class=\"fn\">wrapping_rem_euclid_int</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping remainder for Euclidean division by an integer. Returns the remainder.</p>\n<p>Can never overflow for unsigned values.</p>\n<h5 id=\"panics-43\"><a class=\"doc-anchor\" href=\"#panics-43\">§</a>Panics</h5>\n<p>Panics if the divisor is zero.</p>\n<h5 id=\"examples-126\"><a class=\"doc-anchor\" href=\"#examples-126\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">7.5</span>).wrapping_rem_euclid_int(<span class=\"number\">2</span>), Fix::from_num(<span class=\"number\">1.5</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_sqrt\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_sqrt\" class=\"fn\">wrapping_sqrt</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns the square root, wrapping on overflow. Can never overflow for unsigned numbers.</p>\n<p>This method uses an iterative method, with up to 8 iterations for\n<a href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\"><code>FixedU8</code></a>. The result is rounded down, and the error is\n&lt; <a href=\"fixed/struct.FixedU8.html#associatedconstant.DELTA\" title=\"associated constant fixed::FixedU8::DELTA\"><code>DELTA</code></a>. That is,\nresult ≤ √<code>self</code> &lt; result + <code>DELTA</code>.</p>\n<h5 id=\"examples-127\"><a class=\"doc-anchor\" href=\"#examples-127\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2</span>).wrapping_sqrt(), Fix::SQRT_2);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_lerp\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.wrapping_lerp\" class=\"fn\">wrapping_lerp</a>&lt;RangeFrac&gt;(\n    self,\n    start: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;RangeFrac&gt;,\n    end: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;RangeFrac&gt;,\n) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;RangeFrac&gt;</h4></section></summary><div class=\"docblock\"><p>Linear interpolation between <code>start</code> and <code>end</code>, wrapping on\noverflow.</p>\n<p>The interpolated value is\n<code>start</code> + <code>self</code> × (<code>end</code> − <code>start</code>). This\nis <code>start</code> when <code>self</code> = 0, <code>end</code> when <code>self</code> = 1, and\nlinear interpolation for all other values of <code>self</code>. Linear extrapolation is\nperformed if <code>self</code> is not in the range 0 ≤ <i>x</i> ≤ 1.</p>\n<h5 id=\"examples-128\"><a class=\"doc-anchor\" href=\"#examples-128\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">0.5</span>).wrapping_lerp(Fix::ZERO, Fix::MAX), Fix::MAX / <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(\n    Fix::from_num(<span class=\"number\">1.5</span>).wrapping_lerp(Fix::ZERO, Fix::MAX),\n    Fix::MAX.wrapping_add(Fix::MAX / <span class=\"number\">2</span>)\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_mul\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_mul\" class=\"fn\">unwrapped_mul</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Unwrapped multiplication. Returns the product, panicking on overflow.</p>\n<h5 id=\"panics-44\"><a class=\"doc-anchor\" href=\"#panics-44\">§</a>Panics</h5>\n<p>Panics if the result does not fit.</p>\n<h5 id=\"examples-129\"><a class=\"doc-anchor\" href=\"#examples-129\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3</span>).unwrapped_mul(Fix::from_num(<span class=\"number\">2</span>)), Fix::from_num(<span class=\"number\">6</span>));</code></pre></div>\n<p>The following panics because of overflow.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>_overflow = Fix::MAX.unwrapped_mul(Fix::from_num(<span class=\"number\">4</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_div\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_div\" class=\"fn\">unwrapped_div</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Unwrapped division. Returns the quotient, panicking on overflow.</p>\n<h5 id=\"panics-45\"><a class=\"doc-anchor\" href=\"#panics-45\">§</a>Panics</h5>\n<p>Panics if the divisor is zero or if the division results in overflow.</p>\n<h5 id=\"examples-130\"><a class=\"doc-anchor\" href=\"#examples-130\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>one_point_5 = Fix::from_bits(<span class=\"number\">0b11 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3</span>).unwrapped_div(Fix::from_num(<span class=\"number\">2</span>)), one_point_5);</code></pre></div>\n<p>The following panics because of overflow.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>quarter = Fix::ONE / <span class=\"number\">4</span>;\n<span class=\"kw\">let </span>_overflow = Fix::MAX.unwrapped_div(quarter);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_recip\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_recip\" class=\"fn\">unwrapped_recip</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Unwrapped reciprocal. Returns the reciprocal,\npanicking on overflow.</p>\n<h5 id=\"panics-46\"><a class=\"doc-anchor\" href=\"#panics-46\">§</a>Panics</h5>\n<p>Panics if the fixed-point number is zero or on overflow.</p>\n<h5 id=\"examples-131\"><a class=\"doc-anchor\" href=\"#examples-131\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">0.25</span>).unwrapped_recip(), Fix::from_num(<span class=\"number\">4</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_div_euclid\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_div_euclid\" class=\"fn\">unwrapped_div_euclid</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Unwrapped Euclidean division. Returns the quotient, panicking on overflow.</p>\n<h5 id=\"panics-47\"><a class=\"doc-anchor\" href=\"#panics-47\">§</a>Panics</h5>\n<p>Panics if the divisor is zero or if the division results in overflow.</p>\n<h5 id=\"examples-132\"><a class=\"doc-anchor\" href=\"#examples-132\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">7.5</span>).unwrapped_div_euclid(Fix::from_num(<span class=\"number\">2</span>)), Fix::from_num(<span class=\"number\">3</span>));</code></pre></div>\n<p>The following panics because of overflow.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>_overflow = Fix::MAX.unwrapped_div_euclid(Fix::from_num(<span class=\"number\">0.25</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_add_prod\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_add_prod\" class=\"fn\">unwrapped_add_prod</a>&lt;AFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, BFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt;(\n    self,\n    a: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;AFrac&gt;,\n    b: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;BFrac&gt;,\n) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Adds <code>self</code> to the product <code>a</code> × <code>b</code>, panicking on overflow.</p>\n<p>The <code>a</code> and <code>b</code> parameters can have a fixed-point type like\n<code>self</code> but with a different number of fractional bits.</p>\n<h5 id=\"panics-48\"><a class=\"doc-anchor\" href=\"#panics-48\">§</a>Panics</h5>\n<p>Panics if the result does not fit.</p>\n<h5 id=\"examples-133\"><a class=\"doc-anchor\" href=\"#examples-133\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(\n    Fix::from_num(<span class=\"number\">3</span>).unwrapped_add_prod(Fix::from_num(<span class=\"number\">4</span>), Fix::from_num(<span class=\"number\">0.5</span>)),\n    <span class=\"number\">5\n</span>);</code></pre></div>\n<p>The following panics because of overflow.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>_overflow = Fix::DELTA.unwrapped_add_prod(Fix::MAX, Fix::ONE);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_mul_acc\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_mul_acc\" class=\"fn\">unwrapped_mul_acc</a>&lt;AFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, BFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt;(\n    &amp;mut self,\n    a: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;AFrac&gt;,\n    b: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;BFrac&gt;,\n)</h4></section></summary><div class=\"docblock\"><p>Unwrapped multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>,\npanicking on overflow.</p>\n<p>The <code>a</code> and <code>b</code> parameters can have a fixed-point type like\n<code>self</code> but with a different number of fractional bits.</p>\n<h5 id=\"panics-49\"><a class=\"doc-anchor\" href=\"#panics-49\">§</a>Panics</h5>\n<p>Panics if the result does not fit.</p>\n<h5 id=\"examples-134\"><a class=\"doc-anchor\" href=\"#examples-134\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>acc = Fix::from_num(<span class=\"number\">3</span>);\nacc.unwrapped_mul_acc(Fix::from_num(<span class=\"number\">4</span>), Fix::from_num(<span class=\"number\">0.5</span>));\n<span class=\"macro\">assert_eq!</span>(acc, <span class=\"number\">5</span>);</code></pre></div>\n<p>The following panics because of overflow.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>acc = Fix::DELTA;\nacc.unwrapped_mul_acc(Fix::MAX, Fix::ONE);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_rem_int\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_rem_int\" class=\"fn\">unwrapped_rem_int</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Unwrapped fixed-point remainder for division by an integer.\nReturns the remainder, panicking if the divisor is zero.</p>\n<h5 id=\"panics-50\"><a class=\"doc-anchor\" href=\"#panics-50\">§</a>Panics</h5>\n<p>Panics if the divisor is zero.</p>\n<h5 id=\"examples-135\"><a class=\"doc-anchor\" href=\"#examples-135\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3.75</span>).unwrapped_rem_int(<span class=\"number\">2</span>), Fix::from_num(<span class=\"number\">1.75</span>));</code></pre></div>\n<p>The following panics because the divisor is zero.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>_divisor_is_zero = Fix::from_num(<span class=\"number\">3.75</span>).unwrapped_rem_int(<span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_div_euclid_int\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_div_euclid_int\" class=\"fn\">unwrapped_div_euclid_int</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Unwrapped Euclidean division by an integer. Returns the quotient.</p>\n<p>Can never overflow for unsigned values.</p>\n<h5 id=\"panics-51\"><a class=\"doc-anchor\" href=\"#panics-51\">§</a>Panics</h5>\n<p>Panics if the divisor is zero.</p>\n<h5 id=\"examples-136\"><a class=\"doc-anchor\" href=\"#examples-136\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">7.5</span>).unwrapped_div_euclid_int(<span class=\"number\">2</span>), Fix::from_num(<span class=\"number\">3</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_rem_euclid_int\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_rem_euclid_int\" class=\"fn\">unwrapped_rem_euclid_int</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>Unwrapped remainder for Euclidean division by an integer. Returns the remainder.</p>\n<p>Can never overflow for unsigned values.</p>\n<h5 id=\"panics-52\"><a class=\"doc-anchor\" href=\"#panics-52\">§</a>Panics</h5>\n<p>Panics if the divisor is zero.</p>\n<h5 id=\"examples-137\"><a class=\"doc-anchor\" href=\"#examples-137\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">7.5</span>).unwrapped_rem_euclid_int(<span class=\"number\">2</span>), Fix::from_num(<span class=\"number\">1.5</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_sqrt\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_sqrt\" class=\"fn\">unwrapped_sqrt</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns the square root. Can never overflow for unsigned numbers.</p>\n<p>This method uses an iterative method, with up to 8 iterations for\n<a href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\"><code>FixedU8</code></a>. The result is rounded down, and the error is\n&lt; <a href=\"fixed/struct.FixedU8.html#associatedconstant.DELTA\" title=\"associated constant fixed::FixedU8::DELTA\"><code>DELTA</code></a>. That is,\nresult ≤ √<code>self</code> &lt; result + <code>DELTA</code>.</p>\n<h5 id=\"examples-138\"><a class=\"doc-anchor\" href=\"#examples-138\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">2</span>).unwrapped_sqrt(), Fix::SQRT_2);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_lerp\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.unwrapped_lerp\" class=\"fn\">unwrapped_lerp</a>&lt;RangeFrac&gt;(\n    self,\n    start: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;RangeFrac&gt;,\n    end: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;RangeFrac&gt;,\n) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;RangeFrac&gt;</h4></section></summary><div class=\"docblock\"><p>Linear interpolation between <code>start</code> and <code>end</code>, panicking on\noverflow.</p>\n<p>The interpolated value is\n<code>start</code> + <code>self</code> × (<code>end</code> − <code>start</code>). This\nis <code>start</code> when <code>self</code> = 0, <code>end</code> when <code>self</code> = 1, and\nlinear interpolation for all other values of <code>self</code>. Linear extrapolation is\nperformed if <code>self</code> is not in the range 0 ≤ <i>x</i> ≤ 1.</p>\n<h5 id=\"panics-53\"><a class=\"doc-anchor\" href=\"#panics-53\">§</a>Panics</h5>\n<p>Panics if the result overflows.</p>\n<h5 id=\"examples-139\"><a class=\"doc-anchor\" href=\"#examples-139\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">0.5</span>).unwrapped_lerp(Fix::ZERO, Fix::MAX), Fix::MAX / <span class=\"number\">2</span>);</code></pre></div>\n<p>The following panics because of overflow.</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>_overflow = Fix::from_num(<span class=\"number\">1.5</span>).unwrapped_lerp(Fix::ZERO, Fix::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_mul\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_mul\" class=\"fn\">overflowing_mul</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Overflowing multiplication.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the product and a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> indicating whether an\noverflow has occurred. On overflow, the wrapped value is returned.</p>\n<h5 id=\"examples-140\"><a class=\"doc-anchor\" href=\"#examples-140\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3</span>).overflowing_mul(Fix::from_num(<span class=\"number\">2</span>)), (Fix::from_num(<span class=\"number\">6</span>), <span class=\"bool-val\">false</span>));\n<span class=\"kw\">let </span>wrapped = Fix::from_bits(!<span class=\"number\">0 </span>&lt;&lt; <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.overflowing_mul(Fix::from_num(<span class=\"number\">4</span>)), (wrapped, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_div\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_div\" class=\"fn\">overflowing_div</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Overflowing division.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the quotient and a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> indicating whether an\noverflow has occurred. On overflow, the wrapped value is returned.</p>\n<h5 id=\"panics-54\"><a class=\"doc-anchor\" href=\"#panics-54\">§</a>Panics</h5>\n<p>Panics if the divisor is zero.</p>\n<h5 id=\"examples-141\"><a class=\"doc-anchor\" href=\"#examples-141\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>one_point_5 = Fix::from_bits(<span class=\"number\">0b11 </span>&lt;&lt; (<span class=\"number\">4 </span>- <span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">3</span>).overflowing_div(Fix::from_num(<span class=\"number\">2</span>)), (one_point_5, <span class=\"bool-val\">false</span>));\n<span class=\"kw\">let </span>quarter = Fix::ONE / <span class=\"number\">4</span>;\n<span class=\"kw\">let </span>wrapped = Fix::from_bits(!<span class=\"number\">0 </span>&lt;&lt; <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.overflowing_div(quarter), (wrapped, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_recip\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_recip\" class=\"fn\">overflowing_recip</a>(self) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Overflowing reciprocal.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the reciprocal and a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> indicating whether\nan overflow has occurred. On overflow, the wrapped value is returned.</p>\n<h5 id=\"panics-55\"><a class=\"doc-anchor\" href=\"#panics-55\">§</a>Panics</h5>\n<p>Panics if the fixed-point number is zero.</p>\n<h5 id=\"examples-142\"><a class=\"doc-anchor\" href=\"#examples-142\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::{U4, U7};\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"comment\">// only one integer bit\n</span><span class=\"kw\">type </span>Small = FixedU8&lt;U7&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">0.25</span>).overflowing_recip(), (Fix::from_num(<span class=\"number\">4</span>), <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(Small::from_num(<span class=\"number\">0.25</span>).overflowing_recip(), (Small::ZERO, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_div_euclid\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_div_euclid\" class=\"fn\">overflowing_div_euclid</a>(\n    self,\n    rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;,\n) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Overflowing Euclidean division.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the quotient and a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> indicating whether an\noverflow has occurred. On overflow, the wrapped value is returned.</p>\n<h5 id=\"panics-56\"><a class=\"doc-anchor\" href=\"#panics-56\">§</a>Panics</h5>\n<p>Panics if the divisor is zero.</p>\n<h5 id=\"examples-143\"><a class=\"doc-anchor\" href=\"#examples-143\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span>check = Fix::from_num(<span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">7.5</span>).overflowing_div_euclid(Fix::from_num(<span class=\"number\">2</span>)), (check, <span class=\"bool-val\">false</span>));\n<span class=\"kw\">let </span>wrapped = Fix::MAX.wrapping_mul_int(<span class=\"number\">4</span>).round_to_zero();\n<span class=\"macro\">assert_eq!</span>(Fix::MAX.overflowing_div_euclid(Fix::from_num(<span class=\"number\">0.25</span>)), (wrapped, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_div_euclid_int\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_div_euclid_int\" class=\"fn\">overflowing_div_euclid_int</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Overflowing Euclidean division by an integer.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the quotient and <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>false</code></a>, as the division can never overflow for unsigned values.</p>\n<h5 id=\"panics-57\"><a class=\"doc-anchor\" href=\"#panics-57\">§</a>Panics</h5>\n<p>Panics if the divisor is zero.</p>\n<h5 id=\"examples-144\"><a class=\"doc-anchor\" href=\"#examples-144\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">7.5</span>).overflowing_div_euclid_int(<span class=\"number\">2</span>), (Fix::from_num(<span class=\"number\">3</span>), <span class=\"bool-val\">false</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_add_prod\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_add_prod\" class=\"fn\">overflowing_add_prod</a>&lt;AFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, BFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt;(\n    self,\n    a: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;AFrac&gt;,\n    b: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;BFrac&gt;,\n) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Adds <code>self</code> to the product <code>a</code> × <code>b</code>.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the result and a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> indicating whether an overflow\nhas occurred. On overflow, the wrapped value is returned.</p>\n<p>The <code>a</code> and <code>b</code> parameters can have a fixed-point type like\n<code>self</code> but with a different number of fractional bits.</p>\n<h5 id=\"examples-145\"><a class=\"doc-anchor\" href=\"#examples-145\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(\n    Fix::from_num(<span class=\"number\">3</span>).overflowing_add_prod(Fix::from_num(<span class=\"number\">4</span>), Fix::from_num(<span class=\"number\">0.5</span>)),\n    (Fix::from_num(<span class=\"number\">5</span>), <span class=\"bool-val\">false</span>)\n);\n<span class=\"macro\">assert_eq!</span>(\n    Fix::MAX.overflowing_add_prod(Fix::MAX, Fix::from_num(<span class=\"number\">3</span>)),\n    (Fix::MAX.wrapping_mul_int(<span class=\"number\">4</span>), <span class=\"bool-val\">true</span>)\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_mul_acc\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_mul_acc\" class=\"fn\">overflowing_mul_acc</a>&lt;AFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, BFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt;(\n    &amp;mut self,\n    a: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;AFrac&gt;,\n    b: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;BFrac&gt;,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Overflowing multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>,\nwrapping and returning <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>true</code></a> if overflow occurs.</p>\n<p>The <code>a</code> and <code>b</code> parameters can have a fixed-point type like\n<code>self</code> but with a different number of fractional bits.</p>\n<h5 id=\"examples-146\"><a class=\"doc-anchor\" href=\"#examples-146\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>acc = Fix::from_num(<span class=\"number\">3</span>);\n<span class=\"macro\">assert!</span>(!acc.overflowing_mul_acc(Fix::from_num(<span class=\"number\">4</span>), Fix::from_num(<span class=\"number\">0.5</span>)));\n<span class=\"macro\">assert_eq!</span>(acc, <span class=\"number\">5</span>);\n\nacc = Fix::MAX;\n<span class=\"macro\">assert!</span>(acc.overflowing_mul_acc(Fix::MAX, Fix::from_num(<span class=\"number\">3</span>)));\n<span class=\"macro\">assert_eq!</span>(acc, Fix::MAX.wrapping_mul_int(<span class=\"number\">4</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_rem_euclid_int\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_rem_euclid_int\" class=\"fn\">overflowing_rem_euclid_int</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Remainder for Euclidean division by an integer.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the remainder and <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>false</code></a>, as this can never overflow for unsigned values.</p>\n<h5 id=\"panics-58\"><a class=\"doc-anchor\" href=\"#panics-58\">§</a>Panics</h5>\n<p>Panics if the divisor is zero.</p>\n<h5 id=\"examples-147\"><a class=\"doc-anchor\" href=\"#examples-147\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::from_num(<span class=\"number\">7.5</span>).overflowing_rem_euclid_int(<span class=\"number\">2</span>), (Fix::from_num(<span class=\"number\">1.5</span>), <span class=\"bool-val\">false</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_sqrt\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_sqrt\" class=\"fn\">overflowing_sqrt</a>(self) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Returns the square root.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the result and <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>false</code></a>, since this can never overflow for unsigned numbers.</p>\n<p>This method uses an iterative method, with up to 8 iterations for\n<a href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\"><code>FixedU8</code></a>. The result is rounded down, and the error is\n&lt; <a href=\"fixed/struct.FixedU8.html#associatedconstant.DELTA\" title=\"associated constant fixed::FixedU8::DELTA\"><code>DELTA</code></a>. That is,\nresult ≤ √<code>self</code> &lt; result + <code>DELTA</code>.</p>\n<h5 id=\"examples-148\"><a class=\"doc-anchor\" href=\"#examples-148\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(\n    Fix::from_num(<span class=\"number\">2</span>).overflowing_sqrt(),\n    (Fix::SQRT_2, <span class=\"bool-val\">false</span>)\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_lerp\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fixed/struct.FixedU8.html#tymethod.overflowing_lerp\" class=\"fn\">overflowing_lerp</a>&lt;RangeFrac&gt;(\n    self,\n    start: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;RangeFrac&gt;,\n    end: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;RangeFrac&gt;,\n) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;RangeFrac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Overflowing linear interpolation between <code>start</code> and <code>end</code>.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the result and a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> indicationg whether an overflow\nhas occurred. On overflow, the wrapped value is returned.</p>\n<p>The interpolated value is\n<code>start</code> + <code>self</code> × (<code>end</code> − <code>start</code>). This\nis <code>start</code> when <code>self</code> = 0, <code>end</code> when <code>self</code> = 1, and\nlinear interpolation for all other values of <code>self</code>. Linear extrapolation is\nperformed if <code>self</code> is not in the range 0 ≤ <i>x</i> ≤ 1.</p>\n<h5 id=\"examples-149\"><a class=\"doc-anchor\" href=\"#examples-149\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::types::extra::U4;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U4&gt;;\n<span class=\"macro\">assert_eq!</span>(\n    Fix::from_num(<span class=\"number\">0.5</span>).overflowing_lerp(Fix::ZERO, Fix::MAX),\n    (Fix::MAX / <span class=\"number\">2</span>, <span class=\"bool-val\">false</span>)\n);\n<span class=\"macro\">assert_eq!</span>(\n    Fix::from_num(<span class=\"number\">1.5</span>).overflowing_lerp(Fix::ZERO, Fix::MAX),\n    (Fix::MAX.wrapping_add(Fix::MAX / <span class=\"number\">2</span>), <span class=\"bool-val\">true</span>)\n);</code></pre></div>\n</div></details></div></details>",0,"fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><a href=\"#impl-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3><div class=\"docblock\"><p>This block contains constants in the range 0 &lt; <i>x</i> &lt; 0.5.</p>\n</div></section></summary><div class=\"docblock\"><h4 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h4>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed::consts;\n<span class=\"kw\">use </span>fixed::types::extra::U8;\n<span class=\"kw\">use </span>fixed::FixedU8;\n<span class=\"kw\">type </span>Fix = FixedU8&lt;U8&gt;;\n<span class=\"macro\">assert_eq!</span>(Fix::LOG10_2, Fix::from_num(consts::LOG10_2));</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.FRAC_1_TAU\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.FRAC_1_TAU\" class=\"constant\">FRAC_1_TAU</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>1/τ = 0.159154…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.FRAC_2_TAU\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.FRAC_2_TAU\" class=\"constant\">FRAC_2_TAU</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>2/τ = 0.318309…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.FRAC_PI_8\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.FRAC_PI_8\" class=\"constant\">FRAC_PI_8</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>π/8 = 0.392699…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.FRAC_1_PI\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.FRAC_1_PI\" class=\"constant\">FRAC_1_PI</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>1/π = 0.318309…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.FRAC_1_SQRT_2PI\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.FRAC_1_SQRT_2PI\" class=\"constant\">FRAC_1_SQRT_2PI</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>1/√2π = 0.398942…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.LOG10_2\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.LOG10_2\" class=\"constant\">LOG10_2</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>log<sub>10</sub> 2 = 0.301029…</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.LOG10_E\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><h4 class=\"code-header\">pub const <a href=\"fixed/struct.FixedU8.html#associatedconstant.LOG10_E\" class=\"constant\">LOG10_E</a>: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class=\"docblock\"><p>log<sub>10</sub> e = 0.434294…</p>\n</div></details></div></details>",0,"fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FixedUnsigned-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#impl-FixedUnsigned-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.FixedUnsigned.html\" title=\"trait fixed::traits::FixedUnsigned\">FixedUnsigned</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.significant_bits\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.significant_bits\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.significant_bits\" class=\"fn\">significant_bits</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of bits required to represent the value. <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.significant_bits\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_power_of_two\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.is_power_of_two\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.is_power_of_two\" class=\"fn\">is_power_of_two</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>true</code></a> if the fixed-point number is\n2<sup><i>k</i></sup> for some integer <i>k</i>. <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.is_power_of_two\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.highest_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.highest_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.highest_one\" class=\"fn\">highest_one</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Returns the highest one in the binary representation, or zero\nif <code>self</code> is zero. <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.highest_one\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_power_of_two\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.next_power_of_two\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.next_power_of_two\" class=\"fn\">next_power_of_two</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Returns the smallest power of two that is ≥ <code>self</code>. <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.next_power_of_two\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_signed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.add_signed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.add_signed\" class=\"fn\">add_signed</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Signed\" title=\"type fixed::traits::Fixed::Signed\">Signed</a>) -&gt; Self</h4></section></summary><div class='docblock'>Addition with an signed fixed-point number. <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.add_signed\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_signed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.sub_signed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.sub_signed\" class=\"fn\">sub_signed</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Signed\" title=\"type fixed::traits::Fixed::Signed\">Signed</a>) -&gt; Self</h4></section></summary><div class='docblock'>Subtraction with an signed fixed-point number. <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.sub_signed\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_next_power_of_two\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_next_power_of_two\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.checked_next_power_of_two\" class=\"fn\">checked_next_power_of_two</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Returns the smallest power of two that is ≥ <code>self</code>, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the\nnext power of two is too large to represent. <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.checked_next_power_of_two\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add_signed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_add_signed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.checked_add_signed\" class=\"fn\">checked_add_signed</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Signed\" title=\"type fixed::traits::Fixed::Signed\">Signed</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Checked addition with an signed fixed-point number. Returns the sum,\nor <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow. <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.checked_add_signed\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub_signed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_sub_signed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.checked_sub_signed\" class=\"fn\">checked_sub_signed</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Signed\" title=\"type fixed::traits::Fixed::Signed\">Signed</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Checked subtraction with an signed fixed-point number. Returns the\ndifference, or <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow. <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.checked_sub_signed\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add_signed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_add_signed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.saturating_add_signed\" class=\"fn\">saturating_add_signed</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Signed\" title=\"type fixed::traits::Fixed::Signed\">Signed</a>) -&gt; Self</h4></section></summary><div class='docblock'>Saturating addition with an signed fixed-point number. Returns the\nsum, saturating on overflow. <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.saturating_add_signed\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub_signed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_sub_signed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.saturating_sub_signed\" class=\"fn\">saturating_sub_signed</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Signed\" title=\"type fixed::traits::Fixed::Signed\">Signed</a>) -&gt; Self</h4></section></summary><div class='docblock'>Saturating subtraction with an signed fixed-point number. Returns the\ndifference, saturating on overflow. <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.saturating_sub_signed\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_next_power_of_two\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_next_power_of_two\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.wrapping_next_power_of_two\" class=\"fn\">wrapping_next_power_of_two</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Returns the smallest power of two that is ≥ <code>self</code>, wrapping\nto 0 if the next power of two is too large to represent. <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.wrapping_next_power_of_two\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_add_signed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_add_signed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.wrapping_add_signed\" class=\"fn\">wrapping_add_signed</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Signed\" title=\"type fixed::traits::Fixed::Signed\">Signed</a>) -&gt; Self</h4></section></summary><div class='docblock'>Wrapping addition with an signed fixed-point number. Returns the sum,\nwrapping on overflow. <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.wrapping_add_signed\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_sub_signed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_sub_signed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.wrapping_sub_signed\" class=\"fn\">wrapping_sub_signed</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Signed\" title=\"type fixed::traits::Fixed::Signed\">Signed</a>) -&gt; Self</h4></section></summary><div class='docblock'>Wrapping subtraction with an signed fixed-point number. Returns the\ndifference, wrapping on overflow. <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.wrapping_sub_signed\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_next_power_of_two\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_next_power_of_two\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.unwrapped_next_power_of_two\" class=\"fn\">unwrapped_next_power_of_two</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Returns the smallest power of two that is ≥ <code>self</code>, panicking\nif the next power of two is too large to represent. <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.unwrapped_next_power_of_two\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_add_signed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_add_signed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.unwrapped_add_signed\" class=\"fn\">unwrapped_add_signed</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Signed\" title=\"type fixed::traits::Fixed::Signed\">Signed</a>) -&gt; Self</h4></section></summary><div class='docblock'>Unwrapped addition with an signed fixed-point number. Returns the sum,\npanicking on overflow. <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.unwrapped_add_signed\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_sub_signed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_sub_signed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.unwrapped_sub_signed\" class=\"fn\">unwrapped_sub_signed</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Signed\" title=\"type fixed::traits::Fixed::Signed\">Signed</a>) -&gt; Self</h4></section></summary><div class='docblock'>Unwrapped subtraction with an signed fixed-point number. Returns the\ndifference, panicking on overflow. <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.unwrapped_sub_signed\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_add_signed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_add_signed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.overflowing_add_signed\" class=\"fn\">overflowing_add_signed</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Signed\" title=\"type fixed::traits::Fixed::Signed\">Signed</a>) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Overflowing addition with an signed fixed-point number. <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.overflowing_add_signed\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_sub_signed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_sub_signed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.overflowing_sub_signed\" class=\"fn\">overflowing_sub_signed</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"fixed/traits/trait.Fixed.html#associatedtype.Signed\" title=\"type fixed::traits::Fixed::Signed\">Signed</a>) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Overflowing subtraction with an signed fixed-point number. <a href=\"fixed/traits/trait.FixedUnsigned.html#tymethod.overflowing_sub_signed\">Read more</a></div></details></div></details>","FixedUnsigned","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cbool%3E-for-FixedU8%3CFracDst%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#488\">Source</a><a href=\"#impl-From%3Cbool%3E-for-FixedU8%3CFracDst%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracDst&gt;<div class=\"where\">where\n    <a class=\"type\" href=\"fixed/types/extra/type.U8.html\" title=\"type fixed::types::extra::U8\">U8</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracDst&gt;,\n    <a class=\"type\" href=\"fixed/types/extra/type.U1.html\" title=\"type fixed::types::extra::U1\">U1</a>: <a class=\"trait\" href=\"fixed/types/extra/trait.IsLessOrEqual.html\" title=\"trait fixed::types::extra::IsLessOrEqual\">IsLessOrEqual</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.Diff.html\" title=\"type fixed::types::extra::Diff\">Diff</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.U8.html\" title=\"type fixed::types::extra::U8\">U8</a>, FracDst&gt;, Output = <a class=\"type\" href=\"fixed/types/extra/type.True.html\" title=\"type fixed::types::extra::True\">True</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#488\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Converts a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> to a fixed-point number.</p>\n<p>This conversion never fails (infallible) and cannot\nlose any fractional bits (lossless).</p>\n</div></details></div></details>","From<bool>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu8%3E-for-FixedU8%3CUTerm%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#299\">Source</a><a href=\"#impl-From%3Cu8%3E-for-FixedU8%3CUTerm%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.U0.html\" title=\"type fixed::types::extra::U0\">U0</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#299\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number.</p>\n<p>This conversion never fails (infallible) and cannot\nlose any fractional bits (lossless).</p>\n</div></details></div></details>","From<u8>","fixed::types::U8F0"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromFixed-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#impl-FromFixed-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.FromFixed.html\" title=\"trait fixed::traits::FromFixed\">FromFixed</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.from_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.FromFixed.html#tymethod.from_fixed\" class=\"fn\">from_fixed</a>&lt;F: <a class=\"trait\" href=\"fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>&gt;(src: F) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number.</p>\n<p>Any extra fractional bits are discarded, which rounds towards −∞.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>When debug assertions are enabled, panics if the value\ndoes not fit. When debug assertions are not enabled,\nthe wrapped value can be returned, but it is not\nconsidered a breaking change if in the future it\npanics; if wrapping is required use\n<a href=\"fixed/traits/trait.FromFixed.html#tymethod.wrapping_from_fixed\" title=\"associated function fixed::traits::FromFixed::wrapping_from_fixed\"><code>wrapping_from_fixed</code></a> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_from_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_from_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.FromFixed.html#tymethod.checked_from_fixed\" class=\"fn\">checked_from_fixed</a>&lt;F: <a class=\"trait\" href=\"fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>&gt;(src: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number if it fits, otherwise returns <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>.</p>\n<p>Any extra fractional bits are discarded, which rounds towards −∞.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_from_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_from_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.FromFixed.html#tymethod.saturating_from_fixed\" class=\"fn\">saturating_from_fixed</a>&lt;F: <a class=\"trait\" href=\"fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>&gt;(src: F) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number, saturating if it does not fit.</p>\n<p>Any extra fractional bits are discarded, which rounds towards −∞.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_from_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_from_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.FromFixed.html#tymethod.wrapping_from_fixed\" class=\"fn\">wrapping_from_fixed</a>&lt;F: <a class=\"trait\" href=\"fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>&gt;(src: F) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number, wrapping if it does not fit.</p>\n<p>Any extra fractional bits are discarded, which rounds towards −∞.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_from_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_from_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.FromFixed.html#tymethod.overflowing_from_fixed\" class=\"fn\">overflowing_from_fixed</a>&lt;F: <a class=\"trait\" href=\"fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>&gt;(src: F) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the value and a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a>\nindicating whether an overflow has occurred. On\noverflow, the wrapped value is returned.</p>\n<p>Any extra fractional bits are discarded, which rounds towards −∞.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_from_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_from_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.FromFixed.html#method.unwrapped_from_fixed\" class=\"fn\">unwrapped_from_fixed</a>&lt;F: <a class=\"trait\" href=\"fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>&gt;(src: F) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number, panicking if it does not fit.</p>\n<p>Any extra fractional bits are discarded, which rounds towards −∞.</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>Panics if the value does not fit, even when debug\nassertions are not enabled.</p>\n</div></details></div></details>","FromFixed","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/from_str.rs.html#1301\">Source</a><a href=\"#impl-FromStr-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/from_str.rs.html#1301\">Source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.1/core/str/traits/trait.FromStr.html#associatedtype.Err\" title=\"type core::str::traits::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses a string slice to return a fixed-point number.</p>\n<p>Rounding is to the nearest, with ties rounded to even.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/from_str.rs.html#1301\">Source</a><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><a href=\"#impl-Hash-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;mut H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.85.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.85.1/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.85.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.85.1/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedI128%3CFracSrc%3E%3E-for-FixedU8%3CFracDst%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#229\">Source</a><a href=\"#impl-LosslessTryFrom%3CFixedI128%3CFracSrc%3E%3E-for-FixedU8%3CFracDst%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;FracSrc&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracDst&gt;<div class=\"where\">where\n    FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.IsLessOrEqual.html\" title=\"trait fixed::types::extra::IsLessOrEqual\">IsLessOrEqual</a>&lt;FracDst, Output = <a class=\"type\" href=\"fixed/types/extra/type.True.html\" title=\"type fixed::types::extra::True\">True</a>&gt; + <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#229\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;FracSrc&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-pint number.</p>\n<p>This conversion may fail (fallible) but does not lose\nprecision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedI128<FracSrc>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedI16%3CFracSrc%3E%3E-for-FixedU8%3CFracDst%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#226\">Source</a><a href=\"#impl-LosslessTryFrom%3CFixedI16%3CFracSrc%3E%3E-for-FixedU8%3CFracDst%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;FracSrc&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracDst&gt;<div class=\"where\">where\n    FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.IsLessOrEqual.html\" title=\"trait fixed::types::extra::IsLessOrEqual\">IsLessOrEqual</a>&lt;FracDst, Output = <a class=\"type\" href=\"fixed/types/extra/type.True.html\" title=\"type fixed::types::extra::True\">True</a>&gt; + <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#226\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;FracSrc&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-pint number.</p>\n<p>This conversion may fail (fallible) but does not lose\nprecision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedI16<FracSrc>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedI32%3CFracSrc%3E%3E-for-FixedU8%3CFracDst%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#227\">Source</a><a href=\"#impl-LosslessTryFrom%3CFixedI32%3CFracSrc%3E%3E-for-FixedU8%3CFracDst%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;FracSrc&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracDst&gt;<div class=\"where\">where\n    FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.IsLessOrEqual.html\" title=\"trait fixed::types::extra::IsLessOrEqual\">IsLessOrEqual</a>&lt;FracDst, Output = <a class=\"type\" href=\"fixed/types/extra/type.True.html\" title=\"type fixed::types::extra::True\">True</a>&gt; + <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#227\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;FracSrc&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-pint number.</p>\n<p>This conversion may fail (fallible) but does not lose\nprecision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedI32<FracSrc>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedI64%3CFracSrc%3E%3E-for-FixedU8%3CFracDst%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#228\">Source</a><a href=\"#impl-LosslessTryFrom%3CFixedI64%3CFracSrc%3E%3E-for-FixedU8%3CFracDst%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;FracSrc&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracDst&gt;<div class=\"where\">where\n    FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.IsLessOrEqual.html\" title=\"trait fixed::types::extra::IsLessOrEqual\">IsLessOrEqual</a>&lt;FracDst, Output = <a class=\"type\" href=\"fixed/types/extra/type.True.html\" title=\"type fixed::types::extra::True\">True</a>&gt; + <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#228\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;FracSrc&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-pint number.</p>\n<p>This conversion may fail (fallible) but does not lose\nprecision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedI64<FracSrc>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedI8%3CFracSrc%3E%3E-for-FixedU8%3CFracDst%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#225\">Source</a><a href=\"#impl-LosslessTryFrom%3CFixedI8%3CFracSrc%3E%3E-for-FixedU8%3CFracDst%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;FracSrc&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracDst&gt;<div class=\"where\">where\n    FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.IsLessOrEqual.html\" title=\"trait fixed::types::extra::IsLessOrEqual\">IsLessOrEqual</a>&lt;FracDst, Output = <a class=\"type\" href=\"fixed/types/extra/type.True.html\" title=\"type fixed::types::extra::True\">True</a>&gt; + <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#225\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;FracSrc&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-pint number.</p>\n<p>This conversion may fail (fallible) but does not lose\nprecision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedI8<FracSrc>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedU128%3CFracSrc%3E%3E-for-FixedU8%3CFracDst%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#234\">Source</a><a href=\"#impl-LosslessTryFrom%3CFixedU128%3CFracSrc%3E%3E-for-FixedU8%3CFracDst%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;FracSrc&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracDst&gt;<div class=\"where\">where\n    FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.IsLessOrEqual.html\" title=\"trait fixed::types::extra::IsLessOrEqual\">IsLessOrEqual</a>&lt;FracDst, Output = <a class=\"type\" href=\"fixed/types/extra/type.True.html\" title=\"type fixed::types::extra::True\">True</a>&gt; + <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#234\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;FracSrc&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-pint number.</p>\n<p>This conversion may fail (fallible) but does not lose\nprecision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedU128<FracSrc>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedU16%3CFracSrc%3E%3E-for-FixedU8%3CFracDst%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#231\">Source</a><a href=\"#impl-LosslessTryFrom%3CFixedU16%3CFracSrc%3E%3E-for-FixedU8%3CFracDst%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;FracSrc&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracDst&gt;<div class=\"where\">where\n    FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.IsLessOrEqual.html\" title=\"trait fixed::types::extra::IsLessOrEqual\">IsLessOrEqual</a>&lt;FracDst, Output = <a class=\"type\" href=\"fixed/types/extra/type.True.html\" title=\"type fixed::types::extra::True\">True</a>&gt; + <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#231\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;FracSrc&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-pint number.</p>\n<p>This conversion may fail (fallible) but does not lose\nprecision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedU16<FracSrc>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedU32%3CFracSrc%3E%3E-for-FixedU8%3CFracDst%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#232\">Source</a><a href=\"#impl-LosslessTryFrom%3CFixedU32%3CFracSrc%3E%3E-for-FixedU8%3CFracDst%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;FracSrc&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracDst&gt;<div class=\"where\">where\n    FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.IsLessOrEqual.html\" title=\"trait fixed::types::extra::IsLessOrEqual\">IsLessOrEqual</a>&lt;FracDst, Output = <a class=\"type\" href=\"fixed/types/extra/type.True.html\" title=\"type fixed::types::extra::True\">True</a>&gt; + <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#232\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;FracSrc&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-pint number.</p>\n<p>This conversion may fail (fallible) but does not lose\nprecision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedU32<FracSrc>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedU64%3CFracSrc%3E%3E-for-FixedU8%3CFracDst%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#233\">Source</a><a href=\"#impl-LosslessTryFrom%3CFixedU64%3CFracSrc%3E%3E-for-FixedU8%3CFracDst%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;FracSrc&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracDst&gt;<div class=\"where\">where\n    FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.IsLessOrEqual.html\" title=\"trait fixed::types::extra::IsLessOrEqual\">IsLessOrEqual</a>&lt;FracDst, Output = <a class=\"type\" href=\"fixed/types/extra/type.True.html\" title=\"type fixed::types::extra::True\">True</a>&gt; + <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#233\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;FracSrc&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-pint number.</p>\n<p>This conversion may fail (fallible) but does not lose\nprecision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedU64<FracSrc>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedU8%3CFracSrc%3E%3E-for-FixedU8%3CFracDst%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#230\">Source</a><a href=\"#impl-LosslessTryFrom%3CFixedU8%3CFracSrc%3E%3E-for-FixedU8%3CFracDst%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracDst&gt;<div class=\"where\">where\n    FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.IsLessOrEqual.html\" title=\"trait fixed::types::extra::IsLessOrEqual\">IsLessOrEqual</a>&lt;FracDst, Output = <a class=\"type\" href=\"fixed/types/extra/type.True.html\" title=\"type fixed::types::extra::True\">True</a>&gt; + <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#230\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-pint number.</p>\n<p>This conversion may fail (fallible) but does not lose\nprecision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedU8<FracSrc>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cbool%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#292\">Source</a><a href=\"#impl-LosslessTryFrom%3Cbool%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#292\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<bool>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Ci128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#297\">Source</a><a href=\"#impl-LosslessTryFrom%3Ci128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#297\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<i128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Ci16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#294\">Source</a><a href=\"#impl-LosslessTryFrom%3Ci16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#294\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<i16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Ci32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#295\">Source</a><a href=\"#impl-LosslessTryFrom%3Ci32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#295\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<i32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Ci64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#296\">Source</a><a href=\"#impl-LosslessTryFrom%3Ci64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#296\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<i64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Ci8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#293\">Source</a><a href=\"#impl-LosslessTryFrom%3Ci8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#293\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<i8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cisize%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#298\">Source</a><a href=\"#impl-LosslessTryFrom%3Cisize%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#298\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<isize>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cu128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#303\">Source</a><a href=\"#impl-LosslessTryFrom%3Cu128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#303\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<u128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cu16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#300\">Source</a><a href=\"#impl-LosslessTryFrom%3Cu16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#300\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<u16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cu32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#301\">Source</a><a href=\"#impl-LosslessTryFrom%3Cu32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#301\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<u32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cu64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#302\">Source</a><a href=\"#impl-LosslessTryFrom%3Cu64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#302\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<u64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#299\">Source</a><a href=\"#impl-LosslessTryFrom%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#299\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<u8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cusize%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#304\">Source</a><a href=\"#impl-LosslessTryFrom%3Cusize%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#304\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<usize>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3CFixedU128%3CFracSrc%3E%3E-for-FixedU8%3CFracDst%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#240\">Source</a><a href=\"#impl-LossyFrom%3CFixedU128%3CFracSrc%3E%3E-for-FixedU8%3CFracDst%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;FracSrc&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracDst&gt;<div class=\"where\">where\n    <a class=\"type\" href=\"fixed/types/extra/type.U128.html\" title=\"type fixed::types::extra::U128\">U128</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;,\n    <a class=\"type\" href=\"fixed/types/extra/type.U8.html\" title=\"type fixed::types::extra::U8\">U8</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracDst&gt;,\n    <a class=\"type\" href=\"fixed/types/extra/type.Diff.html\" title=\"type fixed::types::extra::Diff\">Diff</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.U128.html\" title=\"type fixed::types::extra::U128\">U128</a>, FracSrc&gt;: <a class=\"trait\" href=\"fixed/types/extra/trait.IsLessOrEqual.html\" title=\"trait fixed::types::extra::IsLessOrEqual\">IsLessOrEqual</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.Diff.html\" title=\"type fixed::types::extra::Diff\">Diff</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.U8.html\" title=\"type fixed::types::extra::U8\">U8</a>, FracDst&gt;, Output = <a class=\"type\" href=\"fixed/types/extra/type.True.html\" title=\"type fixed::types::extra::True\">True</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#240\">Source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"struct\" href=\"fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;FracSrc&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-pint number.</p>\n<p>This conversion never fails (infallible) but may lose\nprecision (lossy). Any fractional bits in the source\nthat cannot be represented in the destination are\ndiscarded, which rounds towards −∞.</p>\n</div></details></div></details>","LossyFrom<FixedU128<FracSrc>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3CFixedU16%3CFracSrc%3E%3E-for-FixedU8%3CFracDst%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#237\">Source</a><a href=\"#impl-LossyFrom%3CFixedU16%3CFracSrc%3E%3E-for-FixedU8%3CFracDst%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;FracSrc&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracDst&gt;<div class=\"where\">where\n    <a class=\"type\" href=\"fixed/types/extra/type.U16.html\" title=\"type fixed::types::extra::U16\">U16</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;,\n    <a class=\"type\" href=\"fixed/types/extra/type.U8.html\" title=\"type fixed::types::extra::U8\">U8</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracDst&gt;,\n    <a class=\"type\" href=\"fixed/types/extra/type.Diff.html\" title=\"type fixed::types::extra::Diff\">Diff</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.U16.html\" title=\"type fixed::types::extra::U16\">U16</a>, FracSrc&gt;: <a class=\"trait\" href=\"fixed/types/extra/trait.IsLessOrEqual.html\" title=\"trait fixed::types::extra::IsLessOrEqual\">IsLessOrEqual</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.Diff.html\" title=\"type fixed::types::extra::Diff\">Diff</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.U8.html\" title=\"type fixed::types::extra::U8\">U8</a>, FracDst&gt;, Output = <a class=\"type\" href=\"fixed/types/extra/type.True.html\" title=\"type fixed::types::extra::True\">True</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#237\">Source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"struct\" href=\"fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;FracSrc&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-pint number.</p>\n<p>This conversion never fails (infallible) but may lose\nprecision (lossy). Any fractional bits in the source\nthat cannot be represented in the destination are\ndiscarded, which rounds towards −∞.</p>\n</div></details></div></details>","LossyFrom<FixedU16<FracSrc>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3CFixedU32%3CFracSrc%3E%3E-for-FixedU8%3CFracDst%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#238\">Source</a><a href=\"#impl-LossyFrom%3CFixedU32%3CFracSrc%3E%3E-for-FixedU8%3CFracDst%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;FracSrc&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracDst&gt;<div class=\"where\">where\n    <a class=\"type\" href=\"fixed/types/extra/type.U32.html\" title=\"type fixed::types::extra::U32\">U32</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;,\n    <a class=\"type\" href=\"fixed/types/extra/type.U8.html\" title=\"type fixed::types::extra::U8\">U8</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracDst&gt;,\n    <a class=\"type\" href=\"fixed/types/extra/type.Diff.html\" title=\"type fixed::types::extra::Diff\">Diff</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.U32.html\" title=\"type fixed::types::extra::U32\">U32</a>, FracSrc&gt;: <a class=\"trait\" href=\"fixed/types/extra/trait.IsLessOrEqual.html\" title=\"trait fixed::types::extra::IsLessOrEqual\">IsLessOrEqual</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.Diff.html\" title=\"type fixed::types::extra::Diff\">Diff</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.U8.html\" title=\"type fixed::types::extra::U8\">U8</a>, FracDst&gt;, Output = <a class=\"type\" href=\"fixed/types/extra/type.True.html\" title=\"type fixed::types::extra::True\">True</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#238\">Source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"struct\" href=\"fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;FracSrc&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-pint number.</p>\n<p>This conversion never fails (infallible) but may lose\nprecision (lossy). Any fractional bits in the source\nthat cannot be represented in the destination are\ndiscarded, which rounds towards −∞.</p>\n</div></details></div></details>","LossyFrom<FixedU32<FracSrc>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3CFixedU64%3CFracSrc%3E%3E-for-FixedU8%3CFracDst%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#239\">Source</a><a href=\"#impl-LossyFrom%3CFixedU64%3CFracSrc%3E%3E-for-FixedU8%3CFracDst%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;FracSrc&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracDst&gt;<div class=\"where\">where\n    <a class=\"type\" href=\"fixed/types/extra/type.U64.html\" title=\"type fixed::types::extra::U64\">U64</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;,\n    <a class=\"type\" href=\"fixed/types/extra/type.U8.html\" title=\"type fixed::types::extra::U8\">U8</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracDst&gt;,\n    <a class=\"type\" href=\"fixed/types/extra/type.Diff.html\" title=\"type fixed::types::extra::Diff\">Diff</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.U64.html\" title=\"type fixed::types::extra::U64\">U64</a>, FracSrc&gt;: <a class=\"trait\" href=\"fixed/types/extra/trait.IsLessOrEqual.html\" title=\"trait fixed::types::extra::IsLessOrEqual\">IsLessOrEqual</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.Diff.html\" title=\"type fixed::types::extra::Diff\">Diff</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.U8.html\" title=\"type fixed::types::extra::U8\">U8</a>, FracDst&gt;, Output = <a class=\"type\" href=\"fixed/types/extra/type.True.html\" title=\"type fixed::types::extra::True\">True</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#239\">Source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"struct\" href=\"fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;FracSrc&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-pint number.</p>\n<p>This conversion never fails (infallible) but may lose\nprecision (lossy). Any fractional bits in the source\nthat cannot be represented in the destination are\ndiscarded, which rounds towards −∞.</p>\n</div></details></div></details>","LossyFrom<FixedU64<FracSrc>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3CFixedU8%3CFracSrc%3E%3E-for-FixedU8%3CFracDst%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#236\">Source</a><a href=\"#impl-LossyFrom%3CFixedU8%3CFracSrc%3E%3E-for-FixedU8%3CFracDst%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracDst&gt;<div class=\"where\">where\n    <a class=\"type\" href=\"fixed/types/extra/type.U8.html\" title=\"type fixed::types::extra::U8\">U8</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;,\n    <a class=\"type\" href=\"fixed/types/extra/type.U8.html\" title=\"type fixed::types::extra::U8\">U8</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracDst&gt;,\n    <a class=\"type\" href=\"fixed/types/extra/type.Diff.html\" title=\"type fixed::types::extra::Diff\">Diff</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.U8.html\" title=\"type fixed::types::extra::U8\">U8</a>, FracSrc&gt;: <a class=\"trait\" href=\"fixed/types/extra/trait.IsLessOrEqual.html\" title=\"trait fixed::types::extra::IsLessOrEqual\">IsLessOrEqual</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.Diff.html\" title=\"type fixed::types::extra::Diff\">Diff</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.U8.html\" title=\"type fixed::types::extra::U8\">U8</a>, FracDst&gt;, Output = <a class=\"type\" href=\"fixed/types/extra/type.True.html\" title=\"type fixed::types::extra::True\">True</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#236\">Source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-pint number.</p>\n<p>This conversion never fails (infallible) but may lose\nprecision (lossy). Any fractional bits in the source\nthat cannot be represented in the destination are\ndiscarded, which rounds towards −∞.</p>\n</div></details></div></details>","LossyFrom<FixedU8<FracSrc>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3Cbool%3E-for-FixedU8%3CFracDst%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#488\">Source</a><a href=\"#impl-LossyFrom%3Cbool%3E-for-FixedU8%3CFracDst%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracDst&gt;<div class=\"where\">where\n    <a class=\"type\" href=\"fixed/types/extra/type.U8.html\" title=\"type fixed::types::extra::U8\">U8</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracDst&gt;,\n    <a class=\"type\" href=\"fixed/types/extra/type.U1.html\" title=\"type fixed::types::extra::U1\">U1</a>: <a class=\"trait\" href=\"fixed/types/extra/trait.IsLessOrEqual.html\" title=\"trait fixed::types::extra::IsLessOrEqual\">IsLessOrEqual</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.Diff.html\" title=\"type fixed::types::extra::Diff\">Diff</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.U8.html\" title=\"type fixed::types::extra::U8\">U8</a>, FracDst&gt;, Output = <a class=\"type\" href=\"fixed/types/extra/type.True.html\" title=\"type fixed::types::extra::True\">True</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#488\">Source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Converts a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> to a fixed-point number.</p>\n<p>This conversion never fails (infallible) and cannot\nlose any fractional bits, so it is actually lossless.</p>\n</div></details></div></details>","LossyFrom<bool>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3Cu8%3E-for-FixedU8%3CUTerm%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#299\">Source</a><a href=\"#impl-LossyFrom%3Cu8%3E-for-FixedU8%3CUTerm%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;<a class=\"type\" href=\"fixed/types/extra/type.U0.html\" title=\"type fixed::types::extra::U0\">U0</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/convert.rs.html#299\">Source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number.</p>\n<p>This conversion never fails (infallible) and actually\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LossyFrom<u8>","fixed::types::U8F0"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerExp-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/display.rs.html#777\">Source</a><a href=\"#impl-LowerExp-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/fmt/trait.LowerExp.html\" title=\"trait core::fmt::LowerExp\">LowerExp</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/display.rs.html#777\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/fmt/trait.LowerExp.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.85.1/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">FmtResult</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.85.1/core/fmt/trait.LowerExp.html#tymethod.fmt\">Read more</a></div></details></div></details>","LowerExp","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/display.rs.html#777\">Source</a><a href=\"#impl-LowerHex-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/display.rs.html#777\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.85.1/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">FmtResult</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.85.1/core/fmt/trait.LowerHex.html#tymethod.fmt\">Read more</a></div></details></div></details>","LowerHex","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26FixedU8%3CFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Mul%3C%26FixedU8%3CFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&FixedU8<Frac>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26u8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Mul%3C%26u8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&u8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Mul%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<u8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Mul-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3C%26FixedU8%3CRhsFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-MulAssign%3C%26FixedU8%3CRhsFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac, RhsFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;&amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;RhsFrac&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;RhsFrac&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<&FixedU8<RhsFrac>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3C%26u8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-MulAssign%3C%26u8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<&u8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CFixedU8%3CRhsFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-MulAssign%3CFixedU8%3CRhsFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac, RhsFrac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;RhsFrac&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;RhsFrac&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<FixedU8<RhsFrac>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-MulAssign%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<u8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Not-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Not-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\">Not</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Not.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>!</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.not\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Not.html#tymethod.not\" class=\"fn\">not</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the unary <code>!</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Not.html#tymethod.not\">Read more</a></div></details></div></details>","Not","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Octal-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/display.rs.html#777\">Source</a><a href=\"#impl-Octal-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/fmt/trait.Octal.html\" title=\"trait core::fmt::Octal\">Octal</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/display.rs.html#777\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/fmt/trait.Octal.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.85.1/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">FmtResult</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.85.1/core/fmt/trait.Octal.html#tymethod.fmt\">Read more</a></div></details></div></details>","Octal","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#483\">Source</a><a href=\"#impl-Ord-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#483\">Source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#980-982\">Source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#1001-1003\">Source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#1027-1029\">Source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CF128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3CF128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.F128.html\" title=\"struct fixed::F128\">F128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"fixed/struct.F128.html\" title=\"struct fixed::F128\">F128</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<F128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CF128Bits%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3CF128Bits%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.F128Bits.html\" title=\"struct fixed::F128Bits\">F128Bits</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"fixed/struct.F128Bits.html\" title=\"struct fixed::F128Bits\">F128Bits</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<F128Bits>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedI128%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3CFixedI128%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>&gt; <a class=\"trait\" href=\"az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;FracDst&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedI128<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedI16%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3CFixedI16%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>&gt; <a class=\"trait\" href=\"az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;FracDst&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedI16<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedI32%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3CFixedI32%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>&gt; <a class=\"trait\" href=\"az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;FracDst&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedI32<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedI64%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3CFixedI64%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>&gt; <a class=\"trait\" href=\"az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;FracDst&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedI64<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedI8%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3CFixedI8%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;FracDst&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedI8<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedU128%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3CFixedU128%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>&gt; <a class=\"trait\" href=\"az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;FracDst&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedU128<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedU16%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3CFixedU16%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>&gt; <a class=\"trait\" href=\"az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;FracDst&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedU16<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedU32%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3CFixedU32%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>&gt; <a class=\"trait\" href=\"az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;FracDst&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedU32<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedU64%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3CFixedU64%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>&gt; <a class=\"trait\" href=\"az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;FracDst&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedU64<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedU8%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3CFixedU8%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracDst&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedU8<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cbf16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3Cbf16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"half/bfloat/struct.bf16.html\" title=\"struct half::bfloat::bf16\">bf16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"half/bfloat/struct.bf16.html\" title=\"struct half::bfloat::bf16\">half_bf16</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<bf16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cf16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3Cf16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"half/binary16/struct.f16.html\" title=\"struct half::binary16::f16\">f16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"half/binary16/struct.f16.html\" title=\"struct half::binary16::f16\">half_f16</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<f16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cf32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3Cf32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f32.html\">f32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f32.html\">f32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<f32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cf64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3Cf64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f64.html\">f64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f64.html\">f64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<f64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Ci128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3Ci128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<i128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Ci16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3Ci16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<i16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Ci32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3Ci32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<i32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Ci64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3Ci64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<i64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Ci8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3Ci8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<i8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cisize%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3Cisize%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<isize>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cu128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3Cu128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<u128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cu16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3Cu16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<u16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cu32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3Cu32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<u32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cu64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3Cu64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<u64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<u8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cusize%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3Cusize%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<usize>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CF128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialEq%3CF128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"fixed/struct.F128.html\" title=\"struct fixed::F128\">F128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.F128.html\" title=\"struct fixed::F128\">F128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<F128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CF128Bits%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialEq%3CF128Bits%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"fixed/struct.F128Bits.html\" title=\"struct fixed::F128Bits\">F128Bits</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.F128Bits.html\" title=\"struct fixed::F128Bits\">F128Bits</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<F128Bits>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedI128%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#161\">Source</a><a href=\"#impl-PartialEq%3CFixedI128%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracLhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>, FracRhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;FracRhs&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracLhs&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#161\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedI128<FracRhs>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedI16%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#158\">Source</a><a href=\"#impl-PartialEq%3CFixedI16%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracLhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>, FracRhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;FracRhs&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracLhs&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#158\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedI16<FracRhs>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedI32%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#159\">Source</a><a href=\"#impl-PartialEq%3CFixedI32%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracLhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>, FracRhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;FracRhs&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracLhs&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#159\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedI32<FracRhs>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedI64%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#160\">Source</a><a href=\"#impl-PartialEq%3CFixedI64%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracLhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>, FracRhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;FracRhs&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracLhs&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#160\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedI64<FracRhs>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedI8%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#157\">Source</a><a href=\"#impl-PartialEq%3CFixedI8%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracLhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>, FracRhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;FracRhs&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracLhs&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#157\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedI8<FracRhs>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedU128%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#262\">Source</a><a href=\"#impl-PartialEq%3CFixedU128%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracLhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>, FracRhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;FracRhs&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracLhs&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#262\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedU128<FracRhs>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedU16%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#259\">Source</a><a href=\"#impl-PartialEq%3CFixedU16%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracLhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>, FracRhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;FracRhs&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracLhs&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#259\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedU16<FracRhs>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedU32%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#260\">Source</a><a href=\"#impl-PartialEq%3CFixedU32%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracLhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>, FracRhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;FracRhs&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracLhs&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#260\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedU32<FracRhs>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedU64%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#261\">Source</a><a href=\"#impl-PartialEq%3CFixedU64%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracLhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>, FracRhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;FracRhs&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracLhs&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#261\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedU64<FracRhs>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedU8%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#483\">Source</a><a href=\"#impl-PartialEq%3CFixedU8%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracLhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>, FracRhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracRhs&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracLhs&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#483\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedU8<FracRhs>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3Cbf16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialEq%3Cbf16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"half/bfloat/struct.bf16.html\" title=\"struct half::bfloat::bf16\">bf16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"half/bfloat/struct.bf16.html\" title=\"struct half::bfloat::bf16\">half_bf16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<bf16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3Cf16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialEq%3Cf16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"half/binary16/struct.f16.html\" title=\"struct half::binary16::f16\">f16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"half/binary16/struct.f16.html\" title=\"struct half::binary16::f16\">half_f16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<f16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3Cf32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialEq%3Cf32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f32.html\">f32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f32.html\">f32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<f32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3Cf64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialEq%3Cf64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f64.html\">f64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f64.html\">f64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<f64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3Ci128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialEq%3Ci128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<i128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3Ci16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialEq%3Ci16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<i16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3Ci32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialEq%3Ci32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<i32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3Ci64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialEq%3Ci64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<i64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3Ci8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialEq%3Ci8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<i8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3Cisize%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialEq%3Cisize%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<isize>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3Cu128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialEq%3Cu128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<u128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3Cu16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialEq%3Cu16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<u16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3Cu32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialEq%3Cu32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<u32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3Cu64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialEq%3Cu64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<u64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialEq%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<u8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3Cusize%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialEq%3Cusize%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<usize>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CF128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialOrd%3CF128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"fixed/struct.F128.html\" title=\"struct fixed::F128\">F128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.F128.html\" title=\"struct fixed::F128\">F128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#1335\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#1353\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#1371\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#1389\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<F128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CF128Bits%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialOrd%3CF128Bits%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"fixed/struct.F128Bits.html\" title=\"struct fixed::F128Bits\">F128Bits</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.F128Bits.html\" title=\"struct fixed::F128Bits\">F128Bits</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#1335\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#1353\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#1371\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#1389\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<F128Bits>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedI128%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#161\">Source</a><a href=\"#impl-PartialOrd%3CFixedI128%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracLhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>, FracRhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;FracRhs&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracLhs&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#161\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;FracRhs&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#161\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#161\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#161\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#161\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedI128<FracRhs>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedI16%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#158\">Source</a><a href=\"#impl-PartialOrd%3CFixedI16%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracLhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>, FracRhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;FracRhs&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracLhs&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#158\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;FracRhs&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#158\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#158\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#158\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#158\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedI16<FracRhs>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedI32%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#159\">Source</a><a href=\"#impl-PartialOrd%3CFixedI32%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracLhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>, FracRhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;FracRhs&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracLhs&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#159\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;FracRhs&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#159\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#159\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#159\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#159\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedI32<FracRhs>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedI64%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#160\">Source</a><a href=\"#impl-PartialOrd%3CFixedI64%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracLhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>, FracRhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;FracRhs&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracLhs&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#160\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;FracRhs&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#160\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#160\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#160\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#160\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedI64<FracRhs>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedI8%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#157\">Source</a><a href=\"#impl-PartialOrd%3CFixedI8%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracLhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>, FracRhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;FracRhs&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracLhs&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#157\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;FracRhs&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#157\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#157\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#157\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#157\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedI8<FracRhs>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedU128%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#262\">Source</a><a href=\"#impl-PartialOrd%3CFixedU128%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracLhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>, FracRhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;FracRhs&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracLhs&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#262\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;FracRhs&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#262\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#262\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#262\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#262\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedU128<FracRhs>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedU16%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#259\">Source</a><a href=\"#impl-PartialOrd%3CFixedU16%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracLhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>, FracRhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;FracRhs&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracLhs&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#259\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;FracRhs&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#259\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#259\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#259\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#259\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedU16<FracRhs>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedU32%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#260\">Source</a><a href=\"#impl-PartialOrd%3CFixedU32%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracLhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>, FracRhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;FracRhs&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracLhs&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#260\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;FracRhs&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#260\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#260\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#260\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#260\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedU32<FracRhs>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedU64%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#261\">Source</a><a href=\"#impl-PartialOrd%3CFixedU64%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracLhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>, FracRhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;FracRhs&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracLhs&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#261\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;FracRhs&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#261\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#261\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#261\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#261\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedU64<FracRhs>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedU8%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#483\">Source</a><a href=\"#impl-PartialOrd%3CFixedU8%3CFracRhs%3E%3E-for-FixedU8%3CFracLhs%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracLhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>, FracRhs: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracRhs&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracLhs&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#483\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracRhs&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#483\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#483\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#483\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#483\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracRhs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedU8<FracRhs>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3Cbf16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialOrd%3Cbf16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"half/bfloat/struct.bf16.html\" title=\"struct half::bfloat::bf16\">bf16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"half/bfloat/struct.bf16.html\" title=\"struct half::bfloat::bf16\">half_bf16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#1335\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#1353\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#1371\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#1389\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<bf16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3Cf16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialOrd%3Cf16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"half/binary16/struct.f16.html\" title=\"struct half::binary16::f16\">f16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"half/binary16/struct.f16.html\" title=\"struct half::binary16::f16\">half_f16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#1335\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#1353\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#1371\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#1389\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<f16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3Cf32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialOrd%3Cf32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f32.html\">f32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f32.html\">f32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#1335\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#1353\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#1371\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#1389\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<f32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3Cf64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialOrd%3Cf64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f64.html\">f64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f64.html\">f64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#1335\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#1353\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#1371\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#1389\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<f64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3Ci128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialOrd%3Ci128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<i128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3Ci16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialOrd%3Ci16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<i16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3Ci32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialOrd%3Ci32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<i32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3Ci64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialOrd%3Ci64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<i64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3Ci8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialOrd%3Ci8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<i8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3Cisize%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialOrd%3Cisize%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<isize>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3Cu128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialOrd%3Cu128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<u128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3Cu16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialOrd%3Cu16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<u16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3Cu32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialOrd%3Cu32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<u32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3Cu64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialOrd%3Cu64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<u64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialOrd%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<u8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3Cusize%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialOrd%3Cusize%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<usize>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Product%3C%26FixedU8%3CFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Product%3C%26FixedU8%3CFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Frac: 'a + <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a>&lt;&amp;'a <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.product\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/iter/traits/accum/trait.Product.html#tymethod.product\" class=\"fn\">product</a>&lt;I&gt;(iter: I) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;,</div></h4></section></summary><div class='docblock'>Takes an iterator and generates <code>Self</code> from the elements by multiplying\nthe items.</div></details></div></details>","Product<&'a FixedU8<Frac>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Product-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Product-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.product\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/iter/traits/accum/trait.Product.html#tymethod.product\" class=\"fn\">product</a>&lt;I&gt;(iter: I) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;,</div></h4></section></summary><div class='docblock'>Takes an iterator and generates <code>Self</code> from the elements by multiplying\nthe items.</div></details></div></details>","Product","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3C%26FixedU8%3CFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Rem%3C%26FixedU8%3CFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;&amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<&FixedU8<Frac>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3C%26NonZero%3Cu8%3E%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Rem%3C%26NonZero%3Cu8%3E%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;&amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.1/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, rhs: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.1/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<&NonZero<u8>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3C%26u8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Rem%3C%26u8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<&u8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3CNonZero%3Cu8%3E%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Rem%3CNonZero%3Cu8%3E%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.1/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.1/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<NonZero<u8>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Rem%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<u8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Rem-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign%3C%26FixedU8%3CFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-RemAssign%3C%26FixedU8%3CFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a>&lt;&amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign<&FixedU8<Frac>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign%3C%26NonZero%3Cu8%3E%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-RemAssign%3C%26NonZero%3Cu8%3E%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a>&lt;&amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.1/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.1/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt;)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign<&NonZero<u8>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign%3C%26u8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-RemAssign%3C%26u8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign<&u8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign%3CNonZero%3Cu8%3E%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-RemAssign%3CNonZero%3Cu8%3E%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.1/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.1/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt;)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign<NonZero<u8>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-RemAssign%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign<u8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-RemAssign-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CF128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3CF128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.F128.html\" title=\"struct fixed::F128\">F128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.F128.html\" title=\"struct fixed::F128\">F128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<F128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CF128Bits%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3CF128Bits%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.F128Bits.html\" title=\"struct fixed::F128Bits\">F128Bits</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.F128Bits.html\" title=\"struct fixed::F128Bits\">F128Bits</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<F128Bits>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedI128%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3CFixedI128%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>&gt; <a class=\"trait\" href=\"az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedI128<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedI16%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3CFixedI16%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>&gt; <a class=\"trait\" href=\"az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedI16<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedI32%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3CFixedI32%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>&gt; <a class=\"trait\" href=\"az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedI32<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedI64%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3CFixedI64%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>&gt; <a class=\"trait\" href=\"az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedI64<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedI8%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3CFixedI8%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedI8<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedU128%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3CFixedU128%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>&gt; <a class=\"trait\" href=\"az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedU128<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedU16%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3CFixedU16%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>&gt; <a class=\"trait\" href=\"az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedU16<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedU32%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3CFixedU32%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>&gt; <a class=\"trait\" href=\"az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedU32<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedU64%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3CFixedU64%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>&gt; <a class=\"trait\" href=\"az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedU64<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedU8%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3CFixedU8%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedU8<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cbf16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3Cbf16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"half/bfloat/struct.bf16.html\" title=\"struct half::bfloat::bf16\">bf16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"half/bfloat/struct.bf16.html\" title=\"struct half::bfloat::bf16\">half_bf16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<bf16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cf16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3Cf16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"half/binary16/struct.f16.html\" title=\"struct half::binary16::f16\">f16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"half/binary16/struct.f16.html\" title=\"struct half::binary16::f16\">half_f16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<f16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cf32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3Cf32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f32.html\">f32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<f32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cf64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3Cf64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f64.html\">f64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<f64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Ci128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3Ci128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<i128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Ci16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3Ci16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<i16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Ci32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3Ci32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<i32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Ci64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3Ci64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<i64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Ci8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3Ci8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<i8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cisize%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3Cisize%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<isize>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cu128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3Cu128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<u128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cu16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3Cu16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<u16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cu32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3Cu32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<u32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cu64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3Cu64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<u64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<u8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cusize%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3Cusize%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<usize>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26i128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shl%3C%26i128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&i128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26i16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shl%3C%26i16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&i16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26i32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shl%3C%26i32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&i32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26i64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shl%3C%26i64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&i64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26i8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shl%3C%26i8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&i8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26isize%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shl%3C%26isize%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&isize>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26u128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shl%3C%26u128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&u128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26u16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shl%3C%26u16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&u16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26u32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shl%3C%26u32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&u32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26u64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shl%3C%26u64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&u64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26u8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shl%3C%26u8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&u8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26usize%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shl%3C%26usize%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&usize>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Ci128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shl%3Ci128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<i128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Ci16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shl%3Ci16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<i16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Ci32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shl%3Ci32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<i32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Ci64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shl%3Ci64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<i64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Ci8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shl%3Ci8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<i8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cisize%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shl%3Cisize%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<isize>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cu128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shl%3Cu128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<u128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cu16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shl%3Cu16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<u16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cu32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shl%3Cu32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<u32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cu64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shl%3Cu64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<u64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shl%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<u8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cusize%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shl%3Cusize%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<usize>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26i128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShlAssign%3C%26i128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&i128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26i16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShlAssign%3C%26i16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&i16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26i32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShlAssign%3C%26i32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&i32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26i64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShlAssign%3C%26i64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&i64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26i8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShlAssign%3C%26i8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&i8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26isize%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShlAssign%3C%26isize%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&isize>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26u128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShlAssign%3C%26u128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&u128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26u16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShlAssign%3C%26u16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&u16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26u32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShlAssign%3C%26u32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&u32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26u64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShlAssign%3C%26u64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&u64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26u8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShlAssign%3C%26u8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&u8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26usize%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShlAssign%3C%26usize%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&usize>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Ci128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShlAssign%3Ci128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<i128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Ci16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShlAssign%3Ci16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<i16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Ci32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShlAssign%3Ci32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<i32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Ci64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShlAssign%3Ci64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<i64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Ci8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShlAssign%3Ci8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<i8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cisize%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShlAssign%3Cisize%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<isize>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cu128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShlAssign%3Cu128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<u128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cu16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShlAssign%3Cu16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<u16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cu32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShlAssign%3Cu32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<u32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cu64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShlAssign%3Cu64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<u64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShlAssign%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<u8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cusize%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShlAssign%3Cusize%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<usize>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26i128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shr%3C%26i128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&i128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26i16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shr%3C%26i16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&i16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26i32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shr%3C%26i32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&i32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26i64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shr%3C%26i64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&i64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26i8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shr%3C%26i8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&i8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26isize%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shr%3C%26isize%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&isize>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26u128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shr%3C%26u128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&u128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26u16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shr%3C%26u16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&u16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26u32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shr%3C%26u32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&u32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26u64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shr%3C%26u64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&u64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26u8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shr%3C%26u8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&u8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26usize%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shr%3C%26usize%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&usize>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Ci128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shr%3Ci128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<i128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Ci16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shr%3Ci16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<i16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Ci32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shr%3Ci32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<i32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Ci64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shr%3Ci64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<i64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Ci8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shr%3Ci8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<i8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cisize%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shr%3Cisize%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<isize>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cu128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shr%3Cu128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<u128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cu16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shr%3Cu16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<u16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cu32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shr%3Cu32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<u32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cu64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shr%3Cu64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<u64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shr%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<u8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cusize%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Shr%3Cusize%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<usize>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26i128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShrAssign%3C%26i128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&i128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26i16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShrAssign%3C%26i16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&i16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26i32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShrAssign%3C%26i32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&i32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26i64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShrAssign%3C%26i64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&i64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26i8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShrAssign%3C%26i8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&i8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26isize%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShrAssign%3C%26isize%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&isize>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26u128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShrAssign%3C%26u128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&u128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26u16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShrAssign%3C%26u16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&u16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26u32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShrAssign%3C%26u32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&u32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26u64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShrAssign%3C%26u64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&u64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26u8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShrAssign%3C%26u8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&u8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26usize%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShrAssign%3C%26usize%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&usize>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Ci128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShrAssign%3Ci128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<i128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Ci16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShrAssign%3Ci16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<i16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Ci32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShrAssign%3Ci32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<i32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Ci64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShrAssign%3Ci64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<i64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Ci8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShrAssign%3Ci8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<i8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cisize%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShrAssign%3Cisize%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<isize>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cu128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShrAssign%3Cu128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<u128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cu16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShrAssign%3Cu16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<u16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cu32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShrAssign%3Cu32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<u32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cu64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShrAssign%3Cu64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<u64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShrAssign%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<u8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cusize%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-ShrAssign%3Cusize%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<usize>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26FixedU8%3CFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Sub%3C%26FixedU8%3CFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<&FixedU8<Frac>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Sub-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3C%26FixedU8%3CFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-SubAssign%3C%26FixedU8%3CFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;&amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<&FixedU8<Frac>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-SubAssign-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.1/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum%3C%26FixedU8%3CFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Sum%3C%26FixedU8%3CFrac%3E%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Frac: 'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a>&lt;&amp;'a <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;,</div></h4></section></summary><div class='docblock'>Takes an iterator and generates <code>Self</code> from the elements by “summing up”\nthe items.</div></details></div></details>","Sum<&'a FixedU8<Frac>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#impl-Sum-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/arith.rs.html#565\">Source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;,</div></h4></section></summary><div class='docblock'>Takes an iterator and generates <code>Self</code> from the elements by “summing up”\nthe items.</div></details></div></details>","Sum","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToFixed-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#impl-ToFixed-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.ToFixed.html\" title=\"trait fixed::traits::ToFixed\">ToFixed</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.to_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.ToFixed.html#tymethod.to_fixed\" class=\"fn\">to_fixed</a>&lt;F: <a class=\"trait\" href=\"fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>&gt;(self) -&gt; F</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number.</p>\n<p>Any extra fractional bits are discarded, which rounds towards −∞.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>When debug assertions are enabled, panics if the value\ndoes not fit. When debug assertions are not enabled,\nthe wrapped value can be returned, but it is not\nconsidered a breaking change if in the future it\npanics; if wrapping is required use\n<a href=\"fixed/traits/trait.ToFixed.html#tymethod.wrapping_to_fixed\" title=\"method fixed::traits::ToFixed::wrapping_to_fixed\"><code>wrapping_to_fixed</code></a> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_to_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.checked_to_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.ToFixed.html#tymethod.checked_to_fixed\" class=\"fn\">checked_to_fixed</a>&lt;F: <a class=\"trait\" href=\"fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>&gt;(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;F&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number if it fits, otherwise returns <a href=\"https://doc.rust-lang.org/1.85.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>.</p>\n<p>Any extra fractional bits are discarded, which rounds towards −∞.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_to_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.saturating_to_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.ToFixed.html#tymethod.saturating_to_fixed\" class=\"fn\">saturating_to_fixed</a>&lt;F: <a class=\"trait\" href=\"fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>&gt;(self) -&gt; F</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number, saturating if it does not fit.</p>\n<p>Any extra fractional bits are discarded, which rounds towards −∞.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_to_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.wrapping_to_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.ToFixed.html#tymethod.wrapping_to_fixed\" class=\"fn\">wrapping_to_fixed</a>&lt;F: <a class=\"trait\" href=\"fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>&gt;(self) -&gt; F</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number, wrapping if it does not fit.</p>\n<p>Any extra fractional bits are discarded, which rounds towards −∞.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_to_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.overflowing_to_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.ToFixed.html#tymethod.overflowing_to_fixed\" class=\"fn\">overflowing_to_fixed</a>&lt;F: <a class=\"trait\" href=\"fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>&gt;(self) -&gt; (F, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the value and a <a href=\"https://doc.rust-lang.org/1.85.1/core/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a>\nindicating whether an overflow has occurred. On\noverflow, the wrapped value is returned.</p>\n<p>Any extra fractional bits are discarded, which rounds towards −∞.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_to_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#method.unwrapped_to_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fixed/traits/trait.ToFixed.html#method.unwrapped_to_fixed\" class=\"fn\">unwrapped_to_fixed</a>&lt;F: <a class=\"trait\" href=\"fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>&gt;(self) -&gt; F</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number, panicking if it does not fit.</p>\n<p>Any extra fractional bits are discarded, which rounds towards −∞.</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>Panics if the value does not fit, even when debug\nassertions are not enabled.</p>\n</div></details></div></details>","ToFixed","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TransparentWrapper%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/impl_bytemuck.rs.html#62\">Source</a><a href=\"#impl-TransparentWrapper%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"bytemuck/transparent/trait.TransparentWrapper.html\" title=\"trait bytemuck::transparent::TransparentWrapper\">TransparentWrapper</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrap\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytemuck/transparent.rs.html#127-130\">Source</a><a href=\"#method.wrap\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytemuck/transparent/trait.TransparentWrapper.html#method.wrap\" class=\"fn\">wrap</a>(s: Inner) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Convert the inner type into the wrapper type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrap_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytemuck/transparent.rs.html#142\">Source</a><a href=\"#method.wrap_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytemuck/transparent/trait.TransparentWrapper.html#method.wrap_ref\" class=\"fn\">wrap_ref</a>(s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Inner</a>) -&gt; &amp;Self</h4></section></summary><div class='docblock'>Convert a reference to the inner type into a reference to the wrapper\ntype.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrap_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytemuck/transparent.rs.html#165\">Source</a><a href=\"#method.wrap_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytemuck/transparent/trait.TransparentWrapper.html#method.wrap_mut\" class=\"fn\">wrap_mut</a>(s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;mut Inner</a>) -&gt; &amp;mut Self</h4></section></summary><div class='docblock'>Convert a mutable reference to the inner type into a mutable reference to\nthe wrapper type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrap_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytemuck/transparent.rs.html#186-189\">Source</a><a href=\"#method.wrap_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytemuck/transparent/trait.TransparentWrapper.html#method.wrap_slice\" class=\"fn\">wrap_slice</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.slice.html\">[Inner]</a>) -&gt; &amp;[Self]<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Convert a slice to the inner type into a slice to the wrapper type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrap_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytemuck/transparent.rs.html#201-204\">Source</a><a href=\"#method.wrap_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytemuck/transparent/trait.TransparentWrapper.html#method.wrap_slice_mut\" class=\"fn\">wrap_slice_mut</a>(s: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.slice.html\">[Inner]</a>) -&gt; &amp;mut [Self]<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Convert a mutable slice to the inner type into a mutable slice to the\nwrapper type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peel\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytemuck/transparent.rs.html#217-220\">Source</a><a href=\"#method.peel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytemuck/transparent/trait.TransparentWrapper.html#method.peel\" class=\"fn\">peel</a>(s: Self) -&gt; Inner<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Convert the wrapper type into the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peel_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytemuck/transparent.rs.html#232\">Source</a><a href=\"#method.peel_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytemuck/transparent/trait.TransparentWrapper.html#method.peel_ref\" class=\"fn\">peel_ref</a>(s: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;Inner</a></h4></section></summary><div class='docblock'>Convert a reference to the wrapper type into a reference to the inner\ntype.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peel_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytemuck/transparent.rs.html#254\">Source</a><a href=\"#method.peel_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytemuck/transparent/trait.TransparentWrapper.html#method.peel_mut\" class=\"fn\">peel_mut</a>(s: &amp;mut Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.reference.html\">&amp;mut Inner</a></h4></section></summary><div class='docblock'>Convert a mutable reference to the wrapper type into a mutable reference\nto the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peel_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytemuck/transparent.rs.html#275-278\">Source</a><a href=\"#method.peel_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytemuck/transparent/trait.TransparentWrapper.html#method.peel_slice\" class=\"fn\">peel_slice</a>(s: &amp;[Self]) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.slice.html\">[Inner]</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Convert a slice to the wrapped type into a slice to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peel_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytemuck/transparent.rs.html#290-293\">Source</a><a href=\"#method.peel_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytemuck/transparent/trait.TransparentWrapper.html#method.peel_slice_mut\" class=\"fn\">peel_slice_mut</a>(s: &amp;mut [Self]) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.slice.html\">[Inner]</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Convert a mutable slice to the wrapped type into a mutable slice to the\ninner type.</div></details></div></details>","TransparentWrapper<u8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CF128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3CF128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.F128.html\" title=\"struct fixed::F128\">F128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.F128.html\" title=\"struct fixed::F128\">F128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<F128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CF128Bits%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3CF128Bits%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.F128Bits.html\" title=\"struct fixed::F128Bits\">F128Bits</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.F128Bits.html\" title=\"struct fixed::F128Bits\">F128Bits</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<F128Bits>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedI128%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3CFixedI128%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>&gt; <a class=\"trait\" href=\"az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedI128<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedI16%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3CFixedI16%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>&gt; <a class=\"trait\" href=\"az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedI16<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedI32%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3CFixedI32%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>&gt; <a class=\"trait\" href=\"az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedI32<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedI64%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3CFixedI64%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>&gt; <a class=\"trait\" href=\"az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedI64<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedI8%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3CFixedI8%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedI8<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedU128%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3CFixedU128%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>&gt; <a class=\"trait\" href=\"az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedU128<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedU16%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3CFixedU16%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>&gt; <a class=\"trait\" href=\"az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedU16<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedU32%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3CFixedU32%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>&gt; <a class=\"trait\" href=\"az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedU32<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedU64%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3CFixedU64%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>&gt; <a class=\"trait\" href=\"az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedU64<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedU8%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3CFixedU8%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedU8<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cbf16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3Cbf16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"half/bfloat/struct.bf16.html\" title=\"struct half::bfloat::bf16\">bf16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"half/bfloat/struct.bf16.html\" title=\"struct half::bfloat::bf16\">half_bf16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<bf16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cf16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3Cf16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"half/binary16/struct.f16.html\" title=\"struct half::binary16::f16\">f16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"half/binary16/struct.f16.html\" title=\"struct half::binary16::f16\">half_f16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<f16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cf32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3Cf32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f32.html\">f32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<f32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cf64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3Cf64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f64.html\">f64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<f64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Ci128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3Ci128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<i128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Ci16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3Ci16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<i16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Ci32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3Ci32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<i32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Ci64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3Ci64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<i64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Ci8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3Ci8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<i8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cisize%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3Cisize%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<isize>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cu128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3Cu128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<u128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cu16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3Cu16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<u16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cu32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3Cu32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<u32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cu64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3Cu64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<u64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<u8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cusize%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3Cusize%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<usize>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperExp-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/display.rs.html#777\">Source</a><a href=\"#impl-UpperExp-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/fmt/trait.UpperExp.html\" title=\"trait core::fmt::UpperExp\">UpperExp</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/display.rs.html#777\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/fmt/trait.UpperExp.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.85.1/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">FmtResult</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.85.1/core/fmt/trait.UpperExp.html#tymethod.fmt\">Read more</a></div></details></div></details>","UpperExp","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/display.rs.html#777\">Source</a><a href=\"#impl-UpperHex-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/display.rs.html#777\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.85.1/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">FmtResult</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.85.1/core/fmt/trait.UpperHex.html#tymethod.fmt\">Read more</a></div></details></div></details>","UpperHex","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CF128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3CF128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.F128.html\" title=\"struct fixed::F128\">F128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.F128.html\" title=\"struct fixed::F128\">F128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<F128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CF128Bits%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3CF128Bits%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.F128Bits.html\" title=\"struct fixed::F128Bits\">F128Bits</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.F128Bits.html\" title=\"struct fixed::F128Bits\">F128Bits</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<F128Bits>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedI128%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3CFixedI128%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>&gt; <a class=\"trait\" href=\"az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedI128<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedI16%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3CFixedI16%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>&gt; <a class=\"trait\" href=\"az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedI16<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedI32%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3CFixedI32%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>&gt; <a class=\"trait\" href=\"az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedI32<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedI64%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3CFixedI64%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>&gt; <a class=\"trait\" href=\"az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedI64<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedI8%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3CFixedI8%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedI8<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedU128%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3CFixedU128%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>&gt; <a class=\"trait\" href=\"az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedU128<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedU16%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3CFixedU16%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>&gt; <a class=\"trait\" href=\"az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedU16<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedU32%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3CFixedU32%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>&gt; <a class=\"trait\" href=\"az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedU32<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedU64%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3CFixedU64%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>&gt; <a class=\"trait\" href=\"az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedU64<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedU8%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3CFixedU8%3CFracDst%3E%3E-for-FixedU8%3CFracSrc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>, FracDst: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracDst&gt;&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracDst&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedU8<FracDst>>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cbf16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3Cbf16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"half/bfloat/struct.bf16.html\" title=\"struct half::bfloat::bf16\">bf16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"half/bfloat/struct.bf16.html\" title=\"struct half::bfloat::bf16\">half_bf16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<bf16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cf16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3Cf16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"half/binary16/struct.f16.html\" title=\"struct half::binary16::f16\">f16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"half/binary16/struct.f16.html\" title=\"struct half::binary16::f16\">half_f16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<f16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cf32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3Cf32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f32.html\">f32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<f32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cf64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3Cf64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f64.html\">f64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<f64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Ci128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3Ci128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<i128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Ci16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3Ci16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<i16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Ci32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3Ci32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<i32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Ci64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3Ci64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<i64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Ci8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3Ci8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<i8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cisize%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3Cisize%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<isize>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cu128%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3Cu128%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<u128>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cu16%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3Cu16%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<u16>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cu32%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3Cu32%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<u32>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cu64%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3Cu64%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<u64>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3Cu8%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<u8>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cusize%3E-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3Cusize%3E-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<usize>","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroable-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/impl_bytemuck.rs.html#62\">Source</a><a href=\"#impl-Zeroable-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"bytemuck/zeroable/trait.Zeroable.html\" title=\"trait bytemuck::zeroable::Zeroable\">Zeroable</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytemuck/zeroable.rs.html#32\">Source</a><a href=\"#method.zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytemuck/zeroable/trait.Zeroable.html#method.zeroed\" class=\"fn\">zeroed</a>() -&gt; Self</h4></section></summary><div class='docblock'>Calls <a href=\"https://doc.rust-lang.org/1.85.1/core/mem/fn.zeroed.html\" title=\"fn core::mem::zeroed\"><code>zeroed</code></a>. <a href=\"bytemuck/zeroable/trait.Zeroable.html#method.zeroed\">Read more</a></div></details></div></details>","Zeroable","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<section id=\"impl-Copy-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/lib.rs.html#613-629\">Source</a><a href=\"#impl-Copy-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section>","Copy","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<section id=\"impl-Eq-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/cmp_fixed.rs.html#483\">Source</a><a href=\"#impl-Eq-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.Unsigned.html\" title=\"trait fixed::types::extra::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section>","Eq","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<section id=\"impl-FixedOptionalArbitrary-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#impl-FixedOptionalArbitrary-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.FixedOptionalArbitrary.html\" title=\"trait fixed::traits::FixedOptionalArbitrary\">FixedOptionalArbitrary</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section>","FixedOptionalArbitrary","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<section id=\"impl-FixedOptionalBorsh-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#impl-FixedOptionalBorsh-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.FixedOptionalBorsh.html\" title=\"trait fixed::traits::FixedOptionalBorsh\">FixedOptionalBorsh</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section>","FixedOptionalBorsh","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<section id=\"impl-FixedOptionalFeatures-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#impl-FixedOptionalFeatures-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.FixedOptionalFeatures.html\" title=\"trait fixed::traits::FixedOptionalFeatures\">FixedOptionalFeatures</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section>","FixedOptionalFeatures","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<section id=\"impl-FixedOptionalNightlyFloat-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#impl-FixedOptionalNightlyFloat-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.FixedOptionalNightlyFloat.html\" title=\"trait fixed::traits::FixedOptionalNightlyFloat\">FixedOptionalNightlyFloat</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section>","FixedOptionalNightlyFloat","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<section id=\"impl-FixedOptionalNum-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#impl-FixedOptionalNum-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.FixedOptionalNum.html\" title=\"trait fixed::traits::FixedOptionalNum\">FixedOptionalNum</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section>","FixedOptionalNum","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<section id=\"impl-FixedOptionalSerde-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/traits.rs.html#4922\">Source</a><a href=\"#impl-FixedOptionalSerde-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: <a class=\"trait\" href=\"fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>&gt; <a class=\"trait\" href=\"fixed/traits/trait.FixedOptionalSerde.html\" title=\"trait fixed::traits::FixedOptionalSerde\">FixedOptionalSerde</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section>","FixedOptionalSerde","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"],["<section id=\"impl-Pod-for-FixedU8%3CFrac%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed/impl_bytemuck.rs.html#62\">Source</a><a href=\"#impl-Pod-for-FixedU8%3CFrac%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac: 'static&gt; <a class=\"trait\" href=\"bytemuck/pod/trait.Pod.html\" title=\"trait bytemuck::pod::Pod\">Pod</a> for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h3></section>","Pod","fixed::types::U8F0","fixed::types::U7F1","fixed::types::U6F2","fixed::types::U5F3","fixed::types::U4F4","fixed::types::U3F5","fixed::types::U2F6","fixed::types::U1F7","fixed::types::U0F8"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[1835247]}