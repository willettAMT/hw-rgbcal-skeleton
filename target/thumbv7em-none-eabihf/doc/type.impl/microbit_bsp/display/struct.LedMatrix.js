(function() {
    var type_impls = Object.fromEntries([["microbit_bsp",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LedMatrix%3CP,+ROWS,+COLS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/microbit_bsp/display/mod.rs.html#29-172\">Source</a><a href=\"#impl-LedMatrix%3CP,+ROWS,+COLS%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;P, const ROWS: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>, const COLS: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"microbit_bsp/display/struct.LedMatrix.html\" title=\"struct microbit_bsp::display::LedMatrix\">LedMatrix</a>&lt;P, ROWS, COLS&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"embedded_hal/digital/trait.OutputPin.html\" title=\"trait embedded_hal::digital::OutputPin\">OutputPin</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/microbit_bsp/display/mod.rs.html#34-42\">Source</a><h4 class=\"code-header\">pub fn <a href=\"microbit_bsp/display/struct.LedMatrix.html#tymethod.new\" class=\"fn\">new</a>(pin_rows: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.array.html\">[P; ROWS]</a>, pin_cols: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.array.html\">[P; COLS]</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a new instance of an LED matrix using the provided pins</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/microbit_bsp/display/mod.rs.html#45-54\">Source</a><h4 class=\"code-header\">pub fn <a href=\"microbit_bsp/display/struct.LedMatrix.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clear all LEDs</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on\" class=\"method\"><a class=\"src rightside\" href=\"src/microbit_bsp/display/mod.rs.html#57-59\">Source</a><h4 class=\"code-header\">pub fn <a href=\"microbit_bsp/display/struct.LedMatrix.html#tymethod.on\" class=\"fn\">on</a>(&amp;mut self, x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>, y: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Turn on point (x,y) in the frame buffer</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.off\" class=\"method\"><a class=\"src rightside\" href=\"src/microbit_bsp/display/mod.rs.html#62-64\">Source</a><h4 class=\"code-header\">pub fn <a href=\"microbit_bsp/display/struct.LedMatrix.html#tymethod.off\" class=\"fn\">off</a>(&amp;mut self, x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>, y: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Turn off point (x,y) in the frame buffer</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply\" class=\"method\"><a class=\"src rightside\" href=\"src/microbit_bsp/display/mod.rs.html#67-69\">Source</a><h4 class=\"code-header\">pub fn <a href=\"microbit_bsp/display/struct.LedMatrix.html#tymethod.apply\" class=\"fn\">apply</a>(&amp;mut self, frame: <a class=\"struct\" href=\"microbit_bsp/display/struct.Frame.html\" title=\"struct microbit_bsp::display::Frame\">Frame</a>&lt;COLS, ROWS&gt;)</h4></section></summary><div class=\"docblock\"><p>Apply the provided frame onto the frame buffer</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_brightness\" class=\"method\"><a class=\"src rightside\" href=\"src/microbit_bsp/display/mod.rs.html#72-74\">Source</a><h4 class=\"code-header\">pub fn <a href=\"microbit_bsp/display/struct.LedMatrix.html#tymethod.set_brightness\" class=\"fn\">set_brightness</a>(&amp;mut self, brightness: <a class=\"struct\" href=\"microbit_bsp/display/struct.Brightness.html\" title=\"struct microbit_bsp::display::Brightness\">Brightness</a>)</h4></section></summary><div class=\"docblock\"><p>Adjust the brightness level</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.increase_brightness\" class=\"method\"><a class=\"src rightside\" href=\"src/microbit_bsp/display/mod.rs.html#77-79\">Source</a><h4 class=\"code-header\">pub fn <a href=\"microbit_bsp/display/struct.LedMatrix.html#tymethod.increase_brightness\" class=\"fn\">increase_brightness</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Increase brightness relative to current setting</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decrease_brightness\" class=\"method\"><a class=\"src rightside\" href=\"src/microbit_bsp/display/mod.rs.html#82-84\">Source</a><h4 class=\"code-header\">pub fn <a href=\"microbit_bsp/display/struct.LedMatrix.html#tymethod.decrease_brightness\" class=\"fn\">decrease_brightness</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Decrease brightness relative to current setting</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.render\" class=\"method\"><a class=\"src rightside\" href=\"src/microbit_bsp/display/mod.rs.html#87-108\">Source</a><h4 class=\"code-header\">pub fn <a href=\"microbit_bsp/display/struct.LedMatrix.html#tymethod.render\" class=\"fn\">render</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Perform a full refresh of the display based on the current frame buffer</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.display\" class=\"method\"><a class=\"src rightside\" href=\"src/microbit_bsp/display/mod.rs.html#112-120\">Source</a><h4 class=\"code-header\">pub async fn <a href=\"microbit_bsp/display/struct.LedMatrix.html#tymethod.display\" class=\"fn\">display</a>(&amp;mut self, frame: <a class=\"struct\" href=\"microbit_bsp/display/struct.Frame.html\" title=\"struct microbit_bsp::display::Frame\">Frame</a>&lt;COLS, ROWS&gt;, length: <a class=\"struct\" href=\"embassy_time/duration/struct.Duration.html\" title=\"struct embassy_time::duration::Duration\">Duration</a>)</h4></section></summary><div class=\"docblock\"><p>Display the provided frame for the duration. Handles screen refresh\nin an async display loop.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.scroll\" class=\"method\"><a class=\"src rightside\" href=\"src/microbit_bsp/display/mod.rs.html#123-126\">Source</a><h4 class=\"code-header\">pub async fn <a href=\"microbit_bsp/display/struct.LedMatrix.html#tymethod.scroll\" class=\"fn\">scroll</a>(&amp;mut self, text: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>)</h4></section></summary><div class=\"docblock\"><p>Scroll the provided text across the LED display using default duration based on text length</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.scroll_with_speed\" class=\"method\"><a class=\"src rightside\" href=\"src/microbit_bsp/display/mod.rs.html#129-131\">Source</a><h4 class=\"code-header\">pub async fn <a href=\"microbit_bsp/display/struct.LedMatrix.html#tymethod.scroll_with_speed\" class=\"fn\">scroll_with_speed</a>(&amp;mut self, text: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.str.html\">str</a>, speed: <a class=\"struct\" href=\"embassy_time/duration/struct.Duration.html\" title=\"struct embassy_time::duration::Duration\">Duration</a>)</h4></section></summary><div class=\"docblock\"><p>Scroll the provided text across the screen within the provided duration</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.animate\" class=\"method\"><a class=\"src rightside\" href=\"src/microbit_bsp/display/mod.rs.html#134-151\">Source</a><h4 class=\"code-header\">pub async fn <a href=\"microbit_bsp/display/struct.LedMatrix.html#tymethod.animate\" class=\"fn\">animate</a>(\n    &amp;mut self,\n    data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/core/primitive.u8.html\">u8</a>],\n    effect: <a class=\"enum\" href=\"microbit_bsp/display/enum.AnimationEffect.html\" title=\"enum microbit_bsp::display::AnimationEffect\">AnimationEffect</a>,\n    duration: <a class=\"struct\" href=\"embassy_time/duration/struct.Duration.html\" title=\"struct embassy_time::duration::Duration\">Duration</a>,\n)</h4></section></summary><div class=\"docblock\"><p>Apply animation based on data with the given effect during the provided duration</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.animate_frames\" class=\"method\"><a class=\"src rightside\" href=\"src/microbit_bsp/display/mod.rs.html#154-171\">Source</a><h4 class=\"code-header\">pub async fn <a href=\"microbit_bsp/display/struct.LedMatrix.html#tymethod.animate_frames\" class=\"fn\">animate_frames</a>(\n    &amp;mut self,\n    data: &amp;[<a class=\"struct\" href=\"microbit_bsp/display/struct.Frame.html\" title=\"struct microbit_bsp::display::Frame\">Frame</a>&lt;COLS, ROWS&gt;],\n    effect: <a class=\"enum\" href=\"microbit_bsp/display/enum.AnimationEffect.html\" title=\"enum microbit_bsp::display::AnimationEffect\">AnimationEffect</a>,\n    duration: <a class=\"struct\" href=\"embassy_time/duration/struct.Duration.html\" title=\"struct embassy_time::duration::Duration\">Duration</a>,\n)</h4></section></summary><div class=\"docblock\"><p>Animate a slice of frames using the provided effect during the provided duration</p>\n</div></details></div></details>",0,"microbit_bsp::board::LedMatrix"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[10195]}