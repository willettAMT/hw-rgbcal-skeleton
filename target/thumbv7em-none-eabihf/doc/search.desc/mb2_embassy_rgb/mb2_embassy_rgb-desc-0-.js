searchState.loadedDescShard("mb2_embassy_rgb", 0, "RGB LED Controller for micro:bit\nType alias for a single-channel SAADC configuration.\nGlobal frame rate setting for RGB LED refresh rate.\nAnalog knob controller that converts ADC readings to …\nMaximum intensity levels for each RGB channel.\nGlobal RGB LED intensity levels shared across all tasks.\nRGB LED controller using software PWM.\nUser interface controller that processes knob and button …\nCurrent frame rate for change detection.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThis is a convenience function that safely accesses the …\nRetrieves the current RGB LED intensity levels.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nKnob Input Module\nCached RGB intensity levels (0 to <code>LEVELS</code>-1).\nRGB LED Control Module\nGPIO pins for RGB LEDs [red, green, blue].\nUpdates the frame rate setting using a closure.\nUpdates the RGB LED intensity levels using a closure.\nPWM timing interval in microseconds.\nUser Interface Module\nType alias for a single-channel SAADC configuration.\nAnalog knob controller that converts ADC readings to …\nReads the knob position and converts it to a discrete …\nCreates a new knob controller and calibrates the ADC.\nRGB LED controller using software PWM.\nType alias for the RGB LED pin array.\nCurrent frame rate for change detection.\nCalculates PWM timing for the given frame rate.\nCached RGB intensity levels (0 to <code>LEVELS</code>-1).\nCreates a new RGB controller.\nGPIO pins for RGB LEDs [red, green, blue].\nMain RGB control loop.\nExecutes one PWM cycle for a single LED.\nPWM timing interval in microseconds.\nBlue LED intensity (button A pressed)\nRepresents which parameter the knob is currently …\nFrame rate control (no buttons pressed)\nGreen LED intensity (button B pressed)\nRed LED intensity (both buttons pressed)\nUser interface controller that processes knob and button …\nInternal state for th e UI control system.\nDisplay refresh rate in frames per second (10-160 FPS).\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRGB intensity levels [red, green, blue] with values from …\nMaps knob value (0-15) to appropriate parameter range.\nUser interface controller that processes knob and button …\nReads button state and determines which parameter to …\nMain UI control loop that handles input processing and …\nDisplays the current UI state to the debug console.")