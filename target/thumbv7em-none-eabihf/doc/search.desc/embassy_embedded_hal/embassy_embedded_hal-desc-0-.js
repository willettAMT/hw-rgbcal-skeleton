searchState.loadedDescShard("embassy_embedded_hal", 0, "embassy-embedded-hal\nThe configuration type used by this driver.\nThe configuration type used by this driver.\nThe error type that can occur if <code>set_config</code> fails.\nGet the configuration of a peripheral driver.\nSet the configuration of a peripheral driver.\nAdapters between embedded-hal traits.\nUtilities related to flash.\nGet the configuration of the driver.\nSet the configuration of the driver.\nShared bus implementations\nWrapper that implements async traits using blocking …\nWrapper that yields for each operation to the wrapped …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new instance of a wrapper for a given peripheral.\nCreate a new instance of a wrapper that yields after each …\nConvenience helper for concatenating two consecutive …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate a new flash that concatenates two consecutive …\nFlash Partition utilities\nA logical partition of an underlying shared flash\nPartition error\nUnderlying flash error\nThe requested flash area is outside the partition\nA logical partition of an underlying shared flash\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new partition\nCreate a new partition\nGet the partition offset within the flash\nGet the partition offset within the flash\nGet the partition size\nGet the partition size\nConfiguration of the inner I2C bus failed.\nThe SPI bus could not be configured.\nSetting the value of the Chip Select (CS) pin failed.\nDelay operations are not supported when the <code>time</code> Cargo …\nAn operation on the inner I2C bus failed.\nError returned by I2C device implementations in this crate.\nAn operation on the inner SPI bus failed.\nError returned by SPI device implementations in this crate.\nAsynchronous shared bus implementations for …\nBlocking shared bus implementations for embedded-hal\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAsynchronous shared I2C bus\nAsynchronous shared SPI bus\nI2C device on a shared bus.\nI2C device on a shared bus, with its own configuration.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>I2cDevice</code>.\nCreate a new <code>I2cDeviceWithConfig</code>.\nSPI device on a shared bus.\nSPI device on a shared bus, with its own configuration.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>SpiDevice</code>.\nCreate a new <code>SpiDeviceWithConfig</code>.\nBlocking shared I2C bus\nBlocking shared SPI bus\nI2C device on a shared bus.\nI2C device on a shared bus, with its own configuration.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>I2cDevice</code>.\nCreate a new <code>I2cDeviceWithConfig</code>.\nSPI device on a shared bus.\nSPI device on a shared bus, with its own configuration.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>SpiDevice</code>.\nCreate a new <code>SpiDeviceWithConfig</code>.")