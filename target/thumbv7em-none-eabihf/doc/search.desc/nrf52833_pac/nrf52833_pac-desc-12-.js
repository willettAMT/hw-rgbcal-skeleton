searchState.loadedDescShard("nrf52833_pac", 12, "Get enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\nWrite ‘1’ to disable interrupt for event ENDEPIN[0]\nWrite ‘1’ to disable interrupt for event ENDEPIN[0]\nField <code>ENDEPIN0</code> reader - Write ‘1’ to disable interrupt …\nField <code>ENDEPIN0</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event ENDEPIN[1]\nWrite ‘1’ to disable interrupt for event ENDEPIN[1]\nField <code>ENDEPIN1</code> reader - Write ‘1’ to disable interrupt …\nField <code>ENDEPIN1</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event ENDEPIN[2]\nWrite ‘1’ to disable interrupt for event ENDEPIN[2]\nField <code>ENDEPIN2</code> reader - Write ‘1’ to disable interrupt …\nField <code>ENDEPIN2</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event ENDEPIN[3]\nWrite ‘1’ to disable interrupt for event ENDEPIN[3]\nField <code>ENDEPIN3</code> reader - Write ‘1’ to disable interrupt …\nField <code>ENDEPIN3</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event ENDEPIN[4]\nWrite ‘1’ to disable interrupt for event ENDEPIN[4]\nField <code>ENDEPIN4</code> reader - Write ‘1’ to disable interrupt …\nField <code>ENDEPIN4</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event ENDEPIN[5]\nWrite ‘1’ to disable interrupt for event ENDEPIN[5]\nField <code>ENDEPIN5</code> reader - Write ‘1’ to disable interrupt …\nField <code>ENDEPIN5</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event ENDEPIN[6]\nWrite ‘1’ to disable interrupt for event ENDEPIN[6]\nField <code>ENDEPIN6</code> reader - Write ‘1’ to disable interrupt …\nField <code>ENDEPIN6</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event ENDEPIN[7]\nWrite ‘1’ to disable interrupt for event ENDEPIN[7]\nField <code>ENDEPIN7</code> reader - Write ‘1’ to disable interrupt …\nField <code>ENDEPIN7</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event ENDEPOUT[0]\nWrite ‘1’ to disable interrupt for event ENDEPOUT[0]\nField <code>ENDEPOUT0</code> reader - Write ‘1’ to disable …\nField <code>ENDEPOUT0</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event ENDEPOUT[1]\nWrite ‘1’ to disable interrupt for event ENDEPOUT[1]\nField <code>ENDEPOUT1</code> reader - Write ‘1’ to disable …\nField <code>ENDEPOUT1</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event ENDEPOUT[2]\nWrite ‘1’ to disable interrupt for event ENDEPOUT[2]\nField <code>ENDEPOUT2</code> reader - Write ‘1’ to disable …\nField <code>ENDEPOUT2</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event ENDEPOUT[3]\nWrite ‘1’ to disable interrupt for event ENDEPOUT[3]\nField <code>ENDEPOUT3</code> reader - Write ‘1’ to disable …\nField <code>ENDEPOUT3</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event ENDEPOUT[4]\nWrite ‘1’ to disable interrupt for event ENDEPOUT[4]\nField <code>ENDEPOUT4</code> reader - Write ‘1’ to disable …\nField <code>ENDEPOUT4</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event ENDEPOUT[5]\nWrite ‘1’ to disable interrupt for event ENDEPOUT[5]\nField <code>ENDEPOUT5</code> reader - Write ‘1’ to disable …\nField <code>ENDEPOUT5</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event ENDEPOUT[6]\nWrite ‘1’ to disable interrupt for event ENDEPOUT[6]\nField <code>ENDEPOUT6</code> reader - Write ‘1’ to disable …\nField <code>ENDEPOUT6</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event ENDEPOUT[7]\nWrite ‘1’ to disable interrupt for event ENDEPOUT[7]\nField <code>ENDEPOUT7</code> reader - Write ‘1’ to disable …\nField <code>ENDEPOUT7</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event ENDISOIN\nWrite ‘1’ to disable interrupt for event ENDISOIN\nField <code>ENDISOIN</code> reader - Write ‘1’ to disable interrupt …\nField <code>ENDISOIN</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event ENDISOOUT\nWrite ‘1’ to disable interrupt for event ENDISOOUT\nField <code>ENDISOOUT</code> reader - Write ‘1’ to disable …\nField <code>ENDISOOUT</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event EP0DATADONE\nWrite ‘1’ to disable interrupt for event EP0DATADONE\nField <code>EP0DATADONE</code> reader - Write ‘1’ to disable …\nField <code>EP0DATADONE</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event EP0SETUP\nWrite ‘1’ to disable interrupt for event EP0SETUP\nField <code>EP0SETUP</code> reader - Write ‘1’ to disable interrupt …\nField <code>EP0SETUP</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event EPDATA\nWrite ‘1’ to disable interrupt for event EPDATA\nField <code>EPDATA</code> reader - Write ‘1’ to disable interrupt …\nField <code>EPDATA</code> writer - Write ‘1’ to disable interrupt …\nDisable interrupt\nRegister <code>INTENCLR</code> reader\nWrite ‘1’ to disable interrupt for event SOF\nWrite ‘1’ to disable interrupt for event SOF\nField <code>SOF</code> reader - Write ‘1’ to disable interrupt for …\nField <code>SOF</code> writer - Write ‘1’ to disable interrupt for …\nWrite ‘1’ to disable interrupt for event STARTED\nWrite ‘1’ to disable interrupt for event STARTED\nField <code>STARTED</code> reader - Write ‘1’ to disable interrupt …\nField <code>STARTED</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event USBEVENT\nWrite ‘1’ to disable interrupt for event USBEVENT\nField <code>USBEVENT</code> reader - Write ‘1’ to disable interrupt …\nField <code>USBEVENT</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event USBRESET\nWrite ‘1’ to disable interrupt for event USBRESET\nField <code>USBRESET</code> reader - Write ‘1’ to disable interrupt …\nField <code>USBRESET</code> writer - Write ‘1’ to disable interrupt …\nRegister <code>INTENCLR</code> writer\nWrites raw bits to the register.\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nBit 2 - Write ‘1’ to disable interrupt for event …\nBit 2 - Write ‘1’ to disable interrupt for event …\nBit 3 - Write ‘1’ to disable interrupt for event …\nBit 3 - Write ‘1’ to disable interrupt for event …\nBit 4 - Write ‘1’ to disable interrupt for event …\nBit 4 - Write ‘1’ to disable interrupt for event …\nBit 5 - Write ‘1’ to disable interrupt for event …\nBit 5 - Write ‘1’ to disable interrupt for event …\nBit 6 - Write ‘1’ to disable interrupt for event …\nBit 6 - Write ‘1’ to disable interrupt for event …\nBit 7 - Write ‘1’ to disable interrupt for event …\nBit 7 - Write ‘1’ to disable interrupt for event …\nBit 8 - Write ‘1’ to disable interrupt for event …\nBit 8 - Write ‘1’ to disable interrupt for event …\nBit 9 - Write ‘1’ to disable interrupt for event …\nBit 9 - Write ‘1’ to disable interrupt for event …\nBit 12 - Write ‘1’ to disable interrupt for event …\nBit 12 - Write ‘1’ to disable interrupt for event …\nBit 13 - Write ‘1’ to disable interrupt for event …\nBit 13 - Write ‘1’ to disable interrupt for event …\nBit 14 - Write ‘1’ to disable interrupt for event …\nBit 14 - Write ‘1’ to disable interrupt for event …\nBit 15 - Write ‘1’ to disable interrupt for event …\nBit 15 - Write ‘1’ to disable interrupt for event …\nBit 16 - Write ‘1’ to disable interrupt for event …\nBit 16 - Write ‘1’ to disable interrupt for event …\nBit 17 - Write ‘1’ to disable interrupt for event …\nBit 17 - Write ‘1’ to disable interrupt for event …\nBit 18 - Write ‘1’ to disable interrupt for event …\nBit 18 - Write ‘1’ to disable interrupt for event …\nBit 19 - Write ‘1’ to disable interrupt for event …\nBit 19 - Write ‘1’ to disable interrupt for event …\nBit 11 - Write ‘1’ to disable interrupt for event …\nBit 11 - Write ‘1’ to disable interrupt for event …\nBit 20 - Write ‘1’ to disable interrupt for event …\nBit 20 - Write ‘1’ to disable interrupt for event …\nBit 10 - Write ‘1’ to disable interrupt for event …\nBit 10 - Write ‘1’ to disable interrupt for event …\nBit 23 - Write ‘1’ to disable interrupt for event …\nBit 23 - Write ‘1’ to disable interrupt for event …\nBit 24 - Write ‘1’ to disable interrupt for event …\nBit 24 - Write ‘1’ to disable interrupt for event …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 21 - Write ‘1’ to disable interrupt for event SOF\nBit 21 - Write ‘1’ to disable interrupt for event SOF\nBit 1 - Write ‘1’ to disable interrupt for event …\nBit 1 - Write ‘1’ to disable interrupt for event …\nBit 22 - Write ‘1’ to disable interrupt for event …\nBit 22 - Write ‘1’ to disable interrupt for event …\nBit 0 - Write ‘1’ to disable interrupt for event …\nBit 0 - Write ‘1’ to disable interrupt for event …\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\nWrite ‘1’ to enable interrupt for event ENDEPIN[0]\nWrite ‘1’ to enable interrupt for event ENDEPIN[0]\nField <code>ENDEPIN0</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDEPIN0</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event ENDEPIN[1]\nWrite ‘1’ to enable interrupt for event ENDEPIN[1]\nField <code>ENDEPIN1</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDEPIN1</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event ENDEPIN[2]\nWrite ‘1’ to enable interrupt for event ENDEPIN[2]\nField <code>ENDEPIN2</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDEPIN2</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event ENDEPIN[3]\nWrite ‘1’ to enable interrupt for event ENDEPIN[3]\nField <code>ENDEPIN3</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDEPIN3</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event ENDEPIN[4]\nWrite ‘1’ to enable interrupt for event ENDEPIN[4]\nField <code>ENDEPIN4</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDEPIN4</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event ENDEPIN[5]\nWrite ‘1’ to enable interrupt for event ENDEPIN[5]\nField <code>ENDEPIN5</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDEPIN5</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event ENDEPIN[6]\nWrite ‘1’ to enable interrupt for event ENDEPIN[6]\nField <code>ENDEPIN6</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDEPIN6</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event ENDEPIN[7]\nWrite ‘1’ to enable interrupt for event ENDEPIN[7]\nField <code>ENDEPIN7</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDEPIN7</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event ENDEPOUT[0]\nWrite ‘1’ to enable interrupt for event ENDEPOUT[0]\nField <code>ENDEPOUT0</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDEPOUT0</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event ENDEPOUT[1]\nWrite ‘1’ to enable interrupt for event ENDEPOUT[1]\nField <code>ENDEPOUT1</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDEPOUT1</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event ENDEPOUT[2]\nWrite ‘1’ to enable interrupt for event ENDEPOUT[2]\nField <code>ENDEPOUT2</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDEPOUT2</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event ENDEPOUT[3]\nWrite ‘1’ to enable interrupt for event ENDEPOUT[3]\nField <code>ENDEPOUT3</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDEPOUT3</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event ENDEPOUT[4]\nWrite ‘1’ to enable interrupt for event ENDEPOUT[4]\nField <code>ENDEPOUT4</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDEPOUT4</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event ENDEPOUT[5]\nWrite ‘1’ to enable interrupt for event ENDEPOUT[5]\nField <code>ENDEPOUT5</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDEPOUT5</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event ENDEPOUT[6]\nWrite ‘1’ to enable interrupt for event ENDEPOUT[6]\nField <code>ENDEPOUT6</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDEPOUT6</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event ENDEPOUT[7]\nWrite ‘1’ to enable interrupt for event ENDEPOUT[7]\nField <code>ENDEPOUT7</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDEPOUT7</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event ENDISOIN\nWrite ‘1’ to enable interrupt for event ENDISOIN\nField <code>ENDISOIN</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDISOIN</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event ENDISOOUT\nWrite ‘1’ to enable interrupt for event ENDISOOUT\nField <code>ENDISOOUT</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDISOOUT</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event EP0DATADONE\nWrite ‘1’ to enable interrupt for event EP0DATADONE\nField <code>EP0DATADONE</code> reader - Write ‘1’ to enable …\nField <code>EP0DATADONE</code> writer - Write ‘1’ to enable …\nWrite ‘1’ to enable interrupt for event EP0SETUP\nWrite ‘1’ to enable interrupt for event EP0SETUP\nField <code>EP0SETUP</code> reader - Write ‘1’ to enable interrupt …\nField <code>EP0SETUP</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event EPDATA\nWrite ‘1’ to enable interrupt for event EPDATA\nField <code>EPDATA</code> reader - Write ‘1’ to enable interrupt …\nField <code>EPDATA</code> writer - Write ‘1’ to enable interrupt …\nEnable interrupt\nRegister <code>INTENSET</code> reader\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\nWrite ‘1’ to enable interrupt for event SOF\nWrite ‘1’ to enable interrupt for event SOF\nField <code>SOF</code> reader - Write ‘1’ to enable interrupt for …\nField <code>SOF</code> writer - Write ‘1’ to enable interrupt for …\nWrite ‘1’ to enable interrupt for event STARTED\nWrite ‘1’ to enable interrupt for event STARTED\nField <code>STARTED</code> reader - Write ‘1’ to enable interrupt …\nField <code>STARTED</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event USBEVENT\nWrite ‘1’ to enable interrupt for event USBEVENT\nField <code>USBEVENT</code> reader - Write ‘1’ to enable interrupt …\nField <code>USBEVENT</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event USBRESET\nWrite ‘1’ to enable interrupt for event USBRESET\nField <code>USBRESET</code> reader - Write ‘1’ to enable interrupt …\nField <code>USBRESET</code> writer - Write ‘1’ to enable interrupt …\nRegister <code>INTENSET</code> writer\nWrites raw bits to the register.\nBit 2 - Write ‘1’ to enable interrupt for event ENDEPIN…\nBit 2 - Write ‘1’ to enable interrupt for event ENDEPIN…\nBit 3 - Write ‘1’ to enable interrupt for event ENDEPIN…\nBit 3 - Write ‘1’ to enable interrupt for event ENDEPIN…\nBit 4 - Write ‘1’ to enable interrupt for event ENDEPIN…\nBit 4 - Write ‘1’ to enable interrupt for event ENDEPIN…\nBit 5 - Write ‘1’ to enable interrupt for event ENDEPIN…\nBit 5 - Write ‘1’ to enable interrupt for event ENDEPIN…\nBit 6 - Write ‘1’ to enable interrupt for event ENDEPIN…\nBit 6 - Write ‘1’ to enable interrupt for event ENDEPIN…\nBit 7 - Write ‘1’ to enable interrupt for event ENDEPIN…\nBit 7 - Write ‘1’ to enable interrupt for event ENDEPIN…\nBit 8 - Write ‘1’ to enable interrupt for event ENDEPIN…\nBit 8 - Write ‘1’ to enable interrupt for event ENDEPIN…\nBit 9 - Write ‘1’ to enable interrupt for event ENDEPIN…\nBit 9 - Write ‘1’ to enable interrupt for event ENDEPIN…\nBit 12 - Write ‘1’ to enable interrupt for event …\nBit 12 - Write ‘1’ to enable interrupt for event …\nBit 13 - Write ‘1’ to enable interrupt for event …\nBit 13 - Write ‘1’ to enable interrupt for event …\nBit 14 - Write ‘1’ to enable interrupt for event …\nBit 14 - Write ‘1’ to enable interrupt for event …\nBit 15 - Write ‘1’ to enable interrupt for event …\nBit 15 - Write ‘1’ to enable interrupt for event …\nBit 16 - Write ‘1’ to enable interrupt for event …\nBit 16 - Write ‘1’ to enable interrupt for event …\nBit 17 - Write ‘1’ to enable interrupt for event …\nBit 17 - Write ‘1’ to enable interrupt for event …\nBit 18 - Write ‘1’ to enable interrupt for event …\nBit 18 - Write ‘1’ to enable interrupt for event …\nBit 19 - Write ‘1’ to enable interrupt for event …\nBit 19 - Write ‘1’ to enable interrupt for event …\nBit 11 - Write ‘1’ to enable interrupt for event …\nBit 11 - Write ‘1’ to enable interrupt for event …\nBit 20 - Write ‘1’ to enable interrupt for event …\nBit 20 - Write ‘1’ to enable interrupt for event …\nBit 10 - Write ‘1’ to enable interrupt for event …\nBit 10 - Write ‘1’ to enable interrupt for event …\nBit 23 - Write ‘1’ to enable interrupt for event …\nBit 23 - Write ‘1’ to enable interrupt for event …\nBit 24 - Write ‘1’ to enable interrupt for event EPDATA\nBit 24 - Write ‘1’ to enable interrupt for event EPDATA\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nBit 21 - Write ‘1’ to enable interrupt for event SOF\nBit 21 - Write ‘1’ to enable interrupt for event SOF\nBit 1 - Write ‘1’ to enable interrupt for event STARTED\nBit 1 - Write ‘1’ to enable interrupt for event STARTED\nBit 22 - Write ‘1’ to enable interrupt for event …\nBit 22 - Write ‘1’ to enable interrupt for event …\nBit 0 - Write ‘1’ to enable interrupt for event …\nBit 0 - Write ‘1’ to enable interrupt for event …\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nAMOUNT (r) register accessor: an alias for <code>Reg&lt;AMOUNT_SPEC&gt;</code>\nRegister block\nMAXCNT (rw) register accessor: an alias for …\nPTR (rw) register accessor: an alias for <code>Reg&lt;PTR_SPEC&gt;</code>\nNumber of bytes transferred in the last transaction\n0x08 - Number of bytes transferred in the last transaction\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMaximum number of bytes to transfer\n0x04 - Maximum number of bytes to transfer\nData pointer\n0x00 - Data pointer\nField <code>AMOUNT</code> reader - Number of bytes transferred in the …\nNumber of bytes transferred in the last transaction\nRegister <code>AMOUNT</code> reader\nBits 0:9 - Number of bytes transferred in the last …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>MAXCNT</code> reader - Maximum number of bytes to transfer\nMaximum number of bytes to transfer\nField <code>MAXCNT</code> writer - Maximum number of bytes to transfer\nRegister <code>MAXCNT</code> reader\nRegister <code>MAXCNT</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:9 - Maximum number of bytes to transfer\nBits 0:9 - Maximum number of bytes to transfer\nField <code>PTR</code> reader - Data pointer\nData pointer\nField <code>PTR</code> writer - Data pointer\nRegister <code>PTR</code> reader\nRegister <code>PTR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Data pointer\nBits 0:31 - Data pointer\nControls the response of the ISO IN endpoint to an IN …\n0: Endpoint does not respond in that case\nRegister <code>ISOINCONFIG</code> reader\nControls the response of the ISO IN endpoint to an IN …\nField <code>RESPONSE</code> reader - Controls the response of the ISO …\nField <code>RESPONSE</code> writer - Controls the response of the ISO …\nRegister <code>ISOINCONFIG</code> writer\n1: Endpoint responds with a zero-length data packet in …\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>NO_RESP</code>\nChecks if the value of the field is <code>ZERO_DATA</code>\nEndpoint does not respond in that case\nBit 0 - Controls the response of the ISO IN endpoint to an …\nBit 0 - Controls the response of the ISO IN endpoint to an …\nGet enumerated values variant\nEndpoint responds with a zero-length data packet in that …\nAMOUNT (r) register accessor: an alias for <code>Reg&lt;AMOUNT_SPEC&gt;</code>\nRegister block\nMAXCNT (rw) register accessor: an alias for …\nPTR (rw) register accessor: an alias for <code>Reg&lt;PTR_SPEC&gt;</code>\nNumber of bytes transferred in the last transaction\n0x08 - Number of bytes transferred in the last transaction\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMaximum number of bytes to transfer\n0x04 - Maximum number of bytes to transfer\nData pointer\n0x00 - Data pointer\nField <code>AMOUNT</code> reader - Number of bytes transferred in the …\nNumber of bytes transferred in the last transaction\nRegister <code>AMOUNT</code> reader\nBits 0:9 - Number of bytes transferred in the last …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>MAXCNT</code> reader - Maximum number of bytes to transfer\nMaximum number of bytes to transfer\nField <code>MAXCNT</code> writer - Maximum number of bytes to transfer\nRegister <code>MAXCNT</code> reader\nRegister <code>MAXCNT</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:9 - Maximum number of bytes to transfer\nBits 0:9 - Maximum number of bytes to transfer\nField <code>PTR</code> reader - Data pointer\nData pointer\nField <code>PTR</code> writer - Data pointer\nRegister <code>PTR</code> reader\nRegister <code>PTR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Data pointer\nBits 0:31 - Data pointer\n128: Lower half for IN, upper half for OUT\nControls the split of ISO buffers\n0: Full buffer dedicated to either iso IN or OUT\nRegister <code>ISOSPLIT</code> reader\nControls the split of ISO buffers\nField <code>SPLIT</code> reader - Controls the split of ISO buffers\nField <code>SPLIT</code> writer - Controls the split of ISO buffers\nRegister <code>ISOSPLIT</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nLower half for IN, upper half for OUT\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>HALF_IN</code>\nChecks if the value of the field is <code>ONE_DIR</code>\nFull buffer dedicated to either iso IN or OUT\nBits 0:15 - Controls the split of ISO buffers\nBits 0:15 - Controls the split of ISO buffers\nGet enumerated values variant\n0: Software must write this value to exit low power mode …\nControls USBD peripheral low-power mode during USB suspend\nField <code>LOWPOWER</code> reader - Controls USBD peripheral low-power …\nControls USBD peripheral low power mode during USB suspend\nField <code>LOWPOWER</code> writer - Controls USBD peripheral low-power …\n1: Software must write this value to enter low power mode …\nRegister <code>LOWPOWER</code> reader\nRegister <code>LOWPOWER</code> writer\nWrites raw bits to the register.\nSoftware must write this value to exit low power mode and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>FORCE_NORMAL</code>\nChecks if the value of the field is <code>LOW_POWER</code>\nSoftware must write this value to enter low power mode …\nBit 0 - Controls USBD peripheral low-power mode during USB …\nBit 0 - Controls USBD peripheral low-power mode during USB …\nGet enumerated values variant\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\nShortcut between event ENDEPOUT[0] and task EP0RCVOUT\nField <code>ENDEPOUT0_EP0RCVOUT</code> reader - Shortcut between event …\nField <code>ENDEPOUT0_EP0RCVOUT</code> writer - Shortcut between event …\nShortcut between event ENDEPOUT[0] and task EP0STATUS\nField <code>ENDEPOUT0_EP0STATUS</code> reader - Shortcut between event …\nField <code>ENDEPOUT0_EP0STATUS</code> writer - Shortcut between event …\nShortcut between event EP0DATADONE and task EP0STATUS\nField <code>EP0DATADONE_EP0STATUS</code> reader - Shortcut between …\nField <code>EP0DATADONE_EP0STATUS</code> writer - Shortcut between …\nShortcut between event EP0DATADONE and task STARTEPIN[0]\nField <code>EP0DATADONE_STARTEPIN0</code> reader - Shortcut between …\nField <code>EP0DATADONE_STARTEPIN0</code> writer - Shortcut between …\nShortcut between event EP0DATADONE and task STARTEPOUT[0]\nField <code>EP0DATADONE_STARTEPOUT0</code> reader - Shortcut between …\nField <code>EP0DATADONE_STARTEPOUT0</code> writer - Shortcut between …\nRegister <code>SHORTS</code> reader\nShortcuts between local events and tasks\nRegister <code>SHORTS</code> writer\nWrites raw bits to the register.\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nBit 4 - Shortcut between event ENDEPOUT[0] and task …\nBit 4 - Shortcut between event ENDEPOUT[0] and task …\nBit 3 - Shortcut between event ENDEPOUT[0] and task …\nBit 3 - Shortcut between event ENDEPOUT[0] and task …\nBit 2 - Shortcut between event EP0DATADONE and task …\nBit 2 - Shortcut between event EP0DATADONE and task …\nBit 0 - Shortcut between event EP0DATADONE and task …\nBit 0 - Shortcut between event EP0DATADONE and task …\nBit 1 - Shortcut between event EP0DATADONE and task …\nBit 1 - Shortcut between event EP0DATADONE and task …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nEPOUT (rw) register accessor: an alias for <code>Reg&lt;EPOUT_SPEC&gt;</code>\nISOOUT (r) register accessor: an alias for <code>Reg&lt;ISOOUT_SPEC&gt;</code>\nRegister block\nDescription collection: Number of bytes received last in …\n0x00..0x20 - Description collection: Number of bytes …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nNumber of bytes received last on this ISO OUT data endpoint\n0x20 - Number of bytes received last on this ISO OUT data …\nDescription collection: Number of bytes received last in …\nRegister <code>EPOUT[%s]</code> reader\nField <code>SIZE</code> reader - Number of bytes received last in the …\nField <code>SIZE</code> writer - Number of bytes received last in the …\nRegister <code>EPOUT[%s]</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:6 - Number of bytes received last in the data stage …\nBits 0:6 - Number of bytes received last in the data stage …\nNumber of bytes received last on this ISO OUT data endpoint\n0: No zero-length data received, use value in SIZE\nRegister <code>ISOOUT</code> reader\nField <code>SIZE</code> reader - Number of bytes received last on this …\nZero-length data packet received\n1: Zero-length data received, ignore value in SIZE\nField <code>ZERO</code> reader - Zero-length data packet received\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>NORMAL</code>\nChecks if the value of the field is <code>ZERO_DATA</code>\nBits 0:9 - Number of bytes received last on this ISO OUT …\nGet enumerated values variant\nBit 16 - Zero-length data packet received\nForces D+ and D- lines into the state defined in the …\nForces D+ and D- lines into the state defined in the …\nField <code>TASKS_DPDMDRIVE</code> writer - Forces D+ and D- lines into …\n1: Trigger task\nRegister <code>TASKS_DPDMDRIVE</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Forces D+ and D- lines into the state defined in …\nTrigger task\nStops forcing D+ and D- lines into any state (USB engine …\nStops forcing D+ and D- lines into any state (USB engine …\nField <code>TASKS_DPDMNODRIVE</code> writer - Stops forcing D+ and D- …\n1: Trigger task\nRegister <code>TASKS_DPDMNODRIVE</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Stops forcing D+ and D- lines into any state (USB …\nTrigger task\nAllows OUT data stage on control endpoint 0\nAllows OUT data stage on control endpoint 0\nField <code>TASKS_EP0RCVOUT</code> writer - Allows OUT data stage on …\n1: Trigger task\nRegister <code>TASKS_EP0RCVOUT</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Allows OUT data stage on control endpoint 0\nTrigger task\nStalls data and status stage on control endpoint 0\nStalls data and status stage on control endpoint 0\nField <code>TASKS_EP0STALL</code> writer - Stalls data and status stage …\n1: Trigger task\nRegister <code>TASKS_EP0STALL</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Stalls data and status stage on control endpoint 0\nTrigger task\nAllows status stage on control endpoint 0\nAllows status stage on control endpoint 0\nField <code>TASKS_EP0STATUS</code> writer - Allows status stage on …\n1: Trigger task\nRegister <code>TASKS_EP0STATUS</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Allows status stage on control endpoint 0\nTrigger task\nCaptures the EPIN[n].PTR and EPIN[n].MAXCNT registers …\nDescription collection: Captures the EPIN[n].PTR and EPIN[n…\nField <code>TASKS_STARTEPIN</code> writer - Captures the EPIN[n].PTR …\n1: Trigger task\nRegister <code>TASKS_STARTEPIN[%s]</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Captures the EPIN[n].PTR and EPIN[n].MAXCNT …\nTrigger task\nCaptures the EPOUT[n].PTR and EPOUT[n].MAXCNT registers …\nDescription collection: Captures the EPOUT[n].PTR and EPOUT…\nField <code>TASKS_STARTEPOUT</code> writer - Captures the EPOUT[n].PTR …\n1: Trigger task\nRegister <code>TASKS_STARTEPOUT[%s]</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Captures the EPOUT[n].PTR and EPOUT[n].MAXCNT …\nTrigger task\nCaptures the ISOIN.PTR and ISOIN.MAXCNT registers values, …\nCaptures the ISOIN.PTR and ISOIN.MAXCNT registers values, …\nField <code>TASKS_STARTISOIN</code> writer - Captures the ISOIN.PTR and …\n1: Trigger task\nRegister <code>TASKS_STARTISOIN</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Captures the ISOIN.PTR and ISOIN.MAXCNT registers …\nTrigger task\nCaptures the ISOOUT.PTR and ISOOUT.MAXCNT registers …\nCaptures the ISOOUT.PTR and ISOOUT.MAXCNT registers …\nField <code>TASKS_STARTISOOUT</code> writer - Captures the ISOOUT.PTR …\n1: Trigger task\nRegister <code>TASKS_STARTISOOUT</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Captures the ISOOUT.PTR and ISOOUT.MAXCNT …\nTrigger task\nField <code>ADDR</code> reader - Device USB address\nRegister <code>USBADDR</code> reader\nDevice USB address\nBits 0:6 - Device USB address\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nControl of the USB pull-up on the D+ line\nField <code>CONNECT</code> reader - Control of the USB pull-up on the …\nField <code>CONNECT</code> writer - Control of the USB pull-up on the …\n0: Pull-up is disconnected\n1: Pull-up is connected to D+\nRegister <code>USBPULLUP</code> reader\nControl of the USB pull-up\nRegister <code>USBPULLUP</code> writer\nWrites raw bits to the register.\nBit 0 - Control of the USB pull-up on the D+ line\nBit 0 - Control of the USB pull-up on the D+ line\nPull-up is disconnected\nPull-up is connected to D+\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nGet enumerated values variant\nRegister <code>WINDEXH</code> reader\nField <code>WINDEXH</code> reader - SETUP data, byte 5, MSB of wIndex\nSETUP data, byte 5, MSB of wIndex\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:7 - SETUP data, byte 5, MSB of wIndex\nRegister <code>WINDEXL</code> reader\nField <code>WINDEXL</code> reader - SETUP data, byte 4, LSB of wIndex\nSETUP data, byte 4, LSB of wIndex\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:7 - SETUP data, byte 4, LSB of wIndex\nRegister <code>WLENGTHH</code> reader\nField <code>WLENGTHH</code> reader - SETUP data, byte 7, MSB of wLength\nSETUP data, byte 7, MSB of wLength\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:7 - SETUP data, byte 7, MSB of wLength\nRegister <code>WLENGTHL</code> reader\nField <code>WLENGTHL</code> reader - SETUP data, byte 6, LSB of wLength\nSETUP data, byte 6, LSB of wLength\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:7 - SETUP data, byte 6, LSB of wLength\nRegister <code>WVALUEH</code> reader\nField <code>WVALUEH</code> reader - SETUP data, byte 3, MSB of wValue\nSETUP data, byte 3, MSB of wValue\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:7 - SETUP data, byte 3, MSB of wValue\nRegister <code>WVALUEL</code> reader\nField <code>WVALUEL</code> reader - SETUP data, byte 2, LSB of wValue\nSETUP data, byte 2, LSB of wValue\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:7 - SETUP data, byte 2, LSB of wValue\nCONFIG (rw) register accessor: an alias for …\nCRV (rw) register accessor: an alias for <code>Reg&lt;CRV_SPEC&gt;</code>\nEVENTS_TIMEOUT (rw) register accessor: an alias for …\nINTENCLR (rw) register accessor: an alias for …\nINTENSET (rw) register accessor: an alias for …\nREQSTATUS (r) register accessor: an alias for …\nRR (w) register accessor: an alias for <code>Reg&lt;RR_SPEC&gt;</code>\nRREN (rw) register accessor: an alias for <code>Reg&lt;RREN_SPEC&gt;</code>\nRUNSTATUS (r) register accessor: an alias for …\nRegister block\nTASKS_START (w) register accessor: an alias for …\nConfiguration register\n0x50c - Configuration register\nCounter reload value\n0x504 - Counter reload value\nWatchdog timeout\n0x100 - Watchdog timeout\nReturns the argument unchanged.\nDisable interrupt\n0x308 - Disable interrupt\nEnable interrupt\n0x304 - Enable interrupt\nCalls <code>U::from(self)</code>.\nRequest status\n0x404 - Request status\nDescription collection: Reload request n\n0x600..0x620 - Description collection: Reload request n\nEnable register for reload request registers\n0x508 - Enable register for reload request registers\nRun status\n0x400 - Run status\nStart the watchdog\n0x00 - Start the watchdog\nConfiguration register\nConfigure the watchdog to either be paused, or kept …\nField <code>HALT</code> reader - Configure the watchdog to either be …\nField <code>HALT</code> writer - Configure the watchdog to either be …\n0: Pause watchdog while the CPU is sleeping\n0: Pause watchdog while the CPU is halted by the debugger\nRegister <code>CONFIG</code> reader\n1: Keep the watchdog running while the CPU is sleeping\n1: Keep the watchdog running while the CPU is halted by …\nConfigure the watchdog to either be paused, or kept …\nField <code>SLEEP</code> reader - Configure the watchdog to either be …\nField <code>SLEEP</code> writer - Configure the watchdog to either be …\nRegister <code>CONFIG</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBit 3 - Configure the watchdog to either be paused, or …\nBit 3 - Configure the watchdog to either be paused, or …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>PAUSE</code>\nChecks if the value of the field is <code>PAUSE</code>\nChecks if the value of the field is <code>RUN</code>\nChecks if the value of the field is <code>RUN</code>\nPause watchdog while the CPU is sleeping\nPause watchdog while the CPU is halted by the debugger\nKeep the watchdog running while the CPU is sleeping\nKeep the watchdog running while the CPU is halted by the …\nBit 0 - Configure the watchdog to either be paused, or …\nBit 0 - Configure the watchdog to either be paused, or …\nGet enumerated values variant\nGet enumerated values variant\nField <code>CRV</code> reader - Counter reload value in number of …\nCounter reload value\nField <code>CRV</code> writer - Counter reload value in number of …\nRegister <code>CRV</code> reader\nRegister <code>CRV</code> writer\nWrites raw bits to the register.\nBits 0:31 - Counter reload value in number of cycles of …\nBits 0:31 - Counter reload value in number of cycles of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWatchdog timeout\nField <code>EVENTS_TIMEOUT</code> reader - Watchdog timeout\nWatchdog timeout\nField <code>EVENTS_TIMEOUT</code> writer - Watchdog timeout\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_TIMEOUT</code> reader\nRegister <code>EVENTS_TIMEOUT</code> writer\nWrites raw bits to the register.\nBit 0 - Watchdog timeout\nBit 0 - Watchdog timeout\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\n1: Disable\n0: Read: Disabled\n1: Read: Enabled\nDisable interrupt\nRegister <code>INTENCLR</code> reader\nWrite ‘1’ to disable interrupt for event TIMEOUT\nWrite ‘1’ to disable interrupt for event TIMEOUT\nField <code>TIMEOUT</code> reader - Write ‘1’ to disable interrupt …\nField <code>TIMEOUT</code> writer - Write ‘1’ to disable interrupt …\nRegister <code>INTENCLR</code> writer\nWrites raw bits to the register.\nDisable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 0 - Write ‘1’ to disable interrupt for event …\nBit 0 - Write ‘1’ to disable interrupt for event …\nGet enumerated values variant\n0: Read: Disabled\n1: Read: Enabled\nEnable interrupt\nRegister <code>INTENSET</code> reader\n1: Enable\nWrite ‘1’ to enable interrupt for event TIMEOUT\nWrite ‘1’ to enable interrupt for event TIMEOUT\nField <code>TIMEOUT</code> reader - Write ‘1’ to enable interrupt …\nField <code>TIMEOUT</code> writer - Write ‘1’ to enable interrupt …\nRegister <code>INTENSET</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nEnable\nBit 0 - Write ‘1’ to enable interrupt for event TIMEOUT\nBit 0 - Write ‘1’ to enable interrupt for event TIMEOUT\nGet enumerated values variant\n0: RR[0] register is not enabled, or are already …\n0: RR[1] register is not enabled, or are already …\n0: RR[2] register is not enabled, or are already …\n0: RR[3] register is not enabled, or are already …\n0: RR[4] register is not enabled, or are already …\n0: RR[5] register is not enabled, or are already …\n0: RR[6] register is not enabled, or are already …\n0: RR[7] register is not enabled, or are already …\n1: RR[0] register is enabled, and are not yet requesting …\n1: RR[1] register is enabled, and are not yet requesting …\n1: RR[2] register is enabled, and are not yet requesting …\n1: RR[3] register is enabled, and are not yet requesting …\n1: RR[4] register is enabled, and are not yet requesting …\n1: RR[5] register is enabled, and are not yet requesting …\n1: RR[6] register is enabled, and are not yet requesting …\n1: RR[7] register is enabled, and are not yet requesting …\nRegister <code>REQSTATUS</code> reader\nRequest status\nRequest status for RR[0] register\nField <code>RR0</code> reader - Request status for RR[0] register\nRequest status for RR[1] register\nField <code>RR1</code> reader - Request status for RR[1] register\nRequest status for RR[2] register\nField <code>RR2</code> reader - Request status for RR[2] register\nRequest status for RR[3] register\nField <code>RR3</code> reader - Request status for RR[3] register\nRequest status for RR[4] register\nField <code>RR4</code> reader - Request status for RR[4] register\nRequest status for RR[5] register\nField <code>RR5</code> reader - Request status for RR[5] register\nRequest status for RR[6] register\nField <code>RR6</code> reader - Request status for RR[6] register\nRequest status for RR[7] register\nField <code>RR7</code> reader - Request status for RR[7] register\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED_OR_REQUESTED</code>\nChecks if the value of the field is <code>DISABLED_OR_REQUESTED</code>\nChecks if the value of the field is <code>DISABLED_OR_REQUESTED</code>\nChecks if the value of the field is <code>DISABLED_OR_REQUESTED</code>\nChecks if the value of the field is <code>DISABLED_OR_REQUESTED</code>\nChecks if the value of the field is <code>DISABLED_OR_REQUESTED</code>\nChecks if the value of the field is <code>DISABLED_OR_REQUESTED</code>\nChecks if the value of the field is <code>DISABLED_OR_REQUESTED</code>\nChecks if the value of the field is <code>ENABLED_AND_UNREQUESTED</code>\nChecks if the value of the field is <code>ENABLED_AND_UNREQUESTED</code>\nChecks if the value of the field is <code>ENABLED_AND_UNREQUESTED</code>\nChecks if the value of the field is <code>ENABLED_AND_UNREQUESTED</code>\nChecks if the value of the field is <code>ENABLED_AND_UNREQUESTED</code>\nChecks if the value of the field is <code>ENABLED_AND_UNREQUESTED</code>\nChecks if the value of the field is <code>ENABLED_AND_UNREQUESTED</code>\nChecks if the value of the field is <code>ENABLED_AND_UNREQUESTED</code>\nBit 0 - Request status for RR[0] register\nBit 1 - Request status for RR[1] register\nBit 2 - Request status for RR[2] register\nBit 3 - Request status for RR[3] register\nBit 4 - Request status for RR[4] register\nBit 5 - Request status for RR[5] register\nBit 6 - Request status for RR[6] register\nBit 7 - Request status for RR[7] register\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\n1850885685: Value to request a reload of the watchdog timer\nReload request register\nDescription collection: Reload request n\nField <code>RR</code> writer - Reload request register\nRegister <code>RR[%s]</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nValue to request a reload of the watchdog timer\nBits 0:31 - Reload request register\n0: Disable RR[0] register\n0: Disable RR[1] register\n0: Disable RR[2] register\n0: Disable RR[3] register\n0: Disable RR[4] register\n0: Disable RR[5] register\n0: Disable RR[6] register\n0: Disable RR[7] register\n1: Enable RR[0] register\n1: Enable RR[1] register\n1: Enable RR[2] register\n1: Enable RR[3] register\n1: Enable RR[4] register\n1: Enable RR[5] register\n1: Enable RR[6] register\n1: Enable RR[7] register\nRegister <code>RREN</code> reader\nEnable or disable RR[0] register\nField <code>RR0</code> reader - Enable or disable RR[0] register\nField <code>RR0</code> writer - Enable or disable RR[0] register\nEnable or disable RR[1] register\nField <code>RR1</code> reader - Enable or disable RR[1] register\nField <code>RR1</code> writer - Enable or disable RR[1] register\nEnable or disable RR[2] register\nField <code>RR2</code> reader - Enable or disable RR[2] register\nField <code>RR2</code> writer - Enable or disable RR[2] register\nEnable or disable RR[3] register\nField <code>RR3</code> reader - Enable or disable RR[3] register\nField <code>RR3</code> writer - Enable or disable RR[3] register\nEnable or disable RR[4] register\nField <code>RR4</code> reader - Enable or disable RR[4] register\nField <code>RR4</code> writer - Enable or disable RR[4] register\nEnable or disable RR[5] register\nField <code>RR5</code> reader - Enable or disable RR[5] register\nField <code>RR5</code> writer - Enable or disable RR[5] register\nEnable or disable RR[6] register\nField <code>RR6</code> reader - Enable or disable RR[6] register\nField <code>RR6</code> writer - Enable or disable RR[6] register\nEnable or disable RR[7] register\nField <code>RR7</code> reader - Enable or disable RR[7] register\nField <code>RR7</code> writer - Enable or disable RR[7] register\nEnable register for reload request registers\nRegister <code>RREN</code> writer\nWrites raw bits to the register.\nDisable RR[0] register\nDisable RR[1] register\nDisable RR[2] register\nDisable RR[3] register\nDisable RR[4] register\nDisable RR[5] register\nDisable RR[6] register\nDisable RR[7] register\nEnable RR[0] register\nEnable RR[1] register\nEnable RR[2] register\nEnable RR[3] register\nEnable RR[4] register\nEnable RR[5] register\nEnable RR[6] register\nEnable RR[7] register\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 0 - Enable or disable RR[0] register\nBit 0 - Enable or disable RR[0] register\nBit 1 - Enable or disable RR[1] register\nBit 1 - Enable or disable RR[1] register\nBit 2 - Enable or disable RR[2] register\nBit 2 - Enable or disable RR[2] register\nBit 3 - Enable or disable RR[3] register\nBit 3 - Enable or disable RR[3] register\nBit 4 - Enable or disable RR[4] register\nBit 4 - Enable or disable RR[4] register\nBit 5 - Enable or disable RR[5] register\nBit 5 - Enable or disable RR[5] register\nBit 6 - Enable or disable RR[6] register\nBit 6 - Enable or disable RR[6] register\nBit 7 - Enable or disable RR[7] register\nBit 7 - Enable or disable RR[7] register\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\n0: Watchdog not running\nRegister <code>RUNSTATUS</code> reader\n1: Watchdog is running\nIndicates whether or not the watchdog is running\nField <code>RUNSTATUS</code> reader - Indicates whether or not the …\nRun status\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>NOT_RUNNING</code>\nChecks if the value of the field is <code>RUNNING</code>\nBit 0 - Indicates whether or not the watchdog is running\nGet enumerated values variant\nStart the watchdog\nStart the watchdog\nField <code>TASKS_START</code> writer - Start the watchdog\n1: Trigger task\nRegister <code>TASKS_START</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Start the watchdog\nTrigger task")