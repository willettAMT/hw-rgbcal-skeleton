searchState.loadedDescShard("nrf52833_pac", 7, "Clear the GPIO pattern array for antenna control\nField <code>CLEARPATTERN</code> writer - Clears GPIO pattern array for …\nRegister <code>CLEARPATTERN</code> reader\nRegister <code>CLEARPATTERN</code> writer\nWrites raw bits to the register.\nClear the GPIO pattern\nBit 0 - Clears GPIO pattern array for antenna control\nBit 0 - Clears GPIO pattern array for antenna control\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>CLEAR</code>\nGet enumerated values variant\nCRC configuration\n0: CRC length is zero and CRC calculation is disabled\n2: CRC calculation as per 802.15.4 standard. Starting at …\n0: CRC calculation includes address field\nCRC length in number of bytes.\nField <code>LEN</code> reader - CRC length in number of bytes.\nField <code>LEN</code> writer - CRC length in number of bytes.\n1: CRC length is one byte and CRC calculation is enabled\nRegister <code>CRCCNF</code> reader\n1: CRC calculation does not include address field. The CRC …\nInclude or exclude packet address field out of CRC …\nField <code>SKIPADDR</code> reader - Include or exclude packet address …\nField <code>SKIPADDR</code> writer - Include or exclude packet address …\n3: CRC length is three bytes and CRC calculation is enabled\n2: CRC length is two bytes and CRC calculation is enabled\nRegister <code>CRCCNF</code> writer\nWrites raw bits to the register.\nCRC length is zero and CRC calculation is disabled\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCRC calculation as per 802.15.4 standard. Starting at …\nCRC calculation includes address field\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>IEEE802154</code>\nChecks if the value of the field is <code>INCLUDE</code>\nChecks if the value of the field is <code>ONE</code>\nChecks if the value of the field is <code>SKIP</code>\nChecks if the value of the field is <code>THREE</code>\nChecks if the value of the field is <code>TWO</code>\nBits 0:1 - CRC length in number of bytes.\nBits 0:1 - CRC length in number of bytes.\nCRC length is one byte and CRC calculation is enabled\nCRC calculation does not include address field. The CRC …\nBits 8:9 - Include or exclude packet address field out of …\nBits 8:9 - Include or exclude packet address field out of …\nCRC length is three bytes and CRC calculation is enabled\nCRC length is two bytes and CRC calculation is enabled\nGet enumerated values variant\nGet enumerated values variant\nField <code>CRCINIT</code> reader - CRC initial value\nCRC initial value\nField <code>CRCINIT</code> writer - CRC initial value\nRegister <code>CRCINIT</code> reader\nRegister <code>CRCINIT</code> writer\nWrites raw bits to the register.\nBits 0:23 - CRC initial value\nBits 0:23 - CRC initial value\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>CRCPOLY</code> reader - CRC polynomial\nCRC polynomial\nField <code>CRCPOLY</code> writer - CRC polynomial\nRegister <code>CRCPOLY</code> reader\nRegister <code>CRCPOLY</code> writer\nWrites raw bits to the register.\nBits 0:23 - CRC polynomial\nBits 0:23 - CRC polynomial\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n0: Packet received with CRC error\n1: Packet received with CRC ok\nCRC status of packet received\nField <code>CRCSTATUS</code> reader - CRC status of packet received\nCRC status\nRegister <code>CRCSTATUS</code> reader\nBit 0 - CRC status of packet received\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>CRCERROR</code>\nChecks if the value of the field is <code>CRCOK</code>\nGet enumerated values variant\nSampling/switching if CRC is not OK\nField <code>CTEERRORHANDLING</code> reader - Sampling/switching if CRC …\nField <code>CTEERRORHANDLING</code> writer - Sampling/switching if CRC …\nCTEInfo is S1 byte or not\nField <code>CTEINFOINS1</code> reader - CTEInfo is S1 byte or not\nField <code>CTEINFOINS1</code> writer - CTEInfo is S1 byte or not\nConfiguration for CTE inline mode\nEnable parsing of CTEInfo from received packet in BLE modes\nField <code>CTEINLINECTRLEN</code> reader - Enable parsing of CTEInfo …\nField <code>CTEINLINECTRLEN</code> writer - Enable parsing of CTEInfo …\nSpacing between samples for the samples in the SWITCHING …\nField <code>CTEINLINERXMODE1US</code> reader - Spacing between samples …\nField <code>CTEINLINERXMODE1US</code> writer - Spacing between samples …\nSpacing between samples for the samples in the SWITCHING …\nField <code>CTEINLINERXMODE2US</code> reader - Spacing between samples …\nField <code>CTEINLINERXMODE2US</code> writer - Spacing between samples …\nMax range of CTETime\nField <code>CTETIMEVALIDRANGE</code> reader - Max range of CTETime\nField <code>CTETIMEVALIDRANGE</code> writer - Max range of CTETime\n0: Parsing of CTEInfo is disabled\n1: Parsing of CTEInfo is enabled\n1: CTEInfo is in S1 byte (data PDU)\n0: No sampling and antenna switching when CRC is not OK\n0: CTEInfo is NOT in S1 byte (advertising PDU)\nRegister <code>CTEINLINECONF</code> reader\nField <code>S0CONF</code> reader - S0 bit pattern to match\nField <code>S0CONF</code> writer - S0 bit pattern to match\nField <code>S0MASK</code> reader - S0 bit mask to set which bit to match\nField <code>S0MASK</code> writer - S0 bit mask to set which bit to match\nRegister <code>CTEINLINECONF</code> writer\n1: Sampling and antenna switching also when CRC is not OK\n6: 0.125us\n6: 0.125us\n0.125us\n0.125us\n3: 1us\n3: 1us\n1us\n1us\n20 in 8us unit (default) Set to 20 if parsed CTETime is …\n0: 20 in 8us unit (default) Set to 20 if parsed CTETime is …\n5: 0.25us\n5: 0.25us\n0.25us\n0.25us\n2: 2us\n2: 2us\n2us\n2us\n31 in 8us unit\n1: 31 in 8us unit\n1: 4us\n1: 4us\n4us\n4us\n4: 0.5us\n4: 0.5us\n0.5us\n0.5us\n63 in 8us unit\n2: 63 in 8us unit\nWrites raw bits to the register.\nBit 4 - Sampling/switching if CRC is not OK\nBit 4 - Sampling/switching if CRC is not OK\nBit 3 - CTEInfo is S1 byte or not\nBit 3 - CTEInfo is S1 byte or not\nBit 0 - Enable parsing of CTEInfo from received packet in …\nBit 0 - Enable parsing of CTEInfo from received packet in …\nBits 10:12 - Spacing between samples for the samples in …\nBits 10:12 - Spacing between samples for the samples in …\nBits 13:15 - Spacing between samples for the samples in …\nBits 13:15 - Spacing between samples for the samples in …\nBits 6:7 - Max range of CTETime\nBits 6:7 - Max range of CTETime\nParsing of CTEInfo is disabled\nParsing of CTEInfo is enabled\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCTEInfo is in S1 byte (data PDU)\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>_125NS</code>\nChecks if the value of the field is <code>_125NS</code>\nChecks if the value of the field is <code>_1US</code>\nChecks if the value of the field is <code>_1US</code>\nChecks if the value of the field is <code>_20</code>\nChecks if the value of the field is <code>_250NS</code>\nChecks if the value of the field is <code>_250NS</code>\nChecks if the value of the field is <code>_2US</code>\nChecks if the value of the field is <code>_2US</code>\nChecks if the value of the field is <code>_31</code>\nChecks if the value of the field is <code>_4US</code>\nChecks if the value of the field is <code>_4US</code>\nChecks if the value of the field is <code>_500NS</code>\nChecks if the value of the field is <code>_500NS</code>\nChecks if the value of the field is <code>_63</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>IN_S1</code>\nChecks if the value of the field is <code>NO</code>\nChecks if the value of the field is <code>NOT_IN_S1</code>\nChecks if the value of the field is <code>YES</code>\nNo sampling and antenna switching when CRC is not OK\nCTEInfo is NOT in S1 byte (advertising PDU)\nBits 16:23 - S0 bit pattern to match\nBits 16:23 - S0 bit pattern to match\nBits 24:31 - S0 bit mask to set which bit to match\nBits 24:31 - S0 bit mask to set which bit to match\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nSampling and antenna switching also when CRC is not OK\nCTEInfo parsed from received packet\nField <code>CTETIME</code> reader - CTETime parsed from packet\nField <code>CTETYPE</code> reader - CTEType parsed from packet\nRegister <code>CTESTATUS</code> reader\nField <code>RFU</code> reader - RFU parsed from packet\nBits 0:4 - CTETime parsed from packet\nBits 6:7 - CTEType parsed from packet\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 5 - RFU parsed from packet\nField <code>DAB</code> reader - Device address base segment n\nDescription collection: Device address base segment n\nField <code>DAB</code> writer - Device address base segment n\nRegister <code>DAB[%s]</code> reader\nRegister <code>DAB[%s]</code> writer\nWrites raw bits to the register.\nBits 0:31 - Device address base segment n\nBits 0:31 - Device address base segment n\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDevice address match configuration\n0: Disabled\n0: Disabled\n0: Disabled\n0: Disabled\n0: Disabled\n0: Disabled\n0: Disabled\n0: Disabled\nEnable or disable device address matching using device …\nField <code>ENA0</code> reader - Enable or disable device address …\nField <code>ENA0</code> writer - Enable or disable device address …\nEnable or disable device address matching using device …\nField <code>ENA1</code> reader - Enable or disable device address …\nField <code>ENA1</code> writer - Enable or disable device address …\nEnable or disable device address matching using device …\nField <code>ENA2</code> reader - Enable or disable device address …\nField <code>ENA2</code> writer - Enable or disable device address …\nEnable or disable device address matching using device …\nField <code>ENA3</code> reader - Enable or disable device address …\nField <code>ENA3</code> writer - Enable or disable device address …\nEnable or disable device address matching using device …\nField <code>ENA4</code> reader - Enable or disable device address …\nField <code>ENA4</code> writer - Enable or disable device address …\nEnable or disable device address matching using device …\nField <code>ENA5</code> reader - Enable or disable device address …\nField <code>ENA5</code> writer - Enable or disable device address …\nEnable or disable device address matching using device …\nField <code>ENA6</code> reader - Enable or disable device address …\nField <code>ENA6</code> writer - Enable or disable device address …\nEnable or disable device address matching using device …\nField <code>ENA7</code> reader - Enable or disable device address …\nField <code>ENA7</code> writer - Enable or disable device address …\n1: Enabled\n1: Enabled\n1: Enabled\n1: Enabled\n1: Enabled\n1: Enabled\n1: Enabled\n1: Enabled\nRegister <code>DACNF</code> reader\nField <code>TXADD0</code> reader - TxAdd for device address 0\nField <code>TXADD0</code> writer - TxAdd for device address 0\nField <code>TXADD1</code> reader - TxAdd for device address 1\nField <code>TXADD1</code> writer - TxAdd for device address 1\nField <code>TXADD2</code> reader - TxAdd for device address 2\nField <code>TXADD2</code> writer - TxAdd for device address 2\nField <code>TXADD3</code> reader - TxAdd for device address 3\nField <code>TXADD3</code> writer - TxAdd for device address 3\nField <code>TXADD4</code> reader - TxAdd for device address 4\nField <code>TXADD4</code> writer - TxAdd for device address 4\nField <code>TXADD5</code> reader - TxAdd for device address 5\nField <code>TXADD5</code> writer - TxAdd for device address 5\nField <code>TXADD6</code> reader - TxAdd for device address 6\nField <code>TXADD6</code> writer - TxAdd for device address 6\nField <code>TXADD7</code> reader - TxAdd for device address 7\nField <code>TXADD7</code> writer - TxAdd for device address 7\nRegister <code>DACNF</code> writer\nWrites raw bits to the register.\nDisabled\nDisabled\nDisabled\nDisabled\nDisabled\nDisabled\nDisabled\nDisabled\nBit 0 - Enable or disable device address matching using …\nBit 0 - Enable or disable device address matching using …\nBit 1 - Enable or disable device address matching using …\nBit 1 - Enable or disable device address matching using …\nBit 2 - Enable or disable device address matching using …\nBit 2 - Enable or disable device address matching using …\nBit 3 - Enable or disable device address matching using …\nBit 3 - Enable or disable device address matching using …\nBit 4 - Enable or disable device address matching using …\nBit 4 - Enable or disable device address matching using …\nBit 5 - Enable or disable device address matching using …\nBit 5 - Enable or disable device address matching using …\nBit 6 - Enable or disable device address matching using …\nBit 6 - Enable or disable device address matching using …\nBit 7 - Enable or disable device address matching using …\nBit 7 - Enable or disable device address matching using …\nEnabled\nEnabled\nEnabled\nEnabled\nEnabled\nEnabled\nEnabled\nEnabled\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 8 - TxAdd for device address 0\nBit 8 - TxAdd for device address 0\nBit 9 - TxAdd for device address 1\nBit 9 - TxAdd for device address 1\nBit 10 - TxAdd for device address 2\nBit 10 - TxAdd for device address 2\nBit 11 - TxAdd for device address 3\nBit 11 - TxAdd for device address 3\nBit 12 - TxAdd for device address 4\nBit 12 - TxAdd for device address 4\nBit 13 - TxAdd for device address 5\nBit 13 - TxAdd for device address 5\nBit 14 - TxAdd for device address 6\nBit 14 - TxAdd for device address 6\nBit 15 - TxAdd for device address 7\nBit 15 - TxAdd for device address 7\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nField <code>DAI</code> reader - Device address match index\nDevice address match index\nRegister <code>DAI</code> reader\nBits 0:2 - Device address match index\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>DAP</code> reader - Device address prefix n\nDescription collection: Device address prefix n\nField <code>DAP</code> writer - Device address prefix n\nRegister <code>DAP[%s]</code> reader\nRegister <code>DAP[%s]</code> writer\nWrites raw bits to the register.\nBits 0:15 - Device address prefix n\nBits 0:15 - Device address prefix n\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>DATAWHITEIV</code> reader - Data whitening initial value. …\nData whitening initial value\nField <code>DATAWHITEIV</code> writer - Data whitening initial value. …\nRegister <code>DATAWHITEIV</code> reader\nRegister <code>DATAWHITEIV</code> writer\nWrites raw bits to the register.\nBits 0:6 - Data whitening initial value. Bit 6 is …\nBits 0:6 - Data whitening initial value. Bit 6 is …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>AGCBACKOFFGAIN</code> reader - Gain will be lowered by the …\nField <code>AGCBACKOFFGAIN</code> writer - Gain will be lowered by the …\n1: AoA/AoD procedure triggered at end of CRC\nVarious configuration for Direction finding\nAdd CTE extension and do antenna switching/sampling in …\nField <code>DFEINEXTENSION</code> reader - Add CTE extension and do …\nField <code>DFEINEXTENSION</code> writer - Add CTE extension and do …\n0: Complex samples in I and Q\n1: Complex samples as magnitude and phase\n0: Do not repeat (1 time in total)\nField <code>NUMBEROF8US</code> reader - Length of the AoA/AoD procedure …\nField <code>NUMBEROF8US</code> writer - Length of the AoA/AoD procedure …\n0: Antenna switching/sampling is done in the packet payload\nRegister <code>DFECTRL1</code> reader\nRepeat each individual antenna pattern N times …\nField <code>REPEATPATTERN</code> reader - Repeat each individual …\nField <code>REPEATPATTERN</code> writer - Repeat each individual …\nWhether to sample I/Q or magnitude/phase\nField <code>SAMPLETYPE</code> reader - Whether to sample I/Q or …\nField <code>SAMPLETYPE</code> writer - Whether to sample I/Q or …\nInterval between samples in the REFERENCE period\nField <code>TSAMPLESPACINGREF</code> reader - Interval between samples …\nField <code>TSAMPLESPACINGREF</code> writer - Interval between samples …\nInterval between samples in the SWITCHING period when …\nField <code>TSAMPLESPACING</code> reader - Interval between samples in …\nField <code>TSAMPLESPACING</code> writer - Interval between samples in …\nInterval between every time the antenna is changed in the …\nField <code>TSWITCHSPACING</code> reader - Interval between every time …\nField <code>TSWITCHSPACING</code> writer - Interval between every time …\nRegister <code>DFECTRL1</code> writer\n6: 0.125us\n6: 0.125us\n0.125us\n0.125us\n3: 1us\n3: 1us\n3: 1us\n1us\n1us\n1us\n5: 0.25us\n5: 0.25us\n0.25us\n0.25us\n2: 2us\n2: 2us\n2: 2us\n2us\n2us\n2us\n1: 4us\n1: 4us\n1: 4us\n4us\n4us\n4us\n4: 0.5us\n4: 0.5us\n0.5us\n0.5us\nBits 24:27 - Gain will be lowered by the specified number …\nBits 24:27 - Gain will be lowered by the specified number …\nWrites raw bits to the register.\nAoA/AoD procedure triggered at end of CRC\nBit 7 - Add CTE extension and do antenna …\nBit 7 - Add CTE extension and do antenna …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nComplex samples in I and Q\nChecks if the value of the field is <code>_125NS</code>\nChecks if the value of the field is <code>_125NS</code>\nChecks if the value of the field is <code>_1US</code>\nChecks if the value of the field is <code>_1US</code>\nChecks if the value of the field is <code>_1US</code>\nChecks if the value of the field is <code>_250NS</code>\nChecks if the value of the field is <code>_250NS</code>\nChecks if the value of the field is <code>_2US</code>\nChecks if the value of the field is <code>_2US</code>\nChecks if the value of the field is <code>_2US</code>\nChecks if the value of the field is <code>_4US</code>\nChecks if the value of the field is <code>_4US</code>\nChecks if the value of the field is <code>_4US</code>\nChecks if the value of the field is <code>_500NS</code>\nChecks if the value of the field is <code>_500NS</code>\nChecks if the value of the field is <code>CRC</code>\nChecks if the value of the field is <code>IQ</code>\nChecks if the value of the field is <code>MAG_PHASE</code>\nChecks if the value of the field is <code>NO_REPEAT</code>\nChecks if the value of the field is <code>PAYLOAD</code>\nComplex samples as magnitude and phase\nDo not repeat (1 time in total)\nBits 0:5 - Length of the AoA/AoD procedure in number of 8 …\nBits 0:5 - Length of the AoA/AoD procedure in number of 8 …\nAntenna switching/sampling is done in the packet payload\nBits 20:23 - Repeat each individual antenna pattern N …\nBits 20:23 - Repeat each individual antenna pattern N …\nBit 15 - Whether to sample I/Q or magnitude/phase\nBit 15 - Whether to sample I/Q or magnitude/phase\nBits 16:18 - Interval between samples in the SWITCHING …\nBits 16:18 - Interval between samples in the SWITCHING …\nBits 12:14 - Interval between samples in the REFERENCE …\nBits 12:14 - Interval between samples in the REFERENCE …\nBits 8:10 - Interval between every time the antenna is …\nBits 8:10 - Interval between every time the antenna is …\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nStart offset for Direction finding\nRegister <code>DFECTRL2</code> reader\nField <code>TSAMPLEOFFSET</code> reader - Signed value offset before …\nField <code>TSAMPLEOFFSET</code> writer - Signed value offset before …\nField <code>TSWITCHOFFSET</code> reader - Signed value offset after the …\nField <code>TSWITCHOFFSET</code> writer - Signed value offset after the …\nRegister <code>DFECTRL2</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 16:27 - Signed value offset before starting sampling …\nBits 16:27 - Signed value offset before starting sampling …\nBits 0:12 - Signed value offset after the end of the CRC …\nBits 0:12 - Signed value offset after the end of the CRC …\n3: Direction finding mode set to AoA\n2: Direction finding mode set to AoD\nWhether to use Angle-of-Arrival (AOA) or …\nDirection finding operation mode\nField <code>DFEOPMODE</code> reader - Direction finding operation mode\nField <code>DFEOPMODE</code> writer - Direction finding operation mode\n0: Direction finding mode disabled\nRegister <code>DFEMODE</code> reader\nRegister <code>DFEMODE</code> writer\nDirection finding mode set to AoA\nDirection finding mode set to AoD\nWrites raw bits to the register.\nBits 0:1 - Direction finding operation mode\nBits 0:1 - Direction finding operation mode\nDirection finding mode disabled\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>AO_A</code>\nChecks if the value of the field is <code>AO_D</code>\nChecks if the value of the field is <code>DISABLED</code>\nGet enumerated values variant\nAMOUNT (r) register accessor: an alias for <code>Reg&lt;AMOUNT_SPEC&gt;</code>\nRegister block\nMAXCNT (rw) register accessor: an alias for …\nPTR (rw) register accessor: an alias for <code>Reg&lt;PTR_SPEC&gt;</code>\nNumber of samples transferred in the last transaction\n0x08 - Number of samples transferred in the last …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMaximum number of buffer words to transfer\n0x04 - Maximum number of buffer words to transfer\nData pointer\n0x00 - Data pointer\nField <code>AMOUNT</code> reader - Number of samples transferred in the …\nNumber of samples transferred in the last transaction\nRegister <code>AMOUNT</code> reader\nBits 0:15 - Number of samples transferred in the last …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>MAXCNT</code> reader - Maximum number of buffer words to …\nMaximum number of buffer words to transfer\nField <code>MAXCNT</code> writer - Maximum number of buffer words to …\nRegister <code>MAXCNT</code> reader\nRegister <code>MAXCNT</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:13 - Maximum number of buffer words to transfer\nBits 0:13 - Maximum number of buffer words to transfer\nField <code>PTR</code> reader - Data pointer\nData pointer\nField <code>PTR</code> writer - Data pointer\nRegister <code>PTR</code> reader\nRegister <code>PTR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Data pointer\nBits 0:31 - Data pointer\nDFE status information\n5: Switching state Ending\n2: Switching state Guard\n0: Switching state Idle\n0: Sampling state Idle\n1: Switching state Offset\nRegister <code>DFESTATUS</code> reader\n3: Switching state Ref\n1: Sampling state Sampling\nInternal state of sampling state machine\nField <code>SAMPLINGSTATE</code> reader - Internal state of sampling …\n4: Switching state Switching\nInternal state of switching state machine\nField <code>SWITCHINGSTATE</code> reader - Internal state of switching …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>ENDING</code>\nChecks if the value of the field is <code>GUARD</code>\nChecks if the value of the field is <code>IDLE</code>\nChecks if the value of the field is <code>IDLE</code>\nChecks if the value of the field is <code>OFFSET</code>\nChecks if the value of the field is <code>REF</code>\nChecks if the value of the field is <code>SAMPLING</code>\nChecks if the value of the field is <code>SWITCHING</code>\nBit 4 - Internal state of sampling state machine\nBits 0:2 - Internal state of switching state machine\nGet enumerated values variant\nGet enumerated values variant\nField <code>EDCNT</code> reader - IEEE 802.15.4 energy detect loop count\nIEEE 802.15.4 energy detect loop count\nField <code>EDCNT</code> writer - IEEE 802.15.4 energy detect loop count\nRegister <code>EDCNT</code> reader\nRegister <code>EDCNT</code> writer\nWrites raw bits to the register.\nBits 0:20 - IEEE 802.15.4 energy detect loop count\nBits 0:20 - IEEE 802.15.4 energy detect loop count\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EDLVL</code> reader - IEEE 802.15.4 energy detect level\nIEEE 802.15.4 energy detect level\nRegister <code>EDSAMPLE</code> reader\nBits 0:7 - IEEE 802.15.4 energy detect level\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAddress sent or received\nField <code>EVENTS_ADDRESS</code> reader - Address sent or received\nAddress sent or received\nField <code>EVENTS_ADDRESS</code> writer - Address sent or received\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_ADDRESS</code> reader\nRegister <code>EVENTS_ADDRESS</code> writer\nWrites raw bits to the register.\nBit 0 - Address sent or received\nBit 0 - Address sent or received\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nBit counter reached bit count value\nField <code>EVENTS_BCMATCH</code> reader - Bit counter reached bit …\nBit counter reached bit count value\nField <code>EVENTS_BCMATCH</code> writer - Bit counter reached bit …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_BCMATCH</code> reader\nRegister <code>EVENTS_BCMATCH</code> writer\nWrites raw bits to the register.\nBit 0 - Bit counter reached bit count value\nBit 0 - Bit counter reached bit count value\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nWireless medium busy - do not send\nField <code>EVENTS_CCABUSY</code> reader - Wireless medium busy - do …\nWireless medium busy - do not send\nField <code>EVENTS_CCABUSY</code> writer - Wireless medium busy - do …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_CCABUSY</code> reader\nRegister <code>EVENTS_CCABUSY</code> writer\nWrites raw bits to the register.\nBit 0 - Wireless medium busy - do not send\nBit 0 - Wireless medium busy - do not send\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nWireless medium in idle - clear to send\nField <code>EVENTS_CCAIDLE</code> reader - Wireless medium in idle - …\nWireless medium in idle - clear to send\nField <code>EVENTS_CCAIDLE</code> writer - Wireless medium in idle - …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_CCAIDLE</code> reader\nRegister <code>EVENTS_CCAIDLE</code> writer\nWrites raw bits to the register.\nBit 0 - Wireless medium in idle - clear to send\nBit 0 - Wireless medium in idle - clear to send\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nThe CCA has stopped\nField <code>EVENTS_CCASTOPPED</code> reader - The CCA has stopped\nThe CCA has stopped\nField <code>EVENTS_CCASTOPPED</code> writer - The CCA has stopped\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_CCASTOPPED</code> reader\nRegister <code>EVENTS_CCASTOPPED</code> writer\nWrites raw bits to the register.\nBit 0 - The CCA has stopped\nBit 0 - The CCA has stopped\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nPacket received with CRC error\nField <code>EVENTS_CRCERROR</code> reader - Packet received with CRC …\nPacket received with CRC error\nField <code>EVENTS_CRCERROR</code> writer - Packet received with CRC …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_CRCERROR</code> reader\nRegister <code>EVENTS_CRCERROR</code> writer\nWrites raw bits to the register.\nBit 0 - Packet received with CRC error\nBit 0 - Packet received with CRC error\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nPacket received with CRC ok\nField <code>EVENTS_CRCOK</code> reader - Packet received with CRC ok\nPacket received with CRC ok\nField <code>EVENTS_CRCOK</code> writer - Packet received with CRC ok\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_CRCOK</code> reader\nRegister <code>EVENTS_CRCOK</code> writer\nWrites raw bits to the register.\nBit 0 - Packet received with CRC ok\nBit 0 - Packet received with CRC ok\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nCTE is present (early warning right after receiving …\nField <code>EVENTS_CTEPRESENT</code> reader - CTE is present (early …\nCTE is present (early warning right after receiving …\nField <code>EVENTS_CTEPRESENT</code> writer - CTE is present (early …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_CTEPRESENT</code> reader\nRegister <code>EVENTS_CTEPRESENT</code> writer\nWrites raw bits to the register.\nBit 0 - CTE is present (early warning right after …\nBit 0 - CTE is present (early warning right after …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nA device address match occurred on the last received packet\nField <code>EVENTS_DEVMATCH</code> reader - A device address match …\nA device address match occurred on the last received packet\nField <code>EVENTS_DEVMATCH</code> writer - A device address match …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_DEVMATCH</code> reader\nRegister <code>EVENTS_DEVMATCH</code> writer\nWrites raw bits to the register.\nBit 0 - A device address match occurred on the last …\nBit 0 - A device address match occurred on the last …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nNo device address match occurred on the last received …\nField <code>EVENTS_DEVMISS</code> reader - No device address match …\nNo device address match occurred on the last received …\nField <code>EVENTS_DEVMISS</code> writer - No device address match …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_DEVMISS</code> reader\nRegister <code>EVENTS_DEVMISS</code> writer\nWrites raw bits to the register.\nBit 0 - No device address match occurred on the last …\nBit 0 - No device address match occurred on the last …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nRADIO has been disabled\nField <code>EVENTS_DISABLED</code> reader - RADIO has been disabled\nRADIO has been disabled\nField <code>EVENTS_DISABLED</code> writer - RADIO has been disabled\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_DISABLED</code> reader\nRegister <code>EVENTS_DISABLED</code> writer\nWrites raw bits to the register.\nBit 0 - RADIO has been disabled\nBit 0 - RADIO has been disabled\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nSampling of energy detection complete. A new ED sample is …\nField <code>EVENTS_EDEND</code> reader - Sampling of energy detection …\nSampling of energy detection complete. A new ED sample is …\nField <code>EVENTS_EDEND</code> writer - Sampling of energy detection …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_EDEND</code> reader\nRegister <code>EVENTS_EDEND</code> writer\nWrites raw bits to the register.\nBit 0 - Sampling of energy detection complete. A new ED …\nBit 0 - Sampling of energy detection complete. A new ED …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nThe sampling of energy detection has stopped\nField <code>EVENTS_EDSTOPPED</code> reader - The sampling of energy …\nThe sampling of energy detection has stopped\nField <code>EVENTS_EDSTOPPED</code> writer - The sampling of energy …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_EDSTOPPED</code> reader\nRegister <code>EVENTS_EDSTOPPED</code> writer\nWrites raw bits to the register.\nBit 0 - The sampling of energy detection has stopped\nBit 0 - The sampling of energy detection has stopped\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nPacket sent or received\nField <code>EVENTS_END</code> reader - Packet sent or received\nPacket sent or received\nField <code>EVENTS_END</code> writer - Packet sent or received\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_END</code> reader\nRegister <code>EVENTS_END</code> writer\nWrites raw bits to the register.\nBit 0 - Packet sent or received\nBit 0 - Packet sent or received\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nIEEE 802.15.4 length field received\nField <code>EVENTS_FRAMESTART</code> reader - IEEE 802.15.4 length …\nIEEE 802.15.4 length field received\nField <code>EVENTS_FRAMESTART</code> writer - IEEE 802.15.4 length …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_FRAMESTART</code> reader\nRegister <code>EVENTS_FRAMESTART</code> writer\nWrites raw bits to the register.\nBit 0 - IEEE 802.15.4 length field received\nBit 0 - IEEE 802.15.4 length field received\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nMAC header match found\nField <code>EVENTS_MHRMATCH</code> reader - MAC header match found\nMAC header match found\nField <code>EVENTS_MHRMATCH</code> writer - MAC header match found\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_MHRMATCH</code> reader\nRegister <code>EVENTS_MHRMATCH</code> writer\nWrites raw bits to the register.\nBit 0 - MAC header match found\nBit 0 - MAC header match found\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nPacket payload sent or received\nField <code>EVENTS_PAYLOAD</code> reader - Packet payload sent or …\nPacket payload sent or received\nField <code>EVENTS_PAYLOAD</code> writer - Packet payload sent or …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_PAYLOAD</code> reader\nRegister <code>EVENTS_PAYLOAD</code> writer\nWrites raw bits to the register.\nBit 0 - Packet payload sent or received\nBit 0 - Packet payload sent or received\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nGenerated when last bit is sent on air, or received from …\nField <code>EVENTS_PHYEND</code> reader - Generated when last bit is …\nGenerated when last bit is sent on air, or received from …\nField <code>EVENTS_PHYEND</code> writer - Generated when last bit is …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_PHYEND</code> reader\nRegister <code>EVENTS_PHYEND</code> writer\nWrites raw bits to the register.\nBit 0 - Generated when last bit is sent on air, or …\nBit 0 - Generated when last bit is sent on air, or …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nBle_LR CI field received, receive mode is changed from …\nField <code>EVENTS_RATEBOOST</code> reader - Ble_LR CI field received, …\nBle_LR CI field received, receive mode is changed from …\nField <code>EVENTS_RATEBOOST</code> writer - Ble_LR CI field received, …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_RATEBOOST</code> reader\nRegister <code>EVENTS_RATEBOOST</code> writer\nWrites raw bits to the register.\nBit 0 - Ble_LR CI field received, receive mode is changed …\nBit 0 - Ble_LR CI field received, receive mode is changed …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nRADIO has ramped up and is ready to be started\nField <code>EVENTS_READY</code> reader - RADIO has ramped up and is …\nRADIO has ramped up and is ready to be started\nField <code>EVENTS_READY</code> writer - RADIO has ramped up and is …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_READY</code> reader\nRegister <code>EVENTS_READY</code> writer\nWrites raw bits to the register.\nBit 0 - RADIO has ramped up and is ready to be started\nBit 0 - RADIO has ramped up and is ready to be started\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nSampling of receive signal strength complete\nField <code>EVENTS_RSSIEND</code> reader - Sampling of receive signal …\nSampling of receive signal strength complete\nField <code>EVENTS_RSSIEND</code> writer - Sampling of receive signal …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_RSSIEND</code> reader\nRegister <code>EVENTS_RSSIEND</code> writer\nWrites raw bits to the register.\nBit 0 - Sampling of receive signal strength complete\nBit 0 - Sampling of receive signal strength complete\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nRADIO has ramped up and is ready to be started RX path\nField <code>EVENTS_RXREADY</code> reader - RADIO has ramped up and is …\nRADIO has ramped up and is ready to be started RX path\nField <code>EVENTS_RXREADY</code> writer - RADIO has ramped up and is …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_RXREADY</code> reader\nRegister <code>EVENTS_RXREADY</code> writer\nWrites raw bits to the register.\nBit 0 - RADIO has ramped up and is ready to be started RX …\nBit 0 - RADIO has ramped up and is ready to be started RX …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nPreamble indicator\nField <code>EVENTS_SYNC</code> reader - Preamble indicator\nPreamble indicator\nField <code>EVENTS_SYNC</code> writer - Preamble indicator\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_SYNC</code> reader\nRegister <code>EVENTS_SYNC</code> writer\nWrites raw bits to the register.\nBit 0 - Preamble indicator\nBit 0 - Preamble indicator\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nRADIO has ramped up and is ready to be started TX path\nField <code>EVENTS_TXREADY</code> reader - RADIO has ramped up and is …\nRADIO has ramped up and is ready to be started TX path\nField <code>EVENTS_TXREADY</code> writer - RADIO has ramped up and is …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_TXREADY</code> reader\nRegister <code>EVENTS_TXREADY</code> writer\nWrites raw bits to the register.\nBit 0 - RADIO has ramped up and is ready to be started TX …\nBit 0 - RADIO has ramped up and is ready to be started TX …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\n0: Channel map between 2400 MHZ .. 2500 MHz\nField <code>FREQUENCY</code> reader - Radio channel frequency\nFrequency\nField <code>FREQUENCY</code> writer - Radio channel frequency\n1: Channel map between 2360 MHZ .. 2460 MHz\nChannel map selection.\nField <code>MAP</code> reader - Channel map selection.\nField <code>MAP</code> writer - Channel map selection.\nRegister <code>FREQUENCY</code> reader\nRegister <code>FREQUENCY</code> writer\nWrites raw bits to the register.\nChannel map between 2400 MHZ .. 2500 MHz\nBits 0:6 - Radio channel frequency\nBits 0:6 - Radio channel frequency\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DEFAULT</code>\nChecks if the value of the field is <code>LOW</code>\nChannel map between 2360 MHZ .. 2460 MHz\nBit 8 - Channel map selection.\nBit 8 - Channel map selection.\nGet enumerated values variant\nWrite ‘1’ to disable interrupt for event ADDRESS\nWrite ‘1’ to disable interrupt for event ADDRESS\nField <code>ADDRESS</code> reader - Write ‘1’ to disable interrupt …\nField <code>ADDRESS</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event BCMATCH\nWrite ‘1’ to disable interrupt for event BCMATCH\nField <code>BCMATCH</code> reader - Write ‘1’ to disable interrupt …\nField <code>BCMATCH</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event CCABUSY\nWrite ‘1’ to disable interrupt for event CCABUSY\nField <code>CCABUSY</code> reader - Write ‘1’ to disable interrupt …\nField <code>CCABUSY</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event CCAIDLE\nWrite ‘1’ to disable interrupt for event CCAIDLE\nField <code>CCAIDLE</code> reader - Write ‘1’ to disable interrupt …\nField <code>CCAIDLE</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event CCASTOPPED\nWrite ‘1’ to disable interrupt for event CCASTOPPED\nField <code>CCASTOPPED</code> reader - Write ‘1’ to disable …\nField <code>CCASTOPPED</code> writer - Write ‘1’ to disable …\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\nWrite ‘1’ to disable interrupt for event CRCERROR\nWrite ‘1’ to disable interrupt for event CRCERROR\nField <code>CRCERROR</code> reader - Write ‘1’ to disable interrupt …\nField <code>CRCERROR</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event CRCOK\nWrite ‘1’ to disable interrupt for event CRCOK\nField <code>CRCOK</code> reader - Write ‘1’ to disable interrupt …\nField <code>CRCOK</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event CTEPRESENT\nWrite ‘1’ to disable interrupt for event CTEPRESENT\nField <code>CTEPRESENT</code> reader - Write ‘1’ to disable …\nField <code>CTEPRESENT</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event DEVMATCH\nWrite ‘1’ to disable interrupt for event DEVMATCH\nField <code>DEVMATCH</code> reader - Write ‘1’ to disable interrupt …\nField <code>DEVMATCH</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event DEVMISS\nWrite ‘1’ to disable interrupt for event DEVMISS\nField <code>DEVMISS</code> reader - Write ‘1’ to disable interrupt …\nField <code>DEVMISS</code> writer - Write ‘1’ to disable interrupt …\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\nWrite ‘1’ to disable interrupt for event DISABLED\nWrite ‘1’ to disable interrupt for event DISABLED\nField <code>DISABLED</code> reader - Write ‘1’ to disable interrupt …\nField <code>DISABLED</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event EDEND\nWrite ‘1’ to disable interrupt for event EDEND\nField <code>EDEND</code> reader - Write ‘1’ to disable interrupt …\nField <code>EDEND</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event EDSTOPPED\nWrite ‘1’ to disable interrupt for event EDSTOPPED\nField <code>EDSTOPPED</code> reader - Write ‘1’ to disable …\nField <code>EDSTOPPED</code> writer - Write ‘1’ to disable …\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\nWrite ‘1’ to disable interrupt for event END\nWrite ‘1’ to disable interrupt for event END\nField <code>END</code> reader - Write ‘1’ to disable interrupt for …\nField <code>END</code> writer - Write ‘1’ to disable interrupt for …\nWrite ‘1’ to disable interrupt for event FRAMESTART\nWrite ‘1’ to disable interrupt for event FRAMESTART\nField <code>FRAMESTART</code> reader - Write ‘1’ to disable …\nField <code>FRAMESTART</code> writer - Write ‘1’ to disable …\nDisable interrupt\nWrite ‘1’ to disable interrupt for event MHRMATCH\nWrite ‘1’ to disable interrupt for event MHRMATCH\nField <code>MHRMATCH</code> reader - Write ‘1’ to disable interrupt …\nField <code>MHRMATCH</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event PAYLOAD\nWrite ‘1’ to disable interrupt for event PAYLOAD\nField <code>PAYLOAD</code> reader - Write ‘1’ to disable interrupt …\nField <code>PAYLOAD</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event PHYEND\nWrite ‘1’ to disable interrupt for event PHYEND\nField <code>PHYEND</code> reader - Write ‘1’ to disable interrupt …\nField <code>PHYEND</code> writer - Write ‘1’ to disable interrupt …\nRegister <code>INTENCLR</code> reader\nWrite ‘1’ to disable interrupt for event RATEBOOST\nWrite ‘1’ to disable interrupt for event RATEBOOST\nField <code>RATEBOOST</code> reader - Write ‘1’ to disable …\nField <code>RATEBOOST</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event READY\nWrite ‘1’ to disable interrupt for event READY\nField <code>READY</code> reader - Write ‘1’ to disable interrupt …\nField <code>READY</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event RSSIEND\nWrite ‘1’ to disable interrupt for event RSSIEND\nField <code>RSSIEND</code> reader - Write ‘1’ to disable interrupt …\nField <code>RSSIEND</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event RXREADY\nWrite ‘1’ to disable interrupt for event RXREADY\nField <code>RXREADY</code> reader - Write ‘1’ to disable interrupt …\nField <code>RXREADY</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event SYNC\nWrite ‘1’ to disable interrupt for event SYNC\nField <code>SYNC</code> reader - Write ‘1’ to disable interrupt for …\nField <code>SYNC</code> writer - Write ‘1’ to disable interrupt for …\nWrite ‘1’ to disable interrupt for event TXREADY\nWrite ‘1’ to disable interrupt for event TXREADY\nField <code>TXREADY</code> reader - Write ‘1’ to disable interrupt …\nField <code>TXREADY</code> writer - Write ‘1’ to disable interrupt …\nRegister <code>INTENCLR</code> writer\nBit 1 - Write ‘1’ to disable interrupt for event …\nBit 1 - Write ‘1’ to disable interrupt for event …\nBit 10 - Write ‘1’ to disable interrupt for event …\nBit 10 - Write ‘1’ to disable interrupt for event …\nWrites raw bits to the register.\nBit 18 - Write ‘1’ to disable interrupt for event …\nBit 18 - Write ‘1’ to disable interrupt for event …\nBit 17 - Write ‘1’ to disable interrupt for event …\nBit 17 - Write ‘1’ to disable interrupt for event …\nBit 19 - Write ‘1’ to disable interrupt for event …\nBit 19 - Write ‘1’ to disable interrupt for event …\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nBit 13 - Write ‘1’ to disable interrupt for event …\nBit 13 - Write ‘1’ to disable interrupt for event …\nBit 12 - Write ‘1’ to disable interrupt for event CRCOK\nBit 12 - Write ‘1’ to disable interrupt for event CRCOK\nBit 28 - Write ‘1’ to disable interrupt for event …\nBit 28 - Write ‘1’ to disable interrupt for event …\nBit 5 - Write ‘1’ to disable interrupt for event …\nBit 5 - Write ‘1’ to disable interrupt for event …\nBit 6 - Write ‘1’ to disable interrupt for event …\nBit 6 - Write ‘1’ to disable interrupt for event …\nBit 4 - Write ‘1’ to disable interrupt for event …\nBit 4 - Write ‘1’ to disable interrupt for event …\nBit 15 - Write ‘1’ to disable interrupt for event EDEND\nBit 15 - Write ‘1’ to disable interrupt for event EDEND\nBit 16 - Write ‘1’ to disable interrupt for event …\nBit 16 - Write ‘1’ to disable interrupt for event …\nBit 3 - Write ‘1’ to disable interrupt for event END\nBit 3 - Write ‘1’ to disable interrupt for event END\nBit 14 - Write ‘1’ to disable interrupt for event …\nBit 14 - Write ‘1’ to disable interrupt for event …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 23 - Write ‘1’ to disable interrupt for event …\nBit 23 - Write ‘1’ to disable interrupt for event …\nBit 2 - Write ‘1’ to disable interrupt for event …\nBit 2 - Write ‘1’ to disable interrupt for event …\nBit 27 - Write ‘1’ to disable interrupt for event …\nBit 27 - Write ‘1’ to disable interrupt for event …\nBit 20 - Write ‘1’ to disable interrupt for event …\nBit 20 - Write ‘1’ to disable interrupt for event …\nBit 0 - Write ‘1’ to disable interrupt for event READY\nBit 0 - Write ‘1’ to disable interrupt for event READY\nBit 7 - Write ‘1’ to disable interrupt for event …\nBit 7 - Write ‘1’ to disable interrupt for event …\nBit 22 - Write ‘1’ to disable interrupt for event …\nBit 22 - Write ‘1’ to disable interrupt for event …\nBit 26 - Write ‘1’ to disable interrupt for event SYNC\nBit 26 - Write ‘1’ to disable interrupt for event SYNC\nBit 21 - Write ‘1’ to disable interrupt for event …\nBit 21 - Write ‘1’ to disable interrupt for event …\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nWrite ‘1’ to enable interrupt for event ADDRESS\nWrite ‘1’ to enable interrupt for event ADDRESS\nField <code>ADDRESS</code> reader - Write ‘1’ to enable interrupt …\nField <code>ADDRESS</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event BCMATCH\nWrite ‘1’ to enable interrupt for event BCMATCH\nField <code>BCMATCH</code> reader - Write ‘1’ to enable interrupt …\nField <code>BCMATCH</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event CCABUSY\nWrite ‘1’ to enable interrupt for event CCABUSY\nField <code>CCABUSY</code> reader - Write ‘1’ to enable interrupt …\nField <code>CCABUSY</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event CCAIDLE\nWrite ‘1’ to enable interrupt for event CCAIDLE\nField <code>CCAIDLE</code> reader - Write ‘1’ to enable interrupt …\nField <code>CCAIDLE</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event CCASTOPPED\nWrite ‘1’ to enable interrupt for event CCASTOPPED\nField <code>CCASTOPPED</code> reader - Write ‘1’ to enable …\nField <code>CCASTOPPED</code> writer - Write ‘1’ to enable …\nWrite ‘1’ to enable interrupt for event CRCERROR\nWrite ‘1’ to enable interrupt for event CRCERROR\nField <code>CRCERROR</code> reader - Write ‘1’ to enable interrupt …\nField <code>CRCERROR</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event CRCOK\nWrite ‘1’ to enable interrupt for event CRCOK\nField <code>CRCOK</code> reader - Write ‘1’ to enable interrupt for …\nField <code>CRCOK</code> writer - Write ‘1’ to enable interrupt for …\nWrite ‘1’ to enable interrupt for event CTEPRESENT\nWrite ‘1’ to enable interrupt for event CTEPRESENT\nField <code>CTEPRESENT</code> reader - Write ‘1’ to enable …\nField <code>CTEPRESENT</code> writer - Write ‘1’ to enable …\nWrite ‘1’ to enable interrupt for event DEVMATCH\nWrite ‘1’ to enable interrupt for event DEVMATCH\nField <code>DEVMATCH</code> reader - Write ‘1’ to enable interrupt …\nField <code>DEVMATCH</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event DEVMISS\nWrite ‘1’ to enable interrupt for event DEVMISS\nField <code>DEVMISS</code> reader - Write ‘1’ to enable interrupt …\nField <code>DEVMISS</code> writer - Write ‘1’ to enable interrupt …\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\nWrite ‘1’ to enable interrupt for event DISABLED\nWrite ‘1’ to enable interrupt for event DISABLED\nField <code>DISABLED</code> reader - Write ‘1’ to enable interrupt …\nField <code>DISABLED</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event EDEND\nWrite ‘1’ to enable interrupt for event EDEND\nField <code>EDEND</code> reader - Write ‘1’ to enable interrupt for …\nField <code>EDEND</code> writer - Write ‘1’ to enable interrupt for …\nWrite ‘1’ to enable interrupt for event EDSTOPPED\nWrite ‘1’ to enable interrupt for event EDSTOPPED\nField <code>EDSTOPPED</code> reader - Write ‘1’ to enable interrupt …\nField <code>EDSTOPPED</code> writer - Write ‘1’ to enable interrupt …\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\nWrite ‘1’ to enable interrupt for event END\nWrite ‘1’ to enable interrupt for event END\nField <code>END</code> reader - Write ‘1’ to enable interrupt for …\nField <code>END</code> writer - Write ‘1’ to enable interrupt for …\nWrite ‘1’ to enable interrupt for event FRAMESTART\nWrite ‘1’ to enable interrupt for event FRAMESTART\nField <code>FRAMESTART</code> reader - Write ‘1’ to enable …\nField <code>FRAMESTART</code> writer - Write ‘1’ to enable …\nEnable interrupt\nWrite ‘1’ to enable interrupt for event MHRMATCH\nWrite ‘1’ to enable interrupt for event MHRMATCH\nField <code>MHRMATCH</code> reader - Write ‘1’ to enable interrupt …\nField <code>MHRMATCH</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event PAYLOAD\nWrite ‘1’ to enable interrupt for event PAYLOAD\nField <code>PAYLOAD</code> reader - Write ‘1’ to enable interrupt …\nField <code>PAYLOAD</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event PHYEND\nWrite ‘1’ to enable interrupt for event PHYEND\nField <code>PHYEND</code> reader - Write ‘1’ to enable interrupt …\nField <code>PHYEND</code> writer - Write ‘1’ to enable interrupt …\nRegister <code>INTENSET</code> reader\nWrite ‘1’ to enable interrupt for event RATEBOOST\nWrite ‘1’ to enable interrupt for event RATEBOOST\nField <code>RATEBOOST</code> reader - Write ‘1’ to enable interrupt …\nField <code>RATEBOOST</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event READY\nWrite ‘1’ to enable interrupt for event READY\nField <code>READY</code> reader - Write ‘1’ to enable interrupt for …\nField <code>READY</code> writer - Write ‘1’ to enable interrupt for …\nWrite ‘1’ to enable interrupt for event RSSIEND\nWrite ‘1’ to enable interrupt for event RSSIEND\nField <code>RSSIEND</code> reader - Write ‘1’ to enable interrupt …\nField <code>RSSIEND</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event RXREADY\nWrite ‘1’ to enable interrupt for event RXREADY\nField <code>RXREADY</code> reader - Write ‘1’ to enable interrupt …\nField <code>RXREADY</code> writer - Write ‘1’ to enable interrupt …\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\nWrite ‘1’ to enable interrupt for event SYNC\nWrite ‘1’ to enable interrupt for event SYNC\nField <code>SYNC</code> reader - Write ‘1’ to enable interrupt for …\nField <code>SYNC</code> writer - Write ‘1’ to enable interrupt for …\nWrite ‘1’ to enable interrupt for event TXREADY\nWrite ‘1’ to enable interrupt for event TXREADY\nField <code>TXREADY</code> reader - Write ‘1’ to enable interrupt …\nField <code>TXREADY</code> writer - Write ‘1’ to enable interrupt …\nRegister <code>INTENSET</code> writer\nBit 1 - Write ‘1’ to enable interrupt for event ADDRESS\nBit 1 - Write ‘1’ to enable interrupt for event ADDRESS\nBit 10 - Write ‘1’ to enable interrupt for event …\nBit 10 - Write ‘1’ to enable interrupt for event …\nWrites raw bits to the register.\nBit 18 - Write ‘1’ to enable interrupt for event …\nBit 18 - Write ‘1’ to enable interrupt for event …\nBit 17 - Write ‘1’ to enable interrupt for event …\nBit 17 - Write ‘1’ to enable interrupt for event …\nBit 19 - Write ‘1’ to enable interrupt for event …\nBit 19 - Write ‘1’ to enable interrupt for event …\nBit 13 - Write ‘1’ to enable interrupt for event …\nBit 13 - Write ‘1’ to enable interrupt for event …\nBit 12 - Write ‘1’ to enable interrupt for event CRCOK\nBit 12 - Write ‘1’ to enable interrupt for event CRCOK\nBit 28 - Write ‘1’ to enable interrupt for event …\nBit 28 - Write ‘1’ to enable interrupt for event …\nBit 5 - Write ‘1’ to enable interrupt for event …\nBit 5 - Write ‘1’ to enable interrupt for event …\nBit 6 - Write ‘1’ to enable interrupt for event DEVMISS\nBit 6 - Write ‘1’ to enable interrupt for event DEVMISS\nBit 4 - Write ‘1’ to enable interrupt for event …\nBit 4 - Write ‘1’ to enable interrupt for event …\nBit 15 - Write ‘1’ to enable interrupt for event EDEND\nBit 15 - Write ‘1’ to enable interrupt for event EDEND\nBit 16 - Write ‘1’ to enable interrupt for event …\nBit 16 - Write ‘1’ to enable interrupt for event …\nBit 3 - Write ‘1’ to enable interrupt for event END\nBit 3 - Write ‘1’ to enable interrupt for event END\nBit 14 - Write ‘1’ to enable interrupt for event …\nBit 14 - Write ‘1’ to enable interrupt for event …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 23 - Write ‘1’ to enable interrupt for event …\nBit 23 - Write ‘1’ to enable interrupt for event …\nBit 2 - Write ‘1’ to enable interrupt for event PAYLOAD\nBit 2 - Write ‘1’ to enable interrupt for event PAYLOAD\nBit 27 - Write ‘1’ to enable interrupt for event PHYEND\nBit 27 - Write ‘1’ to enable interrupt for event PHYEND\nBit 20 - Write ‘1’ to enable interrupt for event …\nBit 20 - Write ‘1’ to enable interrupt for event …\nBit 0 - Write ‘1’ to enable interrupt for event READY\nBit 0 - Write ‘1’ to enable interrupt for event READY\nBit 7 - Write ‘1’ to enable interrupt for event RSSIEND\nBit 7 - Write ‘1’ to enable interrupt for event RSSIEND\nBit 22 - Write ‘1’ to enable interrupt for event …\nBit 22 - Write ‘1’ to enable interrupt for event …\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nBit 26 - Write ‘1’ to enable interrupt for event SYNC\nBit 26 - Write ‘1’ to enable interrupt for event SYNC\nBit 21 - Write ‘1’ to enable interrupt for event …\nBit 21 - Write ‘1’ to enable interrupt for event …\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nField <code>MHRMATCHCONF</code> reader - Search pattern configuration\nSearch pattern configuration\nField <code>MHRMATCHCONF</code> writer - Search pattern configuration\nRegister <code>MHRMATCHCONF</code> reader\nRegister <code>MHRMATCHCONF</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Search pattern configuration\nBits 0:31 - Search pattern configuration\nField <code>MHRMATCHMAS</code> reader - Pattern mask\nPattern mask\nField <code>MHRMATCHMAS</code> writer - Pattern mask\nRegister <code>MHRMATCHMAS</code> reader\nRegister <code>MHRMATCHMAS</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Pattern mask\nBits 0:31 - Pattern mask\n3: 1 Mbps BLE\n4: 2 Mbps BLE\n5: Long range 125 kbps TX, 125 kbps and 500 kbps RX\n6: Long range 500 kbps TX, 125 kbps and 500 kbps RX\n15: IEEE 802.15.4-2006 250 kbps\nRadio data rate and modulation setting. The radio supports …\nField <code>MODE</code> reader - Radio data rate and modulation …\nData rate and modulation\nField <code>MODE</code> writer - Radio data rate and modulation …\n0: 1 Mbps Nordic proprietary radio mode\n1: 2 Mbps Nordic proprietary radio mode\nRegister <code>MODE</code> reader\nRegister <code>MODE</code> writer\nWrites raw bits to the register.\n1 Mbps BLE\n2 Mbps BLE\nLong range 125 kbps TX, 125 kbps and 500 kbps RX\nLong range 500 kbps TX, 125 kbps and 500 kbps RX\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIEEE 802.15.4-2006 250 kbps\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>BLE_1MBIT</code>\nChecks if the value of the field is <code>BLE_2MBIT</code>\nChecks if the value of the field is <code>BLE_LR125KBIT</code>\nChecks if the value of the field is <code>BLE_LR500KBIT</code>\nChecks if the value of the field is <code>IEEE802154_250KBIT</code>\nChecks if the value of the field is <code>NRF_1MBIT</code>\nChecks if the value of the field is <code>NRF_2MBIT</code>\nBits 0:3 - Radio data rate and modulation setting. The …\nBits 0:3 - Radio data rate and modulation setting. The …\n1 Mbps Nordic proprietary radio mode\n2 Mbps Nordic proprietary radio mode\nGet enumerated values variant\n1: Transmit ‘0’\n0: Transmit ‘1’\n2: Transmit center frequency\n0: Default ramp-up time (tRXEN and tTXEN), compatible with …\nDefault TX value\nField <code>DTX</code> reader - Default TX value\nField <code>DTX</code> writer - Default TX value\n1: Fast ramp-up (tRXEN,FAST and tTXEN,FAST), see …\nRadio mode configuration register 0\nRegister <code>MODECNF0</code> reader\nRadio ramp-up time\nField <code>RU</code> reader - Radio ramp-up time\nField <code>RU</code> writer - Radio ramp-up time\nRegister <code>MODECNF0</code> writer\nTransmit ‘0’\nTransmit ‘1’\nWrites raw bits to the register.\nTransmit center frequency\nDefault ramp-up time (tRXEN and tTXEN), compatible with …\nBits 8:9 - Default TX value\nBits 8:9 - Default TX value\nFast ramp-up (tRXEN,FAST and tTXEN,FAST), see electrical …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>B0</code>\nChecks if the value of the field is <code>B1</code>\nChecks if the value of the field is <code>CENTER</code>\nChecks if the value of the field is <code>DEFAULT</code>\nChecks if the value of the field is <code>FAST</code>\nBit 0 - Radio ramp-up time\nBit 0 - Radio ramp-up time\nGet enumerated values variant\nGet enumerated values variant\nField <code>PACKETPTR</code> reader - Packet pointer\nPacket pointer\nField <code>PACKETPTR</code> writer - Packet pointer\nRegister <code>PACKETPTR</code> reader\nRegister <code>PACKETPTR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Packet pointer\nBits 0:31 - Packet pointer\n0: Include S1 field in RAM only if S1LEN &gt; 0\nField <code>CILEN</code> reader - Length of code indicator - long range\nField <code>CILEN</code> writer - Length of code indicator - long range\nIndicates if LENGTH field contains CRC or not\nField <code>CRCINC</code> reader - Indicates if LENGTH field contains …\nField <code>CRCINC</code> writer - Indicates if LENGTH field contains …\n0: LENGTH does not contain CRC\n1: Always include S1 field in RAM independent of S1LEN\n1: LENGTH includes CRC\nField <code>LFLEN</code> reader - Length on air of LENGTH field in …\nField <code>LFLEN</code> writer - Length on air of LENGTH field in …\n3: Preamble - used for BLE long range\nPacket configuration register 0\nLength of preamble on air. Decision point: TASKS_START task\nField <code>PLEN</code> reader - Length of preamble on air. Decision …\nField <code>PLEN</code> writer - Length of preamble on air. Decision …\nRegister <code>PCNF0</code> reader\nField <code>S0LEN</code> reader - Length on air of S0 field in number …\nField <code>S0LEN</code> writer - Length on air of S0 field in number …\nInclude or exclude S1 field in RAM\nField <code>S1INCL</code> reader - Include or exclude S1 field in RAM\nField <code>S1INCL</code> writer - Include or exclude S1 field in RAM\nField <code>S1LEN</code> reader - Length on air of S1 field in number …\nField <code>S1LEN</code> writer - Length on air of S1 field in number …\nField <code>TERMLEN</code> reader - Length of TERM field in Long Range …\nField <code>TERMLEN</code> writer - Length of TERM field in Long Range …\nRegister <code>PCNF0</code> writer\n1: 16-bit preamble\n16-bit preamble\n2: 32-bit zero preamble - used for IEEE 802.15.4\n32-bit zero preamble - used for IEEE 802.15.4\n0: 8-bit preamble\n8-bit preamble\nInclude S1 field in RAM only if S1LEN &gt; 0\nWrites raw bits to the register.\nBits 22:23 - Length of code indicator - long range\nBits 22:23 - Length of code indicator - long range\nBit 26 - Indicates if LENGTH field contains CRC or not\nBit 26 - Indicates if LENGTH field contains CRC or not\nLENGTH does not contain CRC\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAlways include S1 field in RAM independent of S1LEN\nLENGTH includes CRC\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>_16BIT</code>\nChecks if the value of the field is <code>_32BIT_ZERO</code>\nChecks if the value of the field is <code>_8BIT</code>\nChecks if the value of the field is <code>AUTOMATIC</code>\nChecks if the value of the field is <code>EXCLUDE</code>\nChecks if the value of the field is <code>INCLUDE</code>\nChecks if the value of the field is <code>INCLUDE</code>\nChecks if the value of the field is <code>LONG_RANGE</code>\nBits 0:3 - Length on air of LENGTH field in number of bits.\nBits 0:3 - Length on air of LENGTH field in number of bits.\nPreamble - used for BLE long range\nBits 24:25 - Length of preamble on air. Decision point: …\nBits 24:25 - Length of preamble on air. Decision point: …\nBit 8 - Length on air of S0 field in number of bytes.\nBit 8 - Length on air of S0 field in number of bytes.\nBit 20 - Include or exclude S1 field in RAM\nBit 20 - Include or exclude S1 field in RAM\nBits 16:19 - Length on air of S1 field in number of bits.\nBits 16:19 - Length on air of S1 field in number of bits.\nBits 29:30 - Length of TERM field in Long Range operation\nBits 29:30 - Length of TERM field in Long Range operation\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nField <code>BALEN</code> reader - Base address length in number of bytes\nField <code>BALEN</code> writer - Base address length in number of bytes\n1: Most significant bit on air first\n0: Disable\n1: Enable\nOn-air endianness of packet, this applies to the S0, …\nField <code>ENDIAN</code> reader - On-air endianness of packet, this …\nField <code>ENDIAN</code> writer - On-air endianness of packet, this …\n0: Least significant bit on air first\nField <code>MAXLEN</code> reader - Maximum length of packet payload. If …\nField <code>MAXLEN</code> writer - Maximum length of packet payload. If …\nPacket configuration register 1\nRegister <code>PCNF1</code> reader\nField <code>STATLEN</code> reader - Static length in number of bytes\nField <code>STATLEN</code> writer - Static length in number of bytes\nRegister <code>PCNF1</code> writer\nEnable or disable packet whitening\nField <code>WHITEEN</code> reader - Enable or disable packet whitening\nField <code>WHITEEN</code> writer - Enable or disable packet whitening\nBits 16:18 - Base address length in number of bytes\nBits 16:18 - Base address length in number of bytes\nMost significant bit on air first\nWrites raw bits to the register.\nDisable\nEnable\nBit 24 - On-air endianness of packet, this applies to the …\nBit 24 - On-air endianness of packet, this applies to the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>BIG</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>LITTLE</code>\nLeast significant bit on air first\nBits 0:7 - Maximum length of packet payload. If the packet …\nBits 0:7 - Maximum length of packet payload. If the packet …\nBits 8:15 - Static length in number of bytes\nBits 8:15 - Static length in number of bytes\nGet enumerated values variant\nGet enumerated values variant\nBit 25 - Enable or disable packet whitening\nBit 25 - Enable or disable packet whitening\nStatus on what rate packet is received with in Long Range\nField <code>CISTAT</code> reader - Status on what rate packet is …\n1: Payload greater than PCNF1.MAXLEN\n0: Payload less than PCNF1.MAXLEN\n0: Frame is received at 125 kbps\n1: Frame is received at 500 kbps\nStatus on payload length vs. PCNF1.MAXLEN\nField <code>PDUSTAT</code> reader - Status on payload length vs. …\nPayload status\nRegister <code>PDUSTAT</code> reader\nBits 1:2 - Status on what rate packet is received with in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GREATER_THAN</code>\nChecks if the value of the field is <code>LESS_THAN</code>\nChecks if the value of the field is <code>LR125KBIT</code>\nChecks if the value of the field is <code>LR500KBIT</code>\nBit 0 - Status on payload length vs. PCNF1.MAXLEN\nGet enumerated values variant\nGet enumerated values variant\n0: Peripheral is powered off\n1: Peripheral is powered on\nPeripheral power control. The peripheral and its registers …\nField <code>POWER</code> reader - Peripheral power control. The …\nPeripheral power control\nField <code>POWER</code> writer - Peripheral power control. The …\nRegister <code>POWER</code> reader\nRegister <code>POWER</code> writer\nWrites raw bits to the register.\nPeripheral is powered off\nPeripheral is powered on\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 0 - Peripheral power control. The peripheral and its …\nBit 0 - Peripheral power control. The peripheral and its …\nGet enumerated values variant\nField <code>AP0</code> reader - Address prefix 0.\nField <code>AP0</code> writer - Address prefix 0.\nField <code>AP1</code> reader - Address prefix 1.\nField <code>AP1</code> writer - Address prefix 1.\nField <code>AP2</code> reader - Address prefix 2.\nField <code>AP2</code> writer - Address prefix 2.\nField <code>AP3</code> reader - Address prefix 3.\nField <code>AP3</code> writer - Address prefix 3.\nPrefixes bytes for logical addresses 0-3\nRegister <code>PREFIX0</code> reader\nRegister <code>PREFIX0</code> writer\nBits 0:7 - Address prefix 0.\nBits 0:7 - Address prefix 0.\nBits 8:15 - Address prefix 1.\nBits 8:15 - Address prefix 1.\nBits 16:23 - Address prefix 2.\nBits 16:23 - Address prefix 2.\nBits 24:31 - Address prefix 3.\nBits 24:31 - Address prefix 3.\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>AP4</code> reader - Address prefix 4.\nField <code>AP4</code> writer - Address prefix 4.\nField <code>AP5</code> reader - Address prefix 5.\nField <code>AP5</code> writer - Address prefix 5.\nField <code>AP6</code> reader - Address prefix 6.\nField <code>AP6</code> writer - Address prefix 6.\nField <code>AP7</code> reader - Address prefix 7.\nField <code>AP7</code> writer - Address prefix 7.\nPrefixes bytes for logical addresses 4-7\nRegister <code>PREFIX1</code> reader\nRegister <code>PREFIX1</code> writer\nBits 0:7 - Address prefix 4.\nBits 0:7 - Address prefix 4.\nBits 8:15 - Address prefix 5.\nBits 8:15 - Address prefix 5.\nBits 16:23 - Address prefix 6.\nBits 16:23 - Address prefix 6.\nBits 24:31 - Address prefix 7.\nBits 24:31 - Address prefix 7.\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDFEGPIO (rw) register accessor: an alias for …\nRegister block\nDescription collection: Pin select for DFE pin n\n0x00..0x20 - Description collection: Pin select for DFE …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n0: Connect\nConnection\nField <code>CONNECT</code> reader - Connection\nField <code>CONNECT</code> writer - Connection\nDescription collection: Pin select for DFE pin n\n1: Disconnect\nField <code>PIN</code> reader - Pin number\nField <code>PIN</code> writer - Pin number\nField <code>PORT</code> reader - Port number\nField <code>PORT</code> writer - Port number\nRegister <code>DFEGPIO[%s]</code> reader\nRegister <code>DFEGPIO[%s]</code> writer\nWrites raw bits to the register.\nBit 31 - Connection\nBit 31 - Connection\nConnect\nDisconnect\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>CONNECTED</code>\nChecks if the value of the field is <code>DISCONNECTED</code>\nBits 0:4 - Pin number\nBits 0:4 - Pin number\nBit 5 - Port number\nBit 5 - Port number\nGet enumerated values variant\nRegister <code>RSSISAMPLE</code> reader\nField <code>RSSISAMPLE</code> reader - RSSI sample\nRSSI sample\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:6 - RSSI sample\nEnable or disable reception on logical address 0.\nField <code>ADDR0</code> reader - Enable or disable reception on …\nField <code>ADDR0</code> writer - Enable or disable reception on …\nEnable or disable reception on logical address 1.\nField <code>ADDR1</code> reader - Enable or disable reception on …\nField <code>ADDR1</code> writer - Enable or disable reception on …\nEnable or disable reception on logical address 2.\nField <code>ADDR2</code> reader - Enable or disable reception on …\nField <code>ADDR2</code> writer - Enable or disable reception on …\nEnable or disable reception on logical address 3.\nField <code>ADDR3</code> reader - Enable or disable reception on …\nField <code>ADDR3</code> writer - Enable or disable reception on …\nEnable or disable reception on logical address 4.\nField <code>ADDR4</code> reader - Enable or disable reception on …\nField <code>ADDR4</code> writer - Enable or disable reception on …\nEnable or disable reception on logical address 5.\nField <code>ADDR5</code> reader - Enable or disable reception on …\nField <code>ADDR5</code> writer - Enable or disable reception on …\nEnable or disable reception on logical address 6.\nField <code>ADDR6</code> reader - Enable or disable reception on …\nField <code>ADDR6</code> writer - Enable or disable reception on …\nEnable or disable reception on logical address 7.\nField <code>ADDR7</code> reader - Enable or disable reception on …\nField <code>ADDR7</code> writer - Enable or disable reception on …\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\nRegister <code>RXADDRESSES</code> reader\nReceive address select\nRegister <code>RXADDRESSES</code> writer\nBit 0 - Enable or disable reception on logical address 0.\nBit 0 - Enable or disable reception on logical address 0.\nBit 1 - Enable or disable reception on logical address 1.\nBit 1 - Enable or disable reception on logical address 1.\nBit 2 - Enable or disable reception on logical address 2.\nBit 2 - Enable or disable reception on logical address 2.\nBit 3 - Enable or disable reception on logical address 3.\nBit 3 - Enable or disable reception on logical address 3.\nBit 4 - Enable or disable reception on logical address 4.\nBit 4 - Enable or disable reception on logical address 4.\nBit 5 - Enable or disable reception on logical address 5.\nBit 5 - Enable or disable reception on logical address 5.\nBit 6 - Enable or disable reception on logical address 6.\nBit 6 - Enable or disable reception on logical address 6.\nBit 7 - Enable or disable reception on logical address 7.\nBit 7 - Enable or disable reception on logical address 7.\nWrites raw bits to the register.\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nRegister <code>RXCRC</code> reader\nField <code>RXCRC</code> reader - CRC field of previously received …\nCRC field of previously received packet\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:23 - CRC field of previously received packet\nRegister <code>RXMATCH</code> reader\nField <code>RXMATCH</code> reader - Received address\nReceived address\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:2 - Received address\nRegister <code>SFD</code> reader\nField <code>SFD</code> reader - IEEE 802.15.4 start of frame delimiter\nIEEE 802.15.4 start of frame delimiter\nField <code>SFD</code> writer - IEEE 802.15.4 start of frame delimiter\nRegister <code>SFD</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:7 - IEEE 802.15.4 start of frame delimiter\nBits 0:7 - IEEE 802.15.4 start of frame delimiter\nShortcut between event ADDRESS and task BCSTART\nField <code>ADDRESS_BCSTART</code> reader - Shortcut between event …\nField <code>ADDRESS_BCSTART</code> writer - Shortcut between event …\nShortcut between event ADDRESS and task RSSISTART\nField <code>ADDRESS_RSSISTART</code> reader - Shortcut between event …\nField <code>ADDRESS_RSSISTART</code> writer - Shortcut between event …\nShortcut between event CCABUSY and task DISABLE\nField <code>CCABUSY_DISABLE</code> reader - Shortcut between event …\nField <code>CCABUSY_DISABLE</code> writer - Shortcut between event …\nShortcut between event CCAIDLE and task STOP\nField <code>CCAIDLE_STOP</code> reader - Shortcut between event CCAIDLE …\nField <code>CCAIDLE_STOP</code> writer - Shortcut between event CCAIDLE …\nShortcut between event CCAIDLE and task TXEN\nField <code>CCAIDLE_TXEN</code> reader - Shortcut between event CCAIDLE …\nField <code>CCAIDLE_TXEN</code> writer - Shortcut between event CCAIDLE …\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\nShortcut between event DISABLED and task RSSISTOP\nField <code>DISABLED_RSSISTOP</code> reader - Shortcut between event …\nField <code>DISABLED_RSSISTOP</code> writer - Shortcut between event …\nShortcut between event DISABLED and task RXEN\nField <code>DISABLED_RXEN</code> reader - Shortcut between event …\nField <code>DISABLED_RXEN</code> writer - Shortcut between event …\nShortcut between event DISABLED and task TXEN\nField <code>DISABLED_TXEN</code> reader - Shortcut between event …\nField <code>DISABLED_TXEN</code> writer - Shortcut between event …\nShortcut between event EDEND and task DISABLE\nField <code>EDEND_DISABLE</code> reader - Shortcut between event EDEND …\nField <code>EDEND_DISABLE</code> writer - Shortcut between event EDEND …\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\nShortcut between event END and task DISABLE\nField <code>END_DISABLE</code> reader - Shortcut between event END and …\nField <code>END_DISABLE</code> writer - Shortcut between event END and …\nShortcut between event END and task START\nField <code>END_START</code> reader - Shortcut between event END and …\nField <code>END_START</code> writer - Shortcut between event END and …\nShortcut between event FRAMESTART and task BCSTART\nField <code>FRAMESTART_BCSTART</code> reader - Shortcut between event …\nField <code>FRAMESTART_BCSTART</code> writer - Shortcut between event …\nShortcut between event PHYEND and task DISABLE\nField <code>PHYEND_DISABLE</code> reader - Shortcut between event …\nField <code>PHYEND_DISABLE</code> writer - Shortcut between event …\nShortcut between event PHYEND and task START\nField <code>PHYEND_START</code> reader - Shortcut between event PHYEND …\nField <code>PHYEND_START</code> writer - Shortcut between event PHYEND …\nRegister <code>SHORTS</code> reader\nShortcut between event READY and task EDSTART\nField <code>READY_EDSTART</code> reader - Shortcut between event READY …\nField <code>READY_EDSTART</code> writer - Shortcut between event READY …\nShortcut between event READY and task START\nField <code>READY_START</code> reader - Shortcut between event READY …\nField <code>READY_START</code> writer - Shortcut between event READY …\nShortcut between event RXREADY and task CCASTART\nField <code>RXREADY_CCASTART</code> reader - Shortcut between event …\nField <code>RXREADY_CCASTART</code> writer - Shortcut between event …\nShortcut between event RXREADY and task START\nField <code>RXREADY_START</code> reader - Shortcut between event …\nField <code>RXREADY_START</code> writer - Shortcut between event …\nShortcuts between local events and tasks\nShortcut between event TXREADY and task START\nField <code>TXREADY_START</code> reader - Shortcut between event …\nField <code>TXREADY_START</code> writer - Shortcut between event …\nRegister <code>SHORTS</code> writer\nBit 6 - Shortcut between event ADDRESS and task BCSTART\nBit 6 - Shortcut between event ADDRESS and task BCSTART\nBit 4 - Shortcut between event ADDRESS and task RSSISTART\nBit 4 - Shortcut between event ADDRESS and task RSSISTART\nWrites raw bits to the register.\nBit 13 - Shortcut between event CCABUSY and task DISABLE\nBit 13 - Shortcut between event CCABUSY and task DISABLE\nBit 17 - Shortcut between event CCAIDLE and task STOP\nBit 17 - Shortcut between event CCAIDLE and task STOP\nBit 12 - Shortcut between event CCAIDLE and task TXEN\nBit 12 - Shortcut between event CCAIDLE and task TXEN\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nBit 8 - Shortcut between event DISABLED and task RSSISTOP\nBit 8 - Shortcut between event DISABLED and task RSSISTOP\nBit 3 - Shortcut between event DISABLED and task RXEN\nBit 3 - Shortcut between event DISABLED and task RXEN\nBit 2 - Shortcut between event DISABLED and task TXEN\nBit 2 - Shortcut between event DISABLED and task TXEN\nBit 16 - Shortcut between event EDEND and task DISABLE\nBit 16 - Shortcut between event EDEND and task DISABLE\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nBit 1 - Shortcut between event END and task DISABLE\nBit 1 - Shortcut between event END and task DISABLE\nBit 5 - Shortcut between event END and task START\nBit 5 - Shortcut between event END and task START\nBit 14 - Shortcut between event FRAMESTART and task BCSTART\nBit 14 - Shortcut between event FRAMESTART and task BCSTART\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 20 - Shortcut between event PHYEND and task DISABLE\nBit 20 - Shortcut between event PHYEND and task DISABLE\nBit 21 - Shortcut between event PHYEND and task START\nBit 21 - Shortcut between event PHYEND and task START\nBit 15 - Shortcut between event READY and task EDSTART\nBit 15 - Shortcut between event READY and task EDSTART\nBit 0 - Shortcut between event READY and task START\nBit 0 - Shortcut between event READY and task START\nBit 11 - Shortcut between event RXREADY and task CCASTART\nBit 11 - Shortcut between event RXREADY and task CCASTART\nBit 19 - Shortcut between event RXREADY and task START\nBit 19 - Shortcut between event RXREADY and task START\nBit 18 - Shortcut between event TXREADY and task START\nBit 18 - Shortcut between event TXREADY and task START\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\n0: RADIO is in the Disabled state\nRegister <code>STATE</code> reader\n3: RADIO is in the RX state\n4: RADIO is in the RXDISABLED state\n2: RADIO is in the RXIDLE state\n1: RADIO is in the RXRU state\nCurrent radio state\nField <code>STATE</code> reader - Current radio state\nCurrent radio state\n11: RADIO is in the TX state\n12: RADIO is in the TXDISABLED state\n10: RADIO is in the TXIDLE state\n9: RADIO is in the TXRU state\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>RX</code>\nChecks if the value of the field is <code>RX_DISABLE</code>\nChecks if the value of the field is <code>RX_IDLE</code>\nChecks if the value of the field is <code>RX_RU</code>\nChecks if the value of the field is <code>TX</code>\nChecks if the value of the field is <code>TX_DISABLE</code>\nChecks if the value of the field is <code>TX_IDLE</code>\nChecks if the value of the field is <code>TX_RU</code>\nBits 0:3 - Current radio state\nGet enumerated values variant\nRegister <code>SWITCHPATTERN</code> reader\nField <code>SWITCHPATTERN</code> reader - Fill array of GPIO patterns …\nGPIO patterns to be used for each antenna\nField <code>SWITCHPATTERN</code> writer - Fill array of GPIO patterns …\nRegister <code>SWITCHPATTERN</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:7 - Fill array of GPIO patterns for antenna control\nBits 0:7 - Fill array of GPIO patterns for antenna control\nStart the bit counter\nStart the bit counter\nField <code>TASKS_BCSTART</code> writer - Start the bit counter\n1: Trigger task\nRegister <code>TASKS_BCSTART</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Start the bit counter\nTrigger task\nStop the bit counter\nStop the bit counter\nField <code>TASKS_BCSTOP</code> writer - Stop the bit counter\n1: Trigger task\nRegister <code>TASKS_BCSTOP</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Stop the bit counter\nTrigger task\nStart the clear channel assessment used in IEEE 802.15.4 …\nStart the clear channel assessment used in IEEE 802.15.4 …\nField <code>TASKS_CCASTART</code> writer - Start the clear channel …\n1: Trigger task\nRegister <code>TASKS_CCASTART</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Start the clear channel assessment used in IEEE …\nTrigger task\nStop the clear channel assessment\nStop the clear channel assessment\nField <code>TASKS_CCASTOP</code> writer - Stop the clear channel …\n1: Trigger task\nRegister <code>TASKS_CCASTOP</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Stop the clear channel assessment\nTrigger task\nDisable RADIO\nDisable RADIO\nField <code>TASKS_DISABLE</code> writer - Disable RADIO\n1: Trigger task\nRegister <code>TASKS_DISABLE</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Disable RADIO\nTrigger task\nStart the energy detect measurement used in IEEE 802.15.4 …\nStart the energy detect measurement used in IEEE 802.15.4 …\nField <code>TASKS_EDSTART</code> writer - Start the energy detect …\n1: Trigger task\nRegister <code>TASKS_EDSTART</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Start the energy detect measurement used in IEEE …\nTrigger task\nStop the energy detect measurement\nStop the energy detect measurement\nField <code>TASKS_EDSTOP</code> writer - Stop the energy detect …\n1: Trigger task\nRegister <code>TASKS_EDSTOP</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Stop the energy detect measurement\nTrigger task\nStart the RSSI and take one single sample of the receive …\nStart the RSSI and take one single sample of the receive …\nField <code>TASKS_RSSISTART</code> writer - Start the RSSI and take one …\n1: Trigger task\nRegister <code>TASKS_RSSISTART</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Start the RSSI and take one single sample of the …\nTrigger task\nStop the RSSI measurement\nStop the RSSI measurement\nField <code>TASKS_RSSISTOP</code> writer - Stop the RSSI measurement\n1: Trigger task\nRegister <code>TASKS_RSSISTOP</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Stop the RSSI measurement\nTrigger task\nEnable RADIO in RX mode\nEnable RADIO in RX mode\nField <code>TASKS_RXEN</code> writer - Enable RADIO in RX mode\n1: Trigger task\nRegister <code>TASKS_RXEN</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Enable RADIO in RX mode\nTrigger task\nStart RADIO\nStart RADIO\nField <code>TASKS_START</code> writer - Start RADIO\n1: Trigger task\nRegister <code>TASKS_START</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Start RADIO\nTrigger task\nStop RADIO\nStop RADIO\nField <code>TASKS_STOP</code> writer - Stop RADIO\n1: Trigger task\nRegister <code>TASKS_STOP</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Stop RADIO\nTrigger task\nEnable RADIO in TX mode\nEnable RADIO in TX mode\nField <code>TASKS_TXEN</code> writer - Enable RADIO in TX mode\n1: Trigger task\nRegister <code>TASKS_TXEN</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Enable RADIO in TX mode\nTrigger task\nRegister <code>TIFS</code> reader\nField <code>TIFS</code> reader - Interframe spacing in us\nInterframe spacing in us\nField <code>TIFS</code> writer - Interframe spacing in us\nRegister <code>TIFS</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:9 - Interframe spacing in us\nBits 0:9 - Interframe spacing in us\nRegister <code>TXADDRESS</code> reader\nField <code>TXADDRESS</code> reader - Transmit address select\nTransmit address select\nField <code>TXADDRESS</code> writer - Transmit address select\nRegister <code>TXADDRESS</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:2 - Transmit address select\nBits 0:2 - Transmit address select\n244: -12 dBm\n240: -16 dBm\n236: -20 dBm\n226: Deprecated enumerator - -40 dBm\n216: -40 dBm\n252: -4 dBm\n248: -8 dBm\n2: +2 dBm\n3: +3 dBm\n4: +4 dBm\n5: +5 dBm\n6: +6 dBm\n7: +7 dBm\n8: +8 dBm\nRegister <code>TXPOWER</code> reader\nRADIO output power\nField <code>TXPOWER</code> reader - RADIO output power\nOutput power\nField <code>TXPOWER</code> writer - RADIO output power\nRegister <code>TXPOWER</code> writer\n0: 0 dBm\n0 dBm\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>_0D_BM</code>\nChecks if the value of the field is <code>NEG12D_BM</code>\nChecks if the value of the field is <code>NEG16D_BM</code>\nChecks if the value of the field is <code>NEG20D_BM</code>\nChecks if the value of the field is <code>NEG30D_BM</code>\nChecks if the value of the field is <code>NEG40D_BM</code>\nChecks if the value of the field is <code>NEG4D_BM</code>\nChecks if the value of the field is <code>NEG8D_BM</code>")