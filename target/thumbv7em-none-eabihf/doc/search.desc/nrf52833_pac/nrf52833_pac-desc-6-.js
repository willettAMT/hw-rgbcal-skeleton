searchState.loadedDescShard("nrf52833_pac", 6, "Get enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nChannel 0 enable set register. Writing ‘0’ has no …\nChannel 0 enable set register. Writing ‘0’ has no …\nField <code>CH0</code> reader - Channel 0 enable set register. Writing …\nField <code>CH0</code> writer - Channel 0 enable set register. Writing …\nChannel 10 enable set register. Writing ‘0’ has no …\nChannel 10 enable set register. Writing ‘0’ has no …\nField <code>CH10</code> reader - Channel 10 enable set register. …\nField <code>CH10</code> writer - Channel 10 enable set register. …\nChannel 11 enable set register. Writing ‘0’ has no …\nChannel 11 enable set register. Writing ‘0’ has no …\nField <code>CH11</code> reader - Channel 11 enable set register. …\nField <code>CH11</code> writer - Channel 11 enable set register. …\nChannel 12 enable set register. Writing ‘0’ has no …\nChannel 12 enable set register. Writing ‘0’ has no …\nField <code>CH12</code> reader - Channel 12 enable set register. …\nField <code>CH12</code> writer - Channel 12 enable set register. …\nChannel 13 enable set register. Writing ‘0’ has no …\nChannel 13 enable set register. Writing ‘0’ has no …\nField <code>CH13</code> reader - Channel 13 enable set register. …\nField <code>CH13</code> writer - Channel 13 enable set register. …\nChannel 14 enable set register. Writing ‘0’ has no …\nChannel 14 enable set register. Writing ‘0’ has no …\nField <code>CH14</code> reader - Channel 14 enable set register. …\nField <code>CH14</code> writer - Channel 14 enable set register. …\nChannel 15 enable set register. Writing ‘0’ has no …\nChannel 15 enable set register. Writing ‘0’ has no …\nField <code>CH15</code> reader - Channel 15 enable set register. …\nField <code>CH15</code> writer - Channel 15 enable set register. …\nChannel 16 enable set register. Writing ‘0’ has no …\nChannel 16 enable set register. Writing ‘0’ has no …\nField <code>CH16</code> reader - Channel 16 enable set register. …\nField <code>CH16</code> writer - Channel 16 enable set register. …\nChannel 17 enable set register. Writing ‘0’ has no …\nChannel 17 enable set register. Writing ‘0’ has no …\nField <code>CH17</code> reader - Channel 17 enable set register. …\nField <code>CH17</code> writer - Channel 17 enable set register. …\nChannel 18 enable set register. Writing ‘0’ has no …\nChannel 18 enable set register. Writing ‘0’ has no …\nField <code>CH18</code> reader - Channel 18 enable set register. …\nField <code>CH18</code> writer - Channel 18 enable set register. …\nChannel 19 enable set register. Writing ‘0’ has no …\nChannel 19 enable set register. Writing ‘0’ has no …\nField <code>CH19</code> reader - Channel 19 enable set register. …\nField <code>CH19</code> writer - Channel 19 enable set register. …\nChannel 1 enable set register. Writing ‘0’ has no …\nChannel 1 enable set register. Writing ‘0’ has no …\nField <code>CH1</code> reader - Channel 1 enable set register. Writing …\nField <code>CH1</code> writer - Channel 1 enable set register. Writing …\nChannel 20 enable set register. Writing ‘0’ has no …\nChannel 20 enable set register. Writing ‘0’ has no …\nField <code>CH20</code> reader - Channel 20 enable set register. …\nField <code>CH20</code> writer - Channel 20 enable set register. …\nChannel 21 enable set register. Writing ‘0’ has no …\nChannel 21 enable set register. Writing ‘0’ has no …\nField <code>CH21</code> reader - Channel 21 enable set register. …\nField <code>CH21</code> writer - Channel 21 enable set register. …\nChannel 22 enable set register. Writing ‘0’ has no …\nChannel 22 enable set register. Writing ‘0’ has no …\nField <code>CH22</code> reader - Channel 22 enable set register. …\nField <code>CH22</code> writer - Channel 22 enable set register. …\nChannel 23 enable set register. Writing ‘0’ has no …\nChannel 23 enable set register. Writing ‘0’ has no …\nField <code>CH23</code> reader - Channel 23 enable set register. …\nField <code>CH23</code> writer - Channel 23 enable set register. …\nChannel 24 enable set register. Writing ‘0’ has no …\nChannel 24 enable set register. Writing ‘0’ has no …\nField <code>CH24</code> reader - Channel 24 enable set register. …\nField <code>CH24</code> writer - Channel 24 enable set register. …\nChannel 25 enable set register. Writing ‘0’ has no …\nChannel 25 enable set register. Writing ‘0’ has no …\nField <code>CH25</code> reader - Channel 25 enable set register. …\nField <code>CH25</code> writer - Channel 25 enable set register. …\nChannel 26 enable set register. Writing ‘0’ has no …\nChannel 26 enable set register. Writing ‘0’ has no …\nField <code>CH26</code> reader - Channel 26 enable set register. …\nField <code>CH26</code> writer - Channel 26 enable set register. …\nChannel 27 enable set register. Writing ‘0’ has no …\nChannel 27 enable set register. Writing ‘0’ has no …\nField <code>CH27</code> reader - Channel 27 enable set register. …\nField <code>CH27</code> writer - Channel 27 enable set register. …\nChannel 28 enable set register. Writing ‘0’ has no …\nChannel 28 enable set register. Writing ‘0’ has no …\nField <code>CH28</code> reader - Channel 28 enable set register. …\nField <code>CH28</code> writer - Channel 28 enable set register. …\nChannel 29 enable set register. Writing ‘0’ has no …\nChannel 29 enable set register. Writing ‘0’ has no …\nField <code>CH29</code> reader - Channel 29 enable set register. …\nField <code>CH29</code> writer - Channel 29 enable set register. …\nChannel 2 enable set register. Writing ‘0’ has no …\nChannel 2 enable set register. Writing ‘0’ has no …\nField <code>CH2</code> reader - Channel 2 enable set register. Writing …\nField <code>CH2</code> writer - Channel 2 enable set register. Writing …\nChannel 30 enable set register. Writing ‘0’ has no …\nChannel 30 enable set register. Writing ‘0’ has no …\nField <code>CH30</code> reader - Channel 30 enable set register. …\nField <code>CH30</code> writer - Channel 30 enable set register. …\nChannel 31 enable set register. Writing ‘0’ has no …\nChannel 31 enable set register. Writing ‘0’ has no …\nField <code>CH31</code> reader - Channel 31 enable set register. …\nField <code>CH31</code> writer - Channel 31 enable set register. …\nChannel 3 enable set register. Writing ‘0’ has no …\nChannel 3 enable set register. Writing ‘0’ has no …\nField <code>CH3</code> reader - Channel 3 enable set register. Writing …\nField <code>CH3</code> writer - Channel 3 enable set register. Writing …\nChannel 4 enable set register. Writing ‘0’ has no …\nChannel 4 enable set register. Writing ‘0’ has no …\nField <code>CH4</code> reader - Channel 4 enable set register. Writing …\nField <code>CH4</code> writer - Channel 4 enable set register. Writing …\nChannel 5 enable set register. Writing ‘0’ has no …\nChannel 5 enable set register. Writing ‘0’ has no …\nField <code>CH5</code> reader - Channel 5 enable set register. Writing …\nField <code>CH5</code> writer - Channel 5 enable set register. Writing …\nChannel 6 enable set register. Writing ‘0’ has no …\nChannel 6 enable set register. Writing ‘0’ has no …\nField <code>CH6</code> reader - Channel 6 enable set register. Writing …\nField <code>CH6</code> writer - Channel 6 enable set register. Writing …\nChannel 7 enable set register. Writing ‘0’ has no …\nChannel 7 enable set register. Writing ‘0’ has no …\nField <code>CH7</code> reader - Channel 7 enable set register. Writing …\nField <code>CH7</code> writer - Channel 7 enable set register. Writing …\nChannel 8 enable set register. Writing ‘0’ has no …\nChannel 8 enable set register. Writing ‘0’ has no …\nField <code>CH8</code> reader - Channel 8 enable set register. Writing …\nField <code>CH8</code> writer - Channel 8 enable set register. Writing …\nChannel 9 enable set register. Writing ‘0’ has no …\nChannel 9 enable set register. Writing ‘0’ has no …\nField <code>CH9</code> reader - Channel 9 enable set register. Writing …\nField <code>CH9</code> writer - Channel 9 enable set register. Writing …\nChannel enable set register\n0: Read: channel disabled\n0: Read: channel disabled\n0: Read: channel disabled\n0: Read: channel disabled\n0: Read: channel disabled\n0: Read: channel disabled\n0: Read: channel disabled\n0: Read: channel disabled\n0: Read: channel disabled\n0: Read: channel disabled\n0: Read: channel disabled\n0: Read: channel disabled\n0: Read: channel disabled\n0: Read: channel disabled\n0: Read: channel disabled\n0: Read: channel disabled\n0: Read: channel disabled\n0: Read: channel disabled\n0: Read: channel disabled\n0: Read: channel disabled\n0: Read: channel disabled\n0: Read: channel disabled\n0: Read: channel disabled\n0: Read: channel disabled\n0: Read: channel disabled\n0: Read: channel disabled\n0: Read: channel disabled\n0: Read: channel disabled\n0: Read: channel disabled\n0: Read: channel disabled\n0: Read: channel disabled\n0: Read: channel disabled\n1: Read: channel enabled\n1: Read: channel enabled\n1: Read: channel enabled\n1: Read: channel enabled\n1: Read: channel enabled\n1: Read: channel enabled\n1: Read: channel enabled\n1: Read: channel enabled\n1: Read: channel enabled\n1: Read: channel enabled\n1: Read: channel enabled\n1: Read: channel enabled\n1: Read: channel enabled\n1: Read: channel enabled\n1: Read: channel enabled\n1: Read: channel enabled\n1: Read: channel enabled\n1: Read: channel enabled\n1: Read: channel enabled\n1: Read: channel enabled\n1: Read: channel enabled\n1: Read: channel enabled\n1: Read: channel enabled\n1: Read: channel enabled\n1: Read: channel enabled\n1: Read: channel enabled\n1: Read: channel enabled\n1: Read: channel enabled\n1: Read: channel enabled\n1: Read: channel enabled\n1: Read: channel enabled\n1: Read: channel enabled\nRegister <code>CHENSET</code> reader\n1: Write: Enable channel\n1: Write: Enable channel\n1: Write: Enable channel\n1: Write: Enable channel\n1: Write: Enable channel\n1: Write: Enable channel\n1: Write: Enable channel\n1: Write: Enable channel\n1: Write: Enable channel\n1: Write: Enable channel\n1: Write: Enable channel\n1: Write: Enable channel\n1: Write: Enable channel\n1: Write: Enable channel\n1: Write: Enable channel\n1: Write: Enable channel\n1: Write: Enable channel\n1: Write: Enable channel\n1: Write: Enable channel\n1: Write: Enable channel\n1: Write: Enable channel\n1: Write: Enable channel\n1: Write: Enable channel\n1: Write: Enable channel\n1: Write: Enable channel\n1: Write: Enable channel\n1: Write: Enable channel\n1: Write: Enable channel\n1: Write: Enable channel\n1: Write: Enable channel\n1: Write: Enable channel\n1: Write: Enable channel\nRegister <code>CHENSET</code> writer\nWrites raw bits to the register.\nBit 0 - Channel 0 enable set register. Writing ‘0’ has …\nBit 0 - Channel 0 enable set register. Writing ‘0’ has …\nBit 1 - Channel 1 enable set register. Writing ‘0’ has …\nBit 1 - Channel 1 enable set register. Writing ‘0’ has …\nBit 10 - Channel 10 enable set register. Writing ‘0’ …\nBit 10 - Channel 10 enable set register. Writing ‘0’ …\nBit 11 - Channel 11 enable set register. Writing ‘0’ …\nBit 11 - Channel 11 enable set register. Writing ‘0’ …\nBit 12 - Channel 12 enable set register. Writing ‘0’ …\nBit 12 - Channel 12 enable set register. Writing ‘0’ …\nBit 13 - Channel 13 enable set register. Writing ‘0’ …\nBit 13 - Channel 13 enable set register. Writing ‘0’ …\nBit 14 - Channel 14 enable set register. Writing ‘0’ …\nBit 14 - Channel 14 enable set register. Writing ‘0’ …\nBit 15 - Channel 15 enable set register. Writing ‘0’ …\nBit 15 - Channel 15 enable set register. Writing ‘0’ …\nBit 16 - Channel 16 enable set register. Writing ‘0’ …\nBit 16 - Channel 16 enable set register. Writing ‘0’ …\nBit 17 - Channel 17 enable set register. Writing ‘0’ …\nBit 17 - Channel 17 enable set register. Writing ‘0’ …\nBit 18 - Channel 18 enable set register. Writing ‘0’ …\nBit 18 - Channel 18 enable set register. Writing ‘0’ …\nBit 19 - Channel 19 enable set register. Writing ‘0’ …\nBit 19 - Channel 19 enable set register. Writing ‘0’ …\nBit 2 - Channel 2 enable set register. Writing ‘0’ has …\nBit 2 - Channel 2 enable set register. Writing ‘0’ has …\nBit 20 - Channel 20 enable set register. Writing ‘0’ …\nBit 20 - Channel 20 enable set register. Writing ‘0’ …\nBit 21 - Channel 21 enable set register. Writing ‘0’ …\nBit 21 - Channel 21 enable set register. Writing ‘0’ …\nBit 22 - Channel 22 enable set register. Writing ‘0’ …\nBit 22 - Channel 22 enable set register. Writing ‘0’ …\nBit 23 - Channel 23 enable set register. Writing ‘0’ …\nBit 23 - Channel 23 enable set register. Writing ‘0’ …\nBit 24 - Channel 24 enable set register. Writing ‘0’ …\nBit 24 - Channel 24 enable set register. Writing ‘0’ …\nBit 25 - Channel 25 enable set register. Writing ‘0’ …\nBit 25 - Channel 25 enable set register. Writing ‘0’ …\nBit 26 - Channel 26 enable set register. Writing ‘0’ …\nBit 26 - Channel 26 enable set register. Writing ‘0’ …\nBit 27 - Channel 27 enable set register. Writing ‘0’ …\nBit 27 - Channel 27 enable set register. Writing ‘0’ …\nBit 28 - Channel 28 enable set register. Writing ‘0’ …\nBit 28 - Channel 28 enable set register. Writing ‘0’ …\nBit 29 - Channel 29 enable set register. Writing ‘0’ …\nBit 29 - Channel 29 enable set register. Writing ‘0’ …\nBit 3 - Channel 3 enable set register. Writing ‘0’ has …\nBit 3 - Channel 3 enable set register. Writing ‘0’ has …\nBit 30 - Channel 30 enable set register. Writing ‘0’ …\nBit 30 - Channel 30 enable set register. Writing ‘0’ …\nBit 31 - Channel 31 enable set register. Writing ‘0’ …\nBit 31 - Channel 31 enable set register. Writing ‘0’ …\nBit 4 - Channel 4 enable set register. Writing ‘0’ has …\nBit 4 - Channel 4 enable set register. Writing ‘0’ has …\nBit 5 - Channel 5 enable set register. Writing ‘0’ has …\nBit 5 - Channel 5 enable set register. Writing ‘0’ has …\nBit 6 - Channel 6 enable set register. Writing ‘0’ has …\nBit 6 - Channel 6 enable set register. Writing ‘0’ has …\nBit 7 - Channel 7 enable set register. Writing ‘0’ has …\nBit 7 - Channel 7 enable set register. Writing ‘0’ has …\nBit 8 - Channel 8 enable set register. Writing ‘0’ has …\nBit 8 - Channel 8 enable set register. Writing ‘0’ has …\nBit 9 - Channel 9 enable set register. Writing ‘0’ has …\nBit 9 - Channel 9 enable set register. Writing ‘0’ has …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nWrite: Enable channel\nWrite: Enable channel\nWrite: Enable channel\nWrite: Enable channel\nWrite: Enable channel\nWrite: Enable channel\nWrite: Enable channel\nWrite: Enable channel\nWrite: Enable channel\nWrite: Enable channel\nWrite: Enable channel\nWrite: Enable channel\nWrite: Enable channel\nWrite: Enable channel\nWrite: Enable channel\nWrite: Enable channel\nWrite: Enable channel\nWrite: Enable channel\nWrite: Enable channel\nWrite: Enable channel\nWrite: Enable channel\nWrite: Enable channel\nWrite: Enable channel\nWrite: Enable channel\nWrite: Enable channel\nWrite: Enable channel\nWrite: Enable channel\nWrite: Enable channel\nWrite: Enable channel\nWrite: Enable channel\nWrite: Enable channel\nWrite: Enable channel\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nInclude or exclude channel 0\nField <code>CH0</code> reader - Include or exclude channel 0\nField <code>CH0</code> writer - Include or exclude channel 0\nInclude or exclude channel 10\nField <code>CH10</code> reader - Include or exclude channel 10\nField <code>CH10</code> writer - Include or exclude channel 10\nInclude or exclude channel 11\nField <code>CH11</code> reader - Include or exclude channel 11\nField <code>CH11</code> writer - Include or exclude channel 11\nInclude or exclude channel 12\nField <code>CH12</code> reader - Include or exclude channel 12\nField <code>CH12</code> writer - Include or exclude channel 12\nInclude or exclude channel 13\nField <code>CH13</code> reader - Include or exclude channel 13\nField <code>CH13</code> writer - Include or exclude channel 13\nInclude or exclude channel 14\nField <code>CH14</code> reader - Include or exclude channel 14\nField <code>CH14</code> writer - Include or exclude channel 14\nInclude or exclude channel 15\nField <code>CH15</code> reader - Include or exclude channel 15\nField <code>CH15</code> writer - Include or exclude channel 15\nInclude or exclude channel 16\nField <code>CH16</code> reader - Include or exclude channel 16\nField <code>CH16</code> writer - Include or exclude channel 16\nInclude or exclude channel 17\nField <code>CH17</code> reader - Include or exclude channel 17\nField <code>CH17</code> writer - Include or exclude channel 17\nInclude or exclude channel 18\nField <code>CH18</code> reader - Include or exclude channel 18\nField <code>CH18</code> writer - Include or exclude channel 18\nInclude or exclude channel 19\nField <code>CH19</code> reader - Include or exclude channel 19\nField <code>CH19</code> writer - Include or exclude channel 19\nInclude or exclude channel 1\nField <code>CH1</code> reader - Include or exclude channel 1\nField <code>CH1</code> writer - Include or exclude channel 1\nInclude or exclude channel 20\nField <code>CH20</code> reader - Include or exclude channel 20\nField <code>CH20</code> writer - Include or exclude channel 20\nInclude or exclude channel 21\nField <code>CH21</code> reader - Include or exclude channel 21\nField <code>CH21</code> writer - Include or exclude channel 21\nInclude or exclude channel 22\nField <code>CH22</code> reader - Include or exclude channel 22\nField <code>CH22</code> writer - Include or exclude channel 22\nInclude or exclude channel 23\nField <code>CH23</code> reader - Include or exclude channel 23\nField <code>CH23</code> writer - Include or exclude channel 23\nInclude or exclude channel 24\nField <code>CH24</code> reader - Include or exclude channel 24\nField <code>CH24</code> writer - Include or exclude channel 24\nInclude or exclude channel 25\nField <code>CH25</code> reader - Include or exclude channel 25\nField <code>CH25</code> writer - Include or exclude channel 25\nInclude or exclude channel 26\nField <code>CH26</code> reader - Include or exclude channel 26\nField <code>CH26</code> writer - Include or exclude channel 26\nInclude or exclude channel 27\nField <code>CH27</code> reader - Include or exclude channel 27\nField <code>CH27</code> writer - Include or exclude channel 27\nInclude or exclude channel 28\nField <code>CH28</code> reader - Include or exclude channel 28\nField <code>CH28</code> writer - Include or exclude channel 28\nInclude or exclude channel 29\nField <code>CH29</code> reader - Include or exclude channel 29\nField <code>CH29</code> writer - Include or exclude channel 29\nInclude or exclude channel 2\nField <code>CH2</code> reader - Include or exclude channel 2\nField <code>CH2</code> writer - Include or exclude channel 2\nInclude or exclude channel 30\nField <code>CH30</code> reader - Include or exclude channel 30\nField <code>CH30</code> writer - Include or exclude channel 30\nInclude or exclude channel 31\nField <code>CH31</code> reader - Include or exclude channel 31\nField <code>CH31</code> writer - Include or exclude channel 31\nInclude or exclude channel 3\nField <code>CH3</code> reader - Include or exclude channel 3\nField <code>CH3</code> writer - Include or exclude channel 3\nInclude or exclude channel 4\nField <code>CH4</code> reader - Include or exclude channel 4\nField <code>CH4</code> writer - Include or exclude channel 4\nInclude or exclude channel 5\nField <code>CH5</code> reader - Include or exclude channel 5\nField <code>CH5</code> writer - Include or exclude channel 5\nInclude or exclude channel 6\nField <code>CH6</code> reader - Include or exclude channel 6\nField <code>CH6</code> writer - Include or exclude channel 6\nInclude or exclude channel 7\nField <code>CH7</code> reader - Include or exclude channel 7\nField <code>CH7</code> writer - Include or exclude channel 7\nInclude or exclude channel 8\nField <code>CH8</code> reader - Include or exclude channel 8\nField <code>CH8</code> writer - Include or exclude channel 8\nInclude or exclude channel 9\nField <code>CH9</code> reader - Include or exclude channel 9\nField <code>CH9</code> writer - Include or exclude channel 9\nDescription collection: Channel group n\n0: Exclude\n0: Exclude\n0: Exclude\n0: Exclude\n0: Exclude\n0: Exclude\n0: Exclude\n0: Exclude\n0: Exclude\n0: Exclude\n0: Exclude\n0: Exclude\n0: Exclude\n0: Exclude\n0: Exclude\n0: Exclude\n0: Exclude\n0: Exclude\n0: Exclude\n0: Exclude\n0: Exclude\n0: Exclude\n0: Exclude\n0: Exclude\n0: Exclude\n0: Exclude\n0: Exclude\n0: Exclude\n0: Exclude\n0: Exclude\n0: Exclude\n0: Exclude\n1: Include\n1: Include\n1: Include\n1: Include\n1: Include\n1: Include\n1: Include\n1: Include\n1: Include\n1: Include\n1: Include\n1: Include\n1: Include\n1: Include\n1: Include\n1: Include\n1: Include\n1: Include\n1: Include\n1: Include\n1: Include\n1: Include\n1: Include\n1: Include\n1: Include\n1: Include\n1: Include\n1: Include\n1: Include\n1: Include\n1: Include\n1: Include\nRegister <code>CHG[%s]</code> reader\nRegister <code>CHG[%s]</code> writer\nWrites raw bits to the register.\nBit 0 - Include or exclude channel 0\nBit 0 - Include or exclude channel 0\nBit 1 - Include or exclude channel 1\nBit 1 - Include or exclude channel 1\nBit 10 - Include or exclude channel 10\nBit 10 - Include or exclude channel 10\nBit 11 - Include or exclude channel 11\nBit 11 - Include or exclude channel 11\nBit 12 - Include or exclude channel 12\nBit 12 - Include or exclude channel 12\nBit 13 - Include or exclude channel 13\nBit 13 - Include or exclude channel 13\nBit 14 - Include or exclude channel 14\nBit 14 - Include or exclude channel 14\nBit 15 - Include or exclude channel 15\nBit 15 - Include or exclude channel 15\nBit 16 - Include or exclude channel 16\nBit 16 - Include or exclude channel 16\nBit 17 - Include or exclude channel 17\nBit 17 - Include or exclude channel 17\nBit 18 - Include or exclude channel 18\nBit 18 - Include or exclude channel 18\nBit 19 - Include or exclude channel 19\nBit 19 - Include or exclude channel 19\nBit 2 - Include or exclude channel 2\nBit 2 - Include or exclude channel 2\nBit 20 - Include or exclude channel 20\nBit 20 - Include or exclude channel 20\nBit 21 - Include or exclude channel 21\nBit 21 - Include or exclude channel 21\nBit 22 - Include or exclude channel 22\nBit 22 - Include or exclude channel 22\nBit 23 - Include or exclude channel 23\nBit 23 - Include or exclude channel 23\nBit 24 - Include or exclude channel 24\nBit 24 - Include or exclude channel 24\nBit 25 - Include or exclude channel 25\nBit 25 - Include or exclude channel 25\nBit 26 - Include or exclude channel 26\nBit 26 - Include or exclude channel 26\nBit 27 - Include or exclude channel 27\nBit 27 - Include or exclude channel 27\nBit 28 - Include or exclude channel 28\nBit 28 - Include or exclude channel 28\nBit 29 - Include or exclude channel 29\nBit 29 - Include or exclude channel 29\nBit 3 - Include or exclude channel 3\nBit 3 - Include or exclude channel 3\nBit 30 - Include or exclude channel 30\nBit 30 - Include or exclude channel 30\nBit 31 - Include or exclude channel 31\nBit 31 - Include or exclude channel 31\nBit 4 - Include or exclude channel 4\nBit 4 - Include or exclude channel 4\nBit 5 - Include or exclude channel 5\nBit 5 - Include or exclude channel 5\nBit 6 - Include or exclude channel 6\nBit 6 - Include or exclude channel 6\nBit 7 - Include or exclude channel 7\nBit 7 - Include or exclude channel 7\nBit 8 - Include or exclude channel 8\nBit 8 - Include or exclude channel 8\nBit 9 - Include or exclude channel 9\nBit 9 - Include or exclude channel 9\nExclude\nExclude\nExclude\nExclude\nExclude\nExclude\nExclude\nExclude\nExclude\nExclude\nExclude\nExclude\nExclude\nExclude\nExclude\nExclude\nExclude\nExclude\nExclude\nExclude\nExclude\nExclude\nExclude\nExclude\nExclude\nExclude\nExclude\nExclude\nExclude\nExclude\nExclude\nExclude\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInclude\nInclude\nInclude\nInclude\nInclude\nInclude\nInclude\nInclude\nInclude\nInclude\nInclude\nInclude\nInclude\nInclude\nInclude\nInclude\nInclude\nInclude\nInclude\nInclude\nInclude\nInclude\nInclude\nInclude\nInclude\nInclude\nInclude\nInclude\nInclude\nInclude\nInclude\nInclude\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>EXCLUDED</code>\nChecks if the value of the field is <code>EXCLUDED</code>\nChecks if the value of the field is <code>EXCLUDED</code>\nChecks if the value of the field is <code>EXCLUDED</code>\nChecks if the value of the field is <code>EXCLUDED</code>\nChecks if the value of the field is <code>EXCLUDED</code>\nChecks if the value of the field is <code>EXCLUDED</code>\nChecks if the value of the field is <code>EXCLUDED</code>\nChecks if the value of the field is <code>EXCLUDED</code>\nChecks if the value of the field is <code>EXCLUDED</code>\nChecks if the value of the field is <code>EXCLUDED</code>\nChecks if the value of the field is <code>EXCLUDED</code>\nChecks if the value of the field is <code>EXCLUDED</code>\nChecks if the value of the field is <code>EXCLUDED</code>\nChecks if the value of the field is <code>EXCLUDED</code>\nChecks if the value of the field is <code>EXCLUDED</code>\nChecks if the value of the field is <code>EXCLUDED</code>\nChecks if the value of the field is <code>EXCLUDED</code>\nChecks if the value of the field is <code>EXCLUDED</code>\nChecks if the value of the field is <code>EXCLUDED</code>\nChecks if the value of the field is <code>EXCLUDED</code>\nChecks if the value of the field is <code>EXCLUDED</code>\nChecks if the value of the field is <code>EXCLUDED</code>\nChecks if the value of the field is <code>EXCLUDED</code>\nChecks if the value of the field is <code>EXCLUDED</code>\nChecks if the value of the field is <code>EXCLUDED</code>\nChecks if the value of the field is <code>EXCLUDED</code>\nChecks if the value of the field is <code>EXCLUDED</code>\nChecks if the value of the field is <code>EXCLUDED</code>\nChecks if the value of the field is <code>EXCLUDED</code>\nChecks if the value of the field is <code>EXCLUDED</code>\nChecks if the value of the field is <code>EXCLUDED</code>\nChecks if the value of the field is <code>INCLUDED</code>\nChecks if the value of the field is <code>INCLUDED</code>\nChecks if the value of the field is <code>INCLUDED</code>\nChecks if the value of the field is <code>INCLUDED</code>\nChecks if the value of the field is <code>INCLUDED</code>\nChecks if the value of the field is <code>INCLUDED</code>\nChecks if the value of the field is <code>INCLUDED</code>\nChecks if the value of the field is <code>INCLUDED</code>\nChecks if the value of the field is <code>INCLUDED</code>\nChecks if the value of the field is <code>INCLUDED</code>\nChecks if the value of the field is <code>INCLUDED</code>\nChecks if the value of the field is <code>INCLUDED</code>\nChecks if the value of the field is <code>INCLUDED</code>\nChecks if the value of the field is <code>INCLUDED</code>\nChecks if the value of the field is <code>INCLUDED</code>\nChecks if the value of the field is <code>INCLUDED</code>\nChecks if the value of the field is <code>INCLUDED</code>\nChecks if the value of the field is <code>INCLUDED</code>\nChecks if the value of the field is <code>INCLUDED</code>\nChecks if the value of the field is <code>INCLUDED</code>\nChecks if the value of the field is <code>INCLUDED</code>\nChecks if the value of the field is <code>INCLUDED</code>\nChecks if the value of the field is <code>INCLUDED</code>\nChecks if the value of the field is <code>INCLUDED</code>\nChecks if the value of the field is <code>INCLUDED</code>\nChecks if the value of the field is <code>INCLUDED</code>\nChecks if the value of the field is <code>INCLUDED</code>\nChecks if the value of the field is <code>INCLUDED</code>\nChecks if the value of the field is <code>INCLUDED</code>\nChecks if the value of the field is <code>INCLUDED</code>\nChecks if the value of the field is <code>INCLUDED</code>\nChecks if the value of the field is <code>INCLUDED</code>\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nRegister block\nTEP (rw) register accessor: an alias for <code>Reg&lt;TEP_SPEC&gt;</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDescription cluster: Channel n task end-point\n0x00 - Description cluster: Channel n task end-point\nRegister <code>TEP</code> reader\nField <code>TEP</code> reader - Pointer to task register\nDescription cluster: Channel n task end-point\nField <code>TEP</code> writer - Pointer to task register\nRegister <code>TEP</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Pointer to task register\nBits 0:31 - Pointer to task register\nDIS (w) register accessor: an alias for <code>Reg&lt;DIS_SPEC&gt;</code>\nEN (w) register accessor: an alias for <code>Reg&lt;EN_SPEC&gt;</code>\nRegister block\nDescription cluster: Disable channel group n\n0x04 - Description cluster: Disable channel group n\nDescription cluster: Enable channel group n\n0x00 - Description cluster: Enable channel group n\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDisable channel group n\nDescription cluster: Disable channel group n\nField <code>DIS</code> writer - Disable channel group n\n1: Trigger task\nRegister <code>DIS</code> writer\nWrites raw bits to the register.\nBit 0 - Disable channel group n\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrigger task\nEnable channel group n\nDescription cluster: Enable channel group n\nField <code>EN</code> writer - Enable channel group n\n1: Trigger task\nRegister <code>EN</code> writer\nWrites raw bits to the register.\nBit 0 - Enable channel group n\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrigger task\nCOUNTERTOP (rw) register accessor: an alias for …\nDECODER (rw) register accessor: an alias for …\nENABLE (rw) register accessor: an alias for …\nEVENTS_LOOPSDONE (rw) register accessor: an alias for …\nEVENTS_PWMPERIODEND (rw) register accessor: an alias for …\nEVENTS_SEQEND (rw) register accessor: an alias for …\nEVENTS_SEQSTARTED (rw) register accessor: an alias for …\nEVENTS_STOPPED (rw) register accessor: an alias for …\nINTEN (rw) register accessor: an alias for <code>Reg&lt;INTEN_SPEC&gt;</code>\nINTENCLR (rw) register accessor: an alias for …\nINTENSET (rw) register accessor: an alias for …\nLOOP (rw) register accessor: an alias for <code>Reg&lt;LOOP_SPEC&gt;</code>\nMODE (rw) register accessor: an alias for <code>Reg&lt;MODE_SPEC&gt;</code>\nPRESCALER (rw) register accessor: an alias for …\nUnspecified\nRegister block\nUnspecified\nSHORTS (rw) register accessor: an alias for …\nTASKS_NEXTSTEP (w) register accessor: an alias for …\nTASKS_SEQSTART (w) register accessor: an alias for …\nTASKS_STOP (w) register accessor: an alias for …\nValue up to which the pulse generator counter counts\n0x508 - Value up to which the pulse generator counter …\nConfiguration of the decoder\n0x510 - Configuration of the decoder\nPWM module enable register\n0x500 - PWM module enable register\nConcatenated sequences have been played the amount of …\n0x11c - Concatenated sequences have been played the amount …\nEmitted at the end of each PWM period\n0x118 - Emitted at the end of each PWM period\nDescription collection: Emitted at end of every sequence …\n0x110..0x118 - Description collection: Emitted at end of …\nDescription collection: First PWM period started on …\n0x108..0x110 - Description collection: First PWM period …\nResponse to STOP task, emitted when PWM pulses are no …\n0x104 - Response to STOP task, emitted when PWM pulses are …\nReturns the argument unchanged.\nEnable or disable interrupt\n0x300 - Enable or disable interrupt\nDisable interrupt\n0x308 - Disable interrupt\nEnable interrupt\n0x304 - Enable interrupt\nCalls <code>U::from(self)</code>.\nNumber of playbacks of a loop\n0x514 - Number of playbacks of a loop\nSelects operating mode of the wave counter\n0x504 - Selects operating mode of the wave counter\nConfiguration for PWM_CLK\n0x50c - Configuration for PWM_CLK\nCluster Unspecified\n0x560..0x570 - Unspecified\nCluster Unspecified\n0x520..0x530 - Unspecified\n0x540..0x550 - Unspecified\nShortcuts between local events and tasks\n0x200 - Shortcuts between local events and tasks\nSteps by one value in the current sequence on all enabled …\n0x10 - Steps by one value in the current sequence on all …\nDescription collection: Loads the first PWM value on all …\n0x08..0x10 - Description collection: Loads the first PWM …\nStops PWM pulse generation on all channels at the end of …\n0x04 - Stops PWM pulse generation on all channels at the …\nField <code>COUNTERTOP</code> reader - Value up to which the pulse …\nValue up to which the pulse generator counter counts\nField <code>COUNTERTOP</code> writer - Value up to which the pulse …\nRegister <code>COUNTERTOP</code> reader\nRegister <code>COUNTERTOP</code> writer\nWrites raw bits to the register.\nBits 0:14 - Value up to which the pulse generator counter …\nBits 0:14 - Value up to which the pulse generator counter …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n0: 1st half word (16-bit) used in all PWM channels 0..3\nConfiguration of the decoder\n1: 1st half word (16-bit) used in channel 0..1; 2nd word …\n2: 1st half word (16-bit) in ch.0; 2nd in ch.1; …; 4th …\nHow a sequence is read from RAM and spread to the compare …\nField <code>LOAD</code> reader - How a sequence is read from RAM and …\nField <code>LOAD</code> writer - How a sequence is read from RAM and …\nSelects source for advancing the active sequence\nField <code>MODE</code> reader - Selects source for advancing the …\nField <code>MODE</code> writer - Selects source for advancing the …\n1: NEXTSTEP task causes a new value to be loaded to …\nRegister <code>DECODER</code> reader\n0: SEQ[n].REFRESH is used to determine loading internal …\nRegister <code>DECODER</code> writer\n3: 1st half word (16-bit) in ch.0; 2nd in ch.1; …; 4th …\nWrites raw bits to the register.\n1st half word (16-bit) used in all PWM channels 0..3\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\n1st half word (16-bit) used in channel 0..1; 2nd word in …\n1st half word (16-bit) in ch.0; 2nd in ch.1; …; 4th in …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>COMMON</code>\nChecks if the value of the field is <code>GROUPED</code>\nChecks if the value of the field is <code>INDIVIDUAL</code>\nChecks if the value of the field is <code>NEXT_STEP</code>\nChecks if the value of the field is <code>REFRESH_COUNT</code>\nChecks if the value of the field is <code>WAVE_FORM</code>\nBits 0:1 - How a sequence is read from RAM and spread to …\nBits 0:1 - How a sequence is read from RAM and spread to …\nBit 8 - Selects source for advancing the active sequence\nBit 8 - Selects source for advancing the active sequence\nNEXTSTEP task causes a new value to be loaded to internal …\nSEQ[n].REFRESH is used to determine loading internal …\nGet enumerated values variant\nGet enumerated values variant\n1st half word (16-bit) in ch.0; 2nd in ch.1; …; 4th in …\n0: Disabled\n1: Enable\nEnable or disable PWM module\nField <code>ENABLE</code> reader - Enable or disable PWM module\nPWM module enable register\nField <code>ENABLE</code> writer - Enable or disable PWM module\nRegister <code>ENABLE</code> reader\nRegister <code>ENABLE</code> writer\nWrites raw bits to the register.\nDisabled\nBit 0 - Enable or disable PWM module\nBit 0 - Enable or disable PWM module\nEnable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nGet enumerated values variant\nConcatenated sequences have been played the amount of …\nField <code>EVENTS_LOOPSDONE</code> reader - Concatenated sequences …\nConcatenated sequences have been played the amount of …\nField <code>EVENTS_LOOPSDONE</code> writer - Concatenated sequences …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_LOOPSDONE</code> reader\nRegister <code>EVENTS_LOOPSDONE</code> writer\nWrites raw bits to the register.\nBit 0 - Concatenated sequences have been played the amount …\nBit 0 - Concatenated sequences have been played the amount …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nEmitted at the end of each PWM period\nField <code>EVENTS_PWMPERIODEND</code> reader - Emitted at the end of …\nEmitted at the end of each PWM period\nField <code>EVENTS_PWMPERIODEND</code> writer - Emitted at the end of …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_PWMPERIODEND</code> reader\nRegister <code>EVENTS_PWMPERIODEND</code> writer\nWrites raw bits to the register.\nBit 0 - Emitted at the end of each PWM period\nBit 0 - Emitted at the end of each PWM period\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nEmitted at end of every sequence n, when last value from …\nField <code>EVENTS_SEQEND</code> reader - Emitted at end of every …\nDescription collection: Emitted at end of every sequence …\nField <code>EVENTS_SEQEND</code> writer - Emitted at end of every …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_SEQEND[%s]</code> reader\nRegister <code>EVENTS_SEQEND[%s]</code> writer\nWrites raw bits to the register.\nBit 0 - Emitted at end of every sequence n, when last …\nBit 0 - Emitted at end of every sequence n, when last …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nFirst PWM period started on sequence n\nField <code>EVENTS_SEQSTARTED</code> reader - First PWM period started …\nDescription collection: First PWM period started on …\nField <code>EVENTS_SEQSTARTED</code> writer - First PWM period started …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_SEQSTARTED[%s]</code> reader\nRegister <code>EVENTS_SEQSTARTED[%s]</code> writer\nWrites raw bits to the register.\nBit 0 - First PWM period started on sequence n\nBit 0 - First PWM period started on sequence n\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nResponse to STOP task, emitted when PWM pulses are no …\nField <code>EVENTS_STOPPED</code> reader - Response to STOP task, …\nResponse to STOP task, emitted when PWM pulses are no …\nField <code>EVENTS_STOPPED</code> writer - Response to STOP task, …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_STOPPED</code> reader\nRegister <code>EVENTS_STOPPED</code> writer\nWrites raw bits to the register.\nBit 0 - Response to STOP task, emitted when PWM pulses are …\nBit 0 - Response to STOP task, emitted when PWM pulses are …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\nEnable or disable interrupt\nEnable or disable interrupt for event LOOPSDONE\nField <code>LOOPSDONE</code> reader - Enable or disable interrupt for …\nField <code>LOOPSDONE</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for event PWMPERIODEND\nField <code>PWMPERIODEND</code> reader - Enable or disable interrupt …\nField <code>PWMPERIODEND</code> writer - Enable or disable interrupt …\nRegister <code>INTEN</code> reader\nEnable or disable interrupt for event SEQEND[0]\nField <code>SEQEND0</code> reader - Enable or disable interrupt for …\nField <code>SEQEND0</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for event SEQEND[1]\nField <code>SEQEND1</code> reader - Enable or disable interrupt for …\nField <code>SEQEND1</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for event SEQSTARTED[0]\nField <code>SEQSTARTED0</code> reader - Enable or disable interrupt for …\nField <code>SEQSTARTED0</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for event SEQSTARTED[1]\nField <code>SEQSTARTED1</code> reader - Enable or disable interrupt for …\nField <code>SEQSTARTED1</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for event STOPPED\nField <code>STOPPED</code> reader - Enable or disable interrupt for …\nField <code>STOPPED</code> writer - Enable or disable interrupt for …\nRegister <code>INTEN</code> writer\nWrites raw bits to the register.\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 7 - Enable or disable interrupt for event LOOPSDONE\nBit 7 - Enable or disable interrupt for event LOOPSDONE\nBit 6 - Enable or disable interrupt for event PWMPERIODEND\nBit 6 - Enable or disable interrupt for event PWMPERIODEND\nBit 4 - Enable or disable interrupt for event SEQEND[0]\nBit 4 - Enable or disable interrupt for event SEQEND[0]\nBit 5 - Enable or disable interrupt for event SEQEND[1]\nBit 5 - Enable or disable interrupt for event SEQEND[1]\nBit 2 - Enable or disable interrupt for event SEQSTARTED[0]\nBit 2 - Enable or disable interrupt for event SEQSTARTED[0]\nBit 3 - Enable or disable interrupt for event SEQSTARTED[1]\nBit 3 - Enable or disable interrupt for event SEQSTARTED[1]\nBit 1 - Enable or disable interrupt for event STOPPED\nBit 1 - Enable or disable interrupt for event STOPPED\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\nDisable interrupt\nWrite ‘1’ to disable interrupt for event LOOPSDONE\nWrite ‘1’ to disable interrupt for event LOOPSDONE\nField <code>LOOPSDONE</code> reader - Write ‘1’ to disable …\nField <code>LOOPSDONE</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event PWMPERIODEND\nWrite ‘1’ to disable interrupt for event PWMPERIODEND\nField <code>PWMPERIODEND</code> reader - Write ‘1’ to disable …\nField <code>PWMPERIODEND</code> writer - Write ‘1’ to disable …\nRegister <code>INTENCLR</code> reader\nWrite ‘1’ to disable interrupt for event SEQEND[0]\nWrite ‘1’ to disable interrupt for event SEQEND[0]\nField <code>SEQEND0</code> reader - Write ‘1’ to disable interrupt …\nField <code>SEQEND0</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event SEQEND[1]\nWrite ‘1’ to disable interrupt for event SEQEND[1]\nField <code>SEQEND1</code> reader - Write ‘1’ to disable interrupt …\nField <code>SEQEND1</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event SEQSTARTED[0]\nWrite ‘1’ to disable interrupt for event SEQSTARTED[0]\nField <code>SEQSTARTED0</code> reader - Write ‘1’ to disable …\nField <code>SEQSTARTED0</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event SEQSTARTED[1]\nWrite ‘1’ to disable interrupt for event SEQSTARTED[1]\nField <code>SEQSTARTED1</code> reader - Write ‘1’ to disable …\nField <code>SEQSTARTED1</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event STOPPED\nWrite ‘1’ to disable interrupt for event STOPPED\nField <code>STOPPED</code> reader - Write ‘1’ to disable interrupt …\nField <code>STOPPED</code> writer - Write ‘1’ to disable interrupt …\nRegister <code>INTENCLR</code> writer\nWrites raw bits to the register.\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 7 - Write ‘1’ to disable interrupt for event …\nBit 7 - Write ‘1’ to disable interrupt for event …\nBit 6 - Write ‘1’ to disable interrupt for event …\nBit 6 - Write ‘1’ to disable interrupt for event …\nBit 4 - Write ‘1’ to disable interrupt for event SEQEND…\nBit 4 - Write ‘1’ to disable interrupt for event SEQEND…\nBit 5 - Write ‘1’ to disable interrupt for event SEQEND…\nBit 5 - Write ‘1’ to disable interrupt for event SEQEND…\nBit 2 - Write ‘1’ to disable interrupt for event …\nBit 2 - Write ‘1’ to disable interrupt for event …\nBit 3 - Write ‘1’ to disable interrupt for event …\nBit 3 - Write ‘1’ to disable interrupt for event …\nBit 1 - Write ‘1’ to disable interrupt for event …\nBit 1 - Write ‘1’ to disable interrupt for event …\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\nEnable interrupt\nWrite ‘1’ to enable interrupt for event LOOPSDONE\nWrite ‘1’ to enable interrupt for event LOOPSDONE\nField <code>LOOPSDONE</code> reader - Write ‘1’ to enable interrupt …\nField <code>LOOPSDONE</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event PWMPERIODEND\nWrite ‘1’ to enable interrupt for event PWMPERIODEND\nField <code>PWMPERIODEND</code> reader - Write ‘1’ to enable …\nField <code>PWMPERIODEND</code> writer - Write ‘1’ to enable …\nRegister <code>INTENSET</code> reader\nWrite ‘1’ to enable interrupt for event SEQEND[0]\nWrite ‘1’ to enable interrupt for event SEQEND[0]\nField <code>SEQEND0</code> reader - Write ‘1’ to enable interrupt …\nField <code>SEQEND0</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event SEQEND[1]\nWrite ‘1’ to enable interrupt for event SEQEND[1]\nField <code>SEQEND1</code> reader - Write ‘1’ to enable interrupt …\nField <code>SEQEND1</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event SEQSTARTED[0]\nWrite ‘1’ to enable interrupt for event SEQSTARTED[0]\nField <code>SEQSTARTED0</code> reader - Write ‘1’ to enable …\nField <code>SEQSTARTED0</code> writer - Write ‘1’ to enable …\nWrite ‘1’ to enable interrupt for event SEQSTARTED[1]\nWrite ‘1’ to enable interrupt for event SEQSTARTED[1]\nField <code>SEQSTARTED1</code> reader - Write ‘1’ to enable …\nField <code>SEQSTARTED1</code> writer - Write ‘1’ to enable …\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\nWrite ‘1’ to enable interrupt for event STOPPED\nWrite ‘1’ to enable interrupt for event STOPPED\nField <code>STOPPED</code> reader - Write ‘1’ to enable interrupt …\nField <code>STOPPED</code> writer - Write ‘1’ to enable interrupt …\nRegister <code>INTENSET</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 7 - Write ‘1’ to enable interrupt for event …\nBit 7 - Write ‘1’ to enable interrupt for event …\nBit 6 - Write ‘1’ to enable interrupt for event …\nBit 6 - Write ‘1’ to enable interrupt for event …\nBit 4 - Write ‘1’ to enable interrupt for event SEQEND…\nBit 4 - Write ‘1’ to enable interrupt for event SEQEND…\nBit 5 - Write ‘1’ to enable interrupt for event SEQEND…\nBit 5 - Write ‘1’ to enable interrupt for event SEQEND…\nBit 2 - Write ‘1’ to enable interrupt for event …\nBit 2 - Write ‘1’ to enable interrupt for event …\nBit 3 - Write ‘1’ to enable interrupt for event …\nBit 3 - Write ‘1’ to enable interrupt for event …\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nBit 1 - Write ‘1’ to enable interrupt for event STOPPED\nBit 1 - Write ‘1’ to enable interrupt for event STOPPED\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nNumber of playbacks of pattern cycles\nField <code>CNT</code> reader - Number of playbacks of pattern cycles\nField <code>CNT</code> writer - Number of playbacks of pattern cycles\n0: Looping disabled (stop at the end of the sequence)\nNumber of playbacks of a loop\nRegister <code>LOOP</code> reader\nRegister <code>LOOP</code> writer\nWrites raw bits to the register.\nBits 0:15 - Number of playbacks of pattern cycles\nBits 0:15 - Number of playbacks of pattern cycles\nLooping disabled (stop at the end of the sequence)\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nGet enumerated values variant\nSelects operating mode of the wave counter\nRegister <code>MODE</code> reader\n0: Up counter, edge-aligned PWM duty cycle\nSelects up mode or up-and-down mode for the counter\nField <code>UPDOWN</code> reader - Selects up mode or up-and-down mode …\nField <code>UPDOWN</code> writer - Selects up mode or up-and-down mode …\n1: Up and down counter, center-aligned PWM duty cycle\nRegister <code>MODE</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>UP</code>\nChecks if the value of the field is <code>UP_AND_DOWN</code>\nUp counter, edge-aligned PWM duty cycle\nUp and down counter, center-aligned PWM duty cycle\nBit 0 - Selects up mode or up-and-down mode for the counter\nBit 0 - Selects up mode or up-and-down mode for the counter\nGet enumerated values variant\n0: Divide by 1 (16 MHz)\n7: Divide by 128 (125 kHz)\n4: Divide by 16 (1 MHz)\n1: Divide by 2 (8 MHz)\n5: Divide by 32 (500 kHz)\n2: Divide by 4 (4 MHz)\n6: Divide by 64 (250 kHz)\n3: Divide by 8 (2 MHz)\nPrescaler of PWM_CLK\nField <code>PRESCALER</code> reader - Prescaler of PWM_CLK\nConfiguration for PWM_CLK\nField <code>PRESCALER</code> writer - Prescaler of PWM_CLK\nRegister <code>PRESCALER</code> reader\nRegister <code>PRESCALER</code> writer\nWrites raw bits to the register.\nDivide by 1 (16 MHz)\nDivide by 128 (125 kHz)\nDivide by 16 (1 MHz)\nDivide by 2 (8 MHz)\nDivide by 32 (500 kHz)\nDivide by 4 (4 MHz)\nDivide by 64 (250 kHz)\nDivide by 8 (2 MHz)\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DIV_1</code>\nChecks if the value of the field is <code>DIV_128</code>\nChecks if the value of the field is <code>DIV_16</code>\nChecks if the value of the field is <code>DIV_2</code>\nChecks if the value of the field is <code>DIV_32</code>\nChecks if the value of the field is <code>DIV_4</code>\nChecks if the value of the field is <code>DIV_64</code>\nChecks if the value of the field is <code>DIV_8</code>\nBits 0:2 - Prescaler of PWM_CLK\nBits 0:2 - Prescaler of PWM_CLK\nGet enumerated values variant\nOUT (rw) register accessor: an alias for <code>Reg&lt;OUT_SPEC&gt;</code>\nRegister block\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDescription collection: Output pin select for PWM channel n\n0x00..0x10 - Description collection: Output pin select for …\n0: Connect\nConnection\nField <code>CONNECT</code> reader - Connection\nField <code>CONNECT</code> writer - Connection\n1: Disconnect\nDescription collection: Output pin select for PWM channel n\nField <code>PIN</code> reader - Pin number\nField <code>PIN</code> writer - Pin number\nField <code>PORT</code> reader - Port number\nField <code>PORT</code> writer - Port number\nRegister <code>OUT[%s]</code> reader\nRegister <code>OUT[%s]</code> writer\nWrites raw bits to the register.\nBit 31 - Connection\nBit 31 - Connection\nConnect\nDisconnect\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>CONNECTED</code>\nChecks if the value of the field is <code>DISCONNECTED</code>\nBits 0:4 - Pin number\nBits 0:4 - Pin number\nBit 5 - Port number\nBit 5 - Port number\nGet enumerated values variant\nCNT (rw) register accessor: an alias for <code>Reg&lt;CNT_SPEC&gt;</code>\nENDDELAY (rw) register accessor: an alias for …\nPTR (rw) register accessor: an alias for <code>Reg&lt;PTR_SPEC&gt;</code>\nREFRESH (rw) register accessor: an alias for …\nRegister block\nDescription cluster: Number of values (duty cycles) in …\n0x04 - Description cluster: Number of values (duty cycles) …\nDescription cluster: Time added after the sequence\n0x0c - Description cluster: Time added after the sequence\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDescription cluster: Beginning address in RAM of this …\n0x00 - Description cluster: Beginning address in RAM of …\nDescription cluster: Number of additional PWM periods …\n0x08 - Description cluster: Number of additional PWM …\nNumber of values (duty cycles) in this sequence\nField <code>CNT</code> reader - Number of values (duty cycles) in this …\nDescription cluster: Number of values (duty cycles) in …\nField <code>CNT</code> writer - Number of values (duty cycles) in this …\n0: Sequence is disabled, and shall not be started as it is …\nRegister <code>CNT</code> reader\nRegister <code>CNT</code> writer\nWrites raw bits to the register.\nBits 0:14 - Number of values (duty cycles) in this sequence\nBits 0:14 - Number of values (duty cycles) in this sequence\nSequence is disabled, and shall not be started as it is …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nGet enumerated values variant\nField <code>CNT</code> reader - Time added after the sequence in PWM …\nField <code>CNT</code> writer - Time added after the sequence in PWM …\nDescription cluster: Time added after the sequence\nRegister <code>ENDDELAY</code> reader\nRegister <code>ENDDELAY</code> writer\nWrites raw bits to the register.\nBits 0:23 - Time added after the sequence in PWM periods\nBits 0:23 - Time added after the sequence in PWM periods\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>PTR</code> reader - Beginning address in RAM of this …\nDescription cluster: Beginning address in RAM of this …\nField <code>PTR</code> writer - Beginning address in RAM of this …\nRegister <code>PTR</code> reader\nRegister <code>PTR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Beginning address in RAM of this sequence\nBits 0:31 - Beginning address in RAM of this sequence\nNumber of additional PWM periods between samples loaded …\nField <code>CNT</code> reader - Number of additional PWM periods …\nField <code>CNT</code> writer - Number of additional PWM periods …\n0: Update every PWM period\nRegister <code>REFRESH</code> reader\nDescription cluster: Number of additional PWM periods …\nRegister <code>REFRESH</code> writer\nWrites raw bits to the register.\nBits 0:23 - Number of additional PWM periods between …\nBits 0:23 - Number of additional PWM periods between …\nUpdate every PWM period\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>CONTINUOUS</code>\nGet enumerated values variant\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\nShortcut between event LOOPSDONE and task SEQSTART[0]\nField <code>LOOPSDONE_SEQSTART0</code> reader - Shortcut between event …\nField <code>LOOPSDONE_SEQSTART0</code> writer - Shortcut between event …\nShortcut between event LOOPSDONE and task SEQSTART[1]\nField <code>LOOPSDONE_SEQSTART1</code> reader - Shortcut between event …\nField <code>LOOPSDONE_SEQSTART1</code> writer - Shortcut between event …\nShortcut between event LOOPSDONE and task STOP\nField <code>LOOPSDONE_STOP</code> reader - Shortcut between event …\nField <code>LOOPSDONE_STOP</code> writer - Shortcut between event …\nRegister <code>SHORTS</code> reader\nShortcut between event SEQEND[0] and task STOP\nField <code>SEQEND0_STOP</code> reader - Shortcut between event SEQEND[0…\nField <code>SEQEND0_STOP</code> writer - Shortcut between event SEQEND[0…\nShortcut between event SEQEND[1] and task STOP\nField <code>SEQEND1_STOP</code> reader - Shortcut between event SEQEND[1…\nField <code>SEQEND1_STOP</code> writer - Shortcut between event SEQEND[1…\nShortcuts between local events and tasks\nRegister <code>SHORTS</code> writer\nWrites raw bits to the register.\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 2 - Shortcut between event LOOPSDONE and task SEQSTART…\nBit 2 - Shortcut between event LOOPSDONE and task SEQSTART…\nBit 3 - Shortcut between event LOOPSDONE and task SEQSTART…\nBit 3 - Shortcut between event LOOPSDONE and task SEQSTART…\nBit 4 - Shortcut between event LOOPSDONE and task STOP\nBit 4 - Shortcut between event LOOPSDONE and task STOP\nBit 0 - Shortcut between event SEQEND[0] and task STOP\nBit 0 - Shortcut between event SEQEND[0] and task STOP\nBit 1 - Shortcut between event SEQEND[1] and task STOP\nBit 1 - Shortcut between event SEQEND[1] and task STOP\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nSteps by one value in the current sequence on all enabled …\nSteps by one value in the current sequence on all enabled …\nField <code>TASKS_NEXTSTEP</code> writer - Steps by one value in the …\n1: Trigger task\nRegister <code>TASKS_NEXTSTEP</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Steps by one value in the current sequence on all …\nTrigger task\nLoads the first PWM value on all enabled channels from …\nDescription collection: Loads the first PWM value on all …\nField <code>TASKS_SEQSTART</code> writer - Loads the first PWM value on …\n1: Trigger task\nRegister <code>TASKS_SEQSTART[%s]</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Loads the first PWM value on all enabled channels …\nTrigger task\nStops PWM pulse generation on all channels at the end of …\nStops PWM pulse generation on all channels at the end of …\nField <code>TASKS_STOP</code> writer - Stops PWM pulse generation on …\n1: Trigger task\nRegister <code>TASKS_STOP</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Stops PWM pulse generation on all channels at the …\nTrigger task\nACC (r) register accessor: an alias for <code>Reg&lt;ACC_SPEC&gt;</code>\nACCDBL (r) register accessor: an alias for <code>Reg&lt;ACCDBL_SPEC&gt;</code>\nACCDBLREAD (r) register accessor: an alias for …\nACCREAD (r) register accessor: an alias for …\nDBFEN (rw) register accessor: an alias for <code>Reg&lt;DBFEN_SPEC&gt;</code>\nENABLE (rw) register accessor: an alias for …\nEVENTS_ACCOF (rw) register accessor: an alias for …\nEVENTS_DBLRDY (rw) register accessor: an alias for …\nEVENTS_REPORTRDY (rw) register accessor: an alias for …\nEVENTS_SAMPLERDY (rw) register accessor: an alias for …\nEVENTS_STOPPED (rw) register accessor: an alias for …\nINTENCLR (rw) register accessor: an alias for …\nINTENSET (rw) register accessor: an alias for …\nLEDPOL (rw) register accessor: an alias for …\nLEDPRE (rw) register accessor: an alias for …\nUnspecified\nREPORTPER (rw) register accessor: an alias for …\nRegister block\nSAMPLE (r) register accessor: an alias for <code>Reg&lt;SAMPLE_SPEC&gt;</code>\nSAMPLEPER (rw) register accessor: an alias for …\nSHORTS (rw) register accessor: an alias for …\nTASKS_RDCLRACC (w) register accessor: an alias for …\nTASKS_RDCLRDBL (w) register accessor: an alias for …\nTASKS_READCLRACC (w) register accessor: an alias for …\nTASKS_START (w) register accessor: an alias for …\nTASKS_STOP (w) register accessor: an alias for …\nRegister accumulating the valid transitions\n0x514 - Register accumulating the valid transitions\nRegister accumulating the number of detected double …\n0x544 - Register accumulating the number of detected …\nSnapshot of the ACCDBL, updated by the READCLRACC or …\n0x548 - Snapshot of the ACCDBL, updated by the READCLRACC …\nSnapshot of the ACC register, updated by the READCLRACC or …\n0x518 - Snapshot of the ACC register, updated by the …\nEnable input debounce filters\n0x528 - Enable input debounce filters\nEnable the quadrature decoder\n0x500 - Enable the quadrature decoder\nACC or ACCDBL register overflow\n0x108 - ACC or ACCDBL register overflow\nDouble displacement(s) detected\n0x10c - Double displacement(s) detected\nNon-null report ready\n0x104 - Non-null report ready\nEvent being generated for every new sample value written …\n0x100 - Event being generated for every new sample value …\nQDEC has been stopped\n0x110 - QDEC has been stopped\nReturns the argument unchanged.\nDisable interrupt\n0x308 - Disable interrupt\nEnable interrupt\n0x304 - Enable interrupt\nCalls <code>U::from(self)</code>.\nLED output pin polarity\n0x504 - LED output pin polarity\nTime period the LED is switched ON prior to sampling\n0x540 - Time period the LED is switched ON prior to …\nCluster Unspecified\n0x51c..0x528 - Unspecified\nNumber of samples to be taken before REPORTRDY and DBLRDY …\n0x510 - Number of samples to be taken before REPORTRDY and …\nMotion sample value\n0x50c - Motion sample value\nSample period\n0x508 - Sample period\nShortcuts between local events and tasks\n0x200 - Shortcuts between local events and tasks\nRead and clear ACC\n0x0c - Read and clear ACC\nRead and clear ACCDBL\n0x10 - Read and clear ACCDBL\nRead and clear ACC and ACCDBL\n0x08 - Read and clear ACC and ACCDBL\nTask starting the quadrature decoder\n0x00 - Task starting the quadrature decoder\nTask stopping the quadrature decoder\n0x04 - Task stopping the quadrature decoder\nField <code>ACC</code> reader - Register accumulating all valid samples …\nRegister accumulating the valid transitions\nRegister <code>ACC</code> reader\nBits 0:31 - Register accumulating all valid samples (not …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>ACCDBL</code> reader - Register accumulating the number of …\nRegister accumulating the number of detected double …\nRegister <code>ACCDBL</code> reader\nBits 0:3 - Register accumulating the number of detected …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>ACCDBLREAD</code> reader - Snapshot of the ACCDBL register. …\nSnapshot of the ACCDBL, updated by the READCLRACC or …\nRegister <code>ACCDBLREAD</code> reader\nBits 0:3 - Snapshot of the ACCDBL register. This field is …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>ACCREAD</code> reader - Snapshot of the ACC register.\nSnapshot of the ACC register, updated by the READCLRACC or …\nRegister <code>ACCREAD</code> reader\nBits 0:31 - Snapshot of the ACC register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEnable input debounce filters\nField <code>DBFEN</code> reader - Enable input debounce filters\nEnable input debounce filters\nField <code>DBFEN</code> writer - Enable input debounce filters\n0: Debounce input filters disabled\n1: Debounce input filters enabled\nRegister <code>DBFEN</code> reader\nRegister <code>DBFEN</code> writer\nWrites raw bits to the register.\nBit 0 - Enable input debounce filters\nBit 0 - Enable input debounce filters\nDebounce input filters disabled\nDebounce input filters enabled\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nGet enumerated values variant\n0: Disable\n1: Enable\nEnable or disable the quadrature decoder\nField <code>ENABLE</code> reader - Enable or disable the quadrature …\nEnable the quadrature decoder\nField <code>ENABLE</code> writer - Enable or disable the quadrature …\nRegister <code>ENABLE</code> reader\nRegister <code>ENABLE</code> writer\nWrites raw bits to the register.\nDisable\nBit 0 - Enable or disable the quadrature decoder\nBit 0 - Enable or disable the quadrature decoder\nEnable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nGet enumerated values variant\nACC or ACCDBL register overflow\nField <code>EVENTS_ACCOF</code> reader - ACC or ACCDBL register overflow\nACC or ACCDBL register overflow\nField <code>EVENTS_ACCOF</code> writer - ACC or ACCDBL register overflow\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_ACCOF</code> reader\nRegister <code>EVENTS_ACCOF</code> writer\nWrites raw bits to the register.\nBit 0 - ACC or ACCDBL register overflow\nBit 0 - ACC or ACCDBL register overflow\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nDouble displacement(s) detected\nField <code>EVENTS_DBLRDY</code> reader - Double displacement(s) …\nDouble displacement(s) detected\nField <code>EVENTS_DBLRDY</code> writer - Double displacement(s) …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_DBLRDY</code> reader\nRegister <code>EVENTS_DBLRDY</code> writer\nWrites raw bits to the register.\nBit 0 - Double displacement(s) detected\nBit 0 - Double displacement(s) detected\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nNon-null report ready\nField <code>EVENTS_REPORTRDY</code> reader - Non-null report ready\nNon-null report ready\nField <code>EVENTS_REPORTRDY</code> writer - Non-null report ready\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_REPORTRDY</code> reader\nRegister <code>EVENTS_REPORTRDY</code> writer\nWrites raw bits to the register.\nBit 0 - Non-null report ready\nBit 0 - Non-null report ready\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nEvent being generated for every new sample value written …\nField <code>EVENTS_SAMPLERDY</code> reader - Event being generated for …\nEvent being generated for every new sample value written …\nField <code>EVENTS_SAMPLERDY</code> writer - Event being generated for …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_SAMPLERDY</code> reader\nRegister <code>EVENTS_SAMPLERDY</code> writer\nWrites raw bits to the register.\nBit 0 - Event being generated for every new sample value …\nBit 0 - Event being generated for every new sample value …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nQDEC has been stopped\nField <code>EVENTS_STOPPED</code> reader - QDEC has been stopped\nQDEC has been stopped\nField <code>EVENTS_STOPPED</code> writer - QDEC has been stopped\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_STOPPED</code> reader\nRegister <code>EVENTS_STOPPED</code> writer\nWrites raw bits to the register.\nBit 0 - QDEC has been stopped\nBit 0 - QDEC has been stopped\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nWrite ‘1’ to disable interrupt for event ACCOF\nWrite ‘1’ to disable interrupt for event ACCOF\nField <code>ACCOF</code> reader - Write ‘1’ to disable interrupt …\nField <code>ACCOF</code> writer - Write ‘1’ to disable interrupt …\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\nWrite ‘1’ to disable interrupt for event DBLRDY\nWrite ‘1’ to disable interrupt for event DBLRDY\nField <code>DBLRDY</code> reader - Write ‘1’ to disable interrupt …\nField <code>DBLRDY</code> writer - Write ‘1’ to disable interrupt …\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\nDisable interrupt\nRegister <code>INTENCLR</code> reader\nWrite ‘1’ to disable interrupt for event REPORTRDY\nWrite ‘1’ to disable interrupt for event REPORTRDY\nField <code>REPORTRDY</code> reader - Write ‘1’ to disable …\nField <code>REPORTRDY</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event SAMPLERDY\nWrite ‘1’ to disable interrupt for event SAMPLERDY\nField <code>SAMPLERDY</code> reader - Write ‘1’ to disable …\nField <code>SAMPLERDY</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event STOPPED\nWrite ‘1’ to disable interrupt for event STOPPED\nField <code>STOPPED</code> reader - Write ‘1’ to disable interrupt …\nField <code>STOPPED</code> writer - Write ‘1’ to disable interrupt …\nRegister <code>INTENCLR</code> writer\nBit 2 - Write ‘1’ to disable interrupt for event ACCOF\nBit 2 - Write ‘1’ to disable interrupt for event ACCOF\nWrites raw bits to the register.\nDisable\nDisable\nDisable\nDisable\nDisable\nBit 3 - Write ‘1’ to disable interrupt for event DBLRDY\nBit 3 - Write ‘1’ to disable interrupt for event DBLRDY\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 1 - Write ‘1’ to disable interrupt for event …\nBit 1 - Write ‘1’ to disable interrupt for event …\nBit 0 - Write ‘1’ to disable interrupt for event …\nBit 0 - Write ‘1’ to disable interrupt for event …\nBit 4 - Write ‘1’ to disable interrupt for event …\nBit 4 - Write ‘1’ to disable interrupt for event …\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nWrite ‘1’ to enable interrupt for event ACCOF\nWrite ‘1’ to enable interrupt for event ACCOF\nField <code>ACCOF</code> reader - Write ‘1’ to enable interrupt for …\nField <code>ACCOF</code> writer - Write ‘1’ to enable interrupt for …\nWrite ‘1’ to enable interrupt for event DBLRDY\nWrite ‘1’ to enable interrupt for event DBLRDY\nField <code>DBLRDY</code> reader - Write ‘1’ to enable interrupt …\nField <code>DBLRDY</code> writer - Write ‘1’ to enable interrupt …\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\nEnable interrupt\nRegister <code>INTENSET</code> reader\nWrite ‘1’ to enable interrupt for event REPORTRDY\nWrite ‘1’ to enable interrupt for event REPORTRDY\nField <code>REPORTRDY</code> reader - Write ‘1’ to enable interrupt …\nField <code>REPORTRDY</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event SAMPLERDY\nWrite ‘1’ to enable interrupt for event SAMPLERDY\nField <code>SAMPLERDY</code> reader - Write ‘1’ to enable interrupt …\nField <code>SAMPLERDY</code> writer - Write ‘1’ to enable interrupt …\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\nWrite ‘1’ to enable interrupt for event STOPPED\nWrite ‘1’ to enable interrupt for event STOPPED\nField <code>STOPPED</code> reader - Write ‘1’ to enable interrupt …\nField <code>STOPPED</code> writer - Write ‘1’ to enable interrupt …\nRegister <code>INTENSET</code> writer\nBit 2 - Write ‘1’ to enable interrupt for event ACCOF\nBit 2 - Write ‘1’ to enable interrupt for event ACCOF\nWrites raw bits to the register.\nBit 3 - Write ‘1’ to enable interrupt for event DBLRDY\nBit 3 - Write ‘1’ to enable interrupt for event DBLRDY\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 1 - Write ‘1’ to enable interrupt for event …\nBit 1 - Write ‘1’ to enable interrupt for event …\nBit 0 - Write ‘1’ to enable interrupt for event …\nBit 0 - Write ‘1’ to enable interrupt for event …\nEnable\nEnable\nEnable\nEnable\nEnable\nBit 4 - Write ‘1’ to enable interrupt for event STOPPED\nBit 4 - Write ‘1’ to enable interrupt for event STOPPED\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\n1: Led active on output pin high\n0: Led active on output pin low\nLED output pin polarity\nField <code>LEDPOL</code> reader - LED output pin polarity\nLED output pin polarity\nField <code>LEDPOL</code> writer - LED output pin polarity\nRegister <code>LEDPOL</code> reader\nRegister <code>LEDPOL</code> writer\nLed active on output pin high\nLed active on output pin low\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>ACTIVE_HIGH</code>\nChecks if the value of the field is <code>ACTIVE_LOW</code>\nBit 0 - LED output pin polarity\nBit 0 - LED output pin polarity\nGet enumerated values variant\nField <code>LEDPRE</code> reader - Period in us the LED is switched on …\nTime period the LED is switched ON prior to sampling\nField <code>LEDPRE</code> writer - Period in us the LED is switched on …\nRegister <code>LEDPRE</code> reader\nRegister <code>LEDPRE</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:8 - Period in us the LED is switched on prior to …\nBits 0:8 - Period in us the LED is switched on prior to …\nA (rw) register accessor: an alias for <code>Reg&lt;A_SPEC&gt;</code>\nB (rw) register accessor: an alias for <code>Reg&lt;B_SPEC&gt;</code>\nLED (rw) register accessor: an alias for <code>Reg&lt;LED_SPEC&gt;</code>\nRegister block\nPin select for A signal\n0x04 - Pin select for A signal\nPin select for B signal\n0x08 - Pin select for B signal\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPin select for LED signal\n0x00 - Pin select for LED signal\nPin select for A signal\n0: Connect\nConnection\nField <code>CONNECT</code> reader - Connection\nField <code>CONNECT</code> writer - Connection\n1: Disconnect\nField <code>PIN</code> reader - Pin number\nField <code>PIN</code> writer - Pin number\nField <code>PORT</code> reader - Port number\nField <code>PORT</code> writer - Port number\nRegister <code>A</code> reader\nRegister <code>A</code> writer\nWrites raw bits to the register.\nBit 31 - Connection\nBit 31 - Connection\nConnect\nDisconnect\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>CONNECTED</code>\nChecks if the value of the field is <code>DISCONNECTED</code>\nBits 0:4 - Pin number\nBits 0:4 - Pin number\nBit 5 - Port number\nBit 5 - Port number\nGet enumerated values variant\nPin select for B signal\n0: Connect\nConnection\nField <code>CONNECT</code> reader - Connection\nField <code>CONNECT</code> writer - Connection\n1: Disconnect\nField <code>PIN</code> reader - Pin number\nField <code>PIN</code> writer - Pin number\nField <code>PORT</code> reader - Port number\nField <code>PORT</code> writer - Port number\nRegister <code>B</code> reader\nRegister <code>B</code> writer\nWrites raw bits to the register.\nBit 31 - Connection\nBit 31 - Connection\nConnect\nDisconnect\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>CONNECTED</code>\nChecks if the value of the field is <code>DISCONNECTED</code>\nBits 0:4 - Pin number\nBits 0:4 - Pin number\nBit 5 - Port number\nBit 5 - Port number\nGet enumerated values variant\n0: Connect\nConnection\nField <code>CONNECT</code> reader - Connection\nField <code>CONNECT</code> writer - Connection\n1: Disconnect\nPin select for LED signal\nField <code>PIN</code> reader - Pin number\nField <code>PIN</code> writer - Pin number\nField <code>PORT</code> reader - Port number\nField <code>PORT</code> writer - Port number\nRegister <code>LED</code> reader\nRegister <code>LED</code> writer\nWrites raw bits to the register.\nBit 31 - Connection\nBit 31 - Connection\nConnect\nDisconnect\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>CONNECTED</code>\nChecks if the value of the field is <code>DISCONNECTED</code>\nBits 0:4 - Pin number\nBits 0:4 - Pin number\nBit 5 - Port number\nBit 5 - Port number\nGet enumerated values variant\nRegister <code>REPORTPER</code> reader\nSpecifies the number of samples to be accumulated in the …\nField <code>REPORTPER</code> reader - Specifies the number of samples …\nNumber of samples to be taken before REPORTRDY and DBLRDY …\nField <code>REPORTPER</code> writer - Specifies the number of samples …\nRegister <code>REPORTPER</code> writer\n0: 10 samples / report\n10 samples / report\n3: 120 samples / report\n120 samples / report\n4: 160 samples / report\n160 samples / report\n8: 1 sample / report\n1 sample / report\n5: 200 samples / report\n200 samples / report\n6: 240 samples / report\n240 samples / report\n7: 280 samples / report\n280 samples / report\n1: 40 samples / report\n40 samples / report\n2: 80 samples / report\n80 samples / report\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>_10SMPL</code>\nChecks if the value of the field is <code>_120SMPL</code>\nChecks if the value of the field is <code>_160SMPL</code>\nChecks if the value of the field is <code>_1SMPL</code>\nChecks if the value of the field is <code>_200SMPL</code>\nChecks if the value of the field is <code>_240SMPL</code>\nChecks if the value of the field is <code>_280SMPL</code>\nChecks if the value of the field is <code>_40SMPL</code>\nChecks if the value of the field is <code>_80SMPL</code>\nBits 0:3 - Specifies the number of samples to be …\nBits 0:3 - Specifies the number of samples to be …\nGet enumerated values variant\nRegister <code>SAMPLE</code> reader\nField <code>SAMPLE</code> reader - Last motion sample\nMotion sample value\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Last motion sample\nRegister <code>SAMPLEPER</code> reader\nSample period. The SAMPLE register will be updated for …\nField <code>SAMPLEPER</code> reader - Sample period. The SAMPLE …\nSample period\nField <code>SAMPLEPER</code> writer - Sample period. The SAMPLE …\nRegister <code>SAMPLEPER</code> writer\n3: 1024 us\n1024 us\n0: 128 us\n128 us\n10: 131072 us\n131072 us\n7: 16384 us\n16384 us\n4: 2048 us\n2048 us\n1: 256 us\n256 us\n8: 32768 us\n32768 us\n5: 4096 us\n4096 us\n2: 512 us\n512 us\n9: 65536 us\n65536 us\n6: 8192 us\n8192 us\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>_1024US</code>\nChecks if the value of the field is <code>_128US</code>\nChecks if the value of the field is <code>_131MS</code>\nChecks if the value of the field is <code>_16384US</code>\nChecks if the value of the field is <code>_2048US</code>\nChecks if the value of the field is <code>_256US</code>\nChecks if the value of the field is <code>_32MS</code>\nChecks if the value of the field is <code>_4096US</code>\nChecks if the value of the field is <code>_512US</code>\nChecks if the value of the field is <code>_65MS</code>\nChecks if the value of the field is <code>_8192US</code>\nBits 0:3 - Sample period. The SAMPLE register will be …\nBits 0:3 - Sample period. The SAMPLE register will be …\nGet enumerated values variant\nShortcut between event DBLRDY and task RDCLRDBL\nField <code>DBLRDY_RDCLRDBL</code> reader - Shortcut between event …\nField <code>DBLRDY_RDCLRDBL</code> writer - Shortcut between event …\nShortcut between event DBLRDY and task STOP\nField <code>DBLRDY_STOP</code> reader - Shortcut between event DBLRDY …\nField <code>DBLRDY_STOP</code> writer - Shortcut between event DBLRDY …\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\nRegister <code>SHORTS</code> reader\nShortcut between event REPORTRDY and task RDCLRACC\nField <code>REPORTRDY_RDCLRACC</code> reader - Shortcut between event …\nField <code>REPORTRDY_RDCLRACC</code> writer - Shortcut between event …\nShortcut between event REPORTRDY and task READCLRACC\nField <code>REPORTRDY_READCLRACC</code> reader - Shortcut between event …\nField <code>REPORTRDY_READCLRACC</code> writer - Shortcut between event …\nShortcut between event REPORTRDY and task STOP\nField <code>REPORTRDY_STOP</code> reader - Shortcut between event …\nField <code>REPORTRDY_STOP</code> writer - Shortcut between event …\nShortcut between event SAMPLERDY and task READCLRACC\nField <code>SAMPLERDY_READCLRACC</code> reader - Shortcut between event …\nField <code>SAMPLERDY_READCLRACC</code> writer - Shortcut between event …\nShortcut between event SAMPLERDY and task STOP\nField <code>SAMPLERDY_STOP</code> reader - Shortcut between event …\nField <code>SAMPLERDY_STOP</code> writer - Shortcut between event …\nShortcuts between local events and tasks\nRegister <code>SHORTS</code> writer\nWrites raw bits to the register.\nBit 4 - Shortcut between event DBLRDY and task RDCLRDBL\nBit 4 - Shortcut between event DBLRDY and task RDCLRDBL\nBit 5 - Shortcut between event DBLRDY and task STOP\nBit 5 - Shortcut between event DBLRDY and task STOP\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 2 - Shortcut between event REPORTRDY and task RDCLRACC\nBit 2 - Shortcut between event REPORTRDY and task RDCLRACC\nBit 0 - Shortcut between event REPORTRDY and task …\nBit 0 - Shortcut between event REPORTRDY and task …\nBit 3 - Shortcut between event REPORTRDY and task STOP\nBit 3 - Shortcut between event REPORTRDY and task STOP\nBit 6 - Shortcut between event SAMPLERDY and task …\nBit 6 - Shortcut between event SAMPLERDY and task …\nBit 1 - Shortcut between event SAMPLERDY and task STOP\nBit 1 - Shortcut between event SAMPLERDY and task STOP\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nRead and clear ACC\nRead and clear ACC\nField <code>TASKS_RDCLRACC</code> writer - Read and clear ACC\n1: Trigger task\nRegister <code>TASKS_RDCLRACC</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Read and clear ACC\nTrigger task\nRead and clear ACCDBL\nRead and clear ACCDBL\nField <code>TASKS_RDCLRDBL</code> writer - Read and clear ACCDBL\n1: Trigger task\nRegister <code>TASKS_RDCLRDBL</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Read and clear ACCDBL\nTrigger task\nRead and clear ACC and ACCDBL\nRead and clear ACC and ACCDBL\nField <code>TASKS_READCLRACC</code> writer - Read and clear ACC and …\n1: Trigger task\nRegister <code>TASKS_READCLRACC</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Read and clear ACC and ACCDBL\nTrigger task\nTask starting the quadrature decoder\nTask starting the quadrature decoder\nField <code>TASKS_START</code> writer - Task starting the quadrature …\n1: Trigger task\nRegister <code>TASKS_START</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Task starting the quadrature decoder\nTrigger task\nTask stopping the quadrature decoder\nTask stopping the quadrature decoder\nField <code>TASKS_STOP</code> writer - Task stopping the quadrature …\n1: Trigger task\nRegister <code>TASKS_STOP</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Task stopping the quadrature decoder\nTrigger task\nBASE0 (rw) register accessor: an alias for <code>Reg&lt;BASE0_SPEC&gt;</code>\nBASE1 (rw) register accessor: an alias for <code>Reg&lt;BASE1_SPEC&gt;</code>\nBCC (rw) register accessor: an alias for <code>Reg&lt;BCC_SPEC&gt;</code>\nCCACTRL (rw) register accessor: an alias for …\nCLEARPATTERN (rw) register accessor: an alias for …\nCRCCNF (rw) register accessor: an alias for …\nCRCINIT (rw) register accessor: an alias for …\nCRCPOLY (rw) register accessor: an alias for …\nCRCSTATUS (r) register accessor: an alias for …\nCTEINLINECONF (rw) register accessor: an alias for …\nCTESTATUS (r) register accessor: an alias for …\nDAB (rw) register accessor: an alias for <code>Reg&lt;DAB_SPEC&gt;</code>\nDACNF (rw) register accessor: an alias for <code>Reg&lt;DACNF_SPEC&gt;</code>\nDAI (r) register accessor: an alias for <code>Reg&lt;DAI_SPEC&gt;</code>\nDAP (rw) register accessor: an alias for <code>Reg&lt;DAP_SPEC&gt;</code>\nDATAWHITEIV (rw) register accessor: an alias for …\nDFECTRL1 (rw) register accessor: an alias for …\nDFECTRL2 (rw) register accessor: an alias for …\nDFEMODE (rw) register accessor: an alias for …\nDFE packet EasyDMA channel\nDFESTATUS (r) register accessor: an alias for …\nEDCNT (rw) register accessor: an alias for <code>Reg&lt;EDCNT_SPEC&gt;</code>\nEDSAMPLE (r) register accessor: an alias for …\nEVENTS_ADDRESS (rw) register accessor: an alias for …\nEVENTS_BCMATCH (rw) register accessor: an alias for …\nEVENTS_CCABUSY (rw) register accessor: an alias for …\nEVENTS_CCAIDLE (rw) register accessor: an alias for …\nEVENTS_CCASTOPPED (rw) register accessor: an alias for …\nEVENTS_CRCERROR (rw) register accessor: an alias for …\nEVENTS_CRCOK (rw) register accessor: an alias for …\nEVENTS_CTEPRESENT (rw) register accessor: an alias for …\nEVENTS_DEVMATCH (rw) register accessor: an alias for …\nEVENTS_DEVMISS (rw) register accessor: an alias for …\nEVENTS_DISABLED (rw) register accessor: an alias for …\nEVENTS_EDEND (rw) register accessor: an alias for …\nEVENTS_EDSTOPPED (rw) register accessor: an alias for …\nEVENTS_END (rw) register accessor: an alias for …\nEVENTS_FRAMESTART (rw) register accessor: an alias for …\nEVENTS_MHRMATCH (rw) register accessor: an alias for …\nEVENTS_PAYLOAD (rw) register accessor: an alias for …\nEVENTS_PHYEND (rw) register accessor: an alias for …\nEVENTS_RATEBOOST (rw) register accessor: an alias for …\nEVENTS_READY (rw) register accessor: an alias for …\nEVENTS_RSSIEND (rw) register accessor: an alias for …\nEVENTS_RXREADY (rw) register accessor: an alias for …\nEVENTS_SYNC (rw) register accessor: an alias for …\nEVENTS_TXREADY (rw) register accessor: an alias for …\nFREQUENCY (rw) register accessor: an alias for …\nINTENCLR (rw) register accessor: an alias for …\nINTENSET (rw) register accessor: an alias for …\nMHRMATCHCONF (rw) register accessor: an alias for …\nMHRMATCHMAS (rw) register accessor: an alias for …\nMODE (rw) register accessor: an alias for <code>Reg&lt;MODE_SPEC&gt;</code>\nMODECNF0 (rw) register accessor: an alias for …\nPACKETPTR (rw) register accessor: an alias for …\nPCNF0 (rw) register accessor: an alias for <code>Reg&lt;PCNF0_SPEC&gt;</code>\nPCNF1 (rw) register accessor: an alias for <code>Reg&lt;PCNF1_SPEC&gt;</code>\nPDUSTAT (r) register accessor: an alias for …\nPOWER (rw) register accessor: an alias for <code>Reg&lt;POWER_SPEC&gt;</code>\nPREFIX0 (rw) register accessor: an alias for …\nPREFIX1 (rw) register accessor: an alias for …\nUnspecified\nRSSISAMPLE (r) register accessor: an alias for …\nRXADDRESSES (rw) register accessor: an alias for …\nRXCRC (r) register accessor: an alias for <code>Reg&lt;RXCRC_SPEC&gt;</code>\nRXMATCH (r) register accessor: an alias for …\nRegister block\nSFD (rw) register accessor: an alias for <code>Reg&lt;SFD_SPEC&gt;</code>\nSHORTS (rw) register accessor: an alias for …\nSTATE (r) register accessor: an alias for <code>Reg&lt;STATE_SPEC&gt;</code>\nSWITCHPATTERN (rw) register accessor: an alias for …\nTASKS_BCSTART (w) register accessor: an alias for …\nTASKS_BCSTOP (w) register accessor: an alias for …\nTASKS_CCASTART (w) register accessor: an alias for …\nTASKS_CCASTOP (w) register accessor: an alias for …\nTASKS_DISABLE (w) register accessor: an alias for …\nTASKS_EDSTART (w) register accessor: an alias for …\nTASKS_EDSTOP (w) register accessor: an alias for …\nTASKS_RSSISTART (w) register accessor: an alias for …\nTASKS_RSSISTOP (w) register accessor: an alias for …\nTASKS_RXEN (w) register accessor: an alias for …\nTASKS_START (w) register accessor: an alias for …\nTASKS_STOP (w) register accessor: an alias for …\nTASKS_TXEN (w) register accessor: an alias for …\nTIFS (rw) register accessor: an alias for <code>Reg&lt;TIFS_SPEC&gt;</code>\nTXADDRESS (rw) register accessor: an alias for …\nTXPOWER (rw) register accessor: an alias for …\nBase address 0\n0x51c - Base address 0\nBase address 1\n0x520 - Base address 1\nBit counter compare\n0x560 - Bit counter compare\nIEEE 802.15.4 clear channel assessment control\n0x66c - IEEE 802.15.4 clear channel assessment control\nClear the GPIO pattern array for antenna control\n0x92c - Clear the GPIO pattern array for antenna control\nCRC configuration\n0x534 - CRC configuration\nCRC initial value\n0x53c - CRC initial value\nCRC polynomial\n0x538 - CRC polynomial\nCRC status\n0x400 - CRC status\nConfiguration for CTE inline mode\n0x904 - Configuration for CTE inline mode\nCTEInfo parsed from received packet\n0x44c - CTEInfo parsed from received packet\nDescription collection: Device address base segment n\n0x600..0x620 - Description collection: Device address base …\nDevice address match configuration\n0x640 - Device address match configuration\nDevice address match index\n0x410 - Device address match index\nDescription collection: Device address prefix n\n0x620..0x640 - Description collection: Device address …\nData whitening initial value\n0x554 - Data whitening initial value\nVarious configuration for Direction finding\n0x910 - Various configuration for Direction finding\nStart offset for Direction finding\n0x914 - Start offset for Direction finding\nWhether to use Angle-of-Arrival (AOA) or …\n0x900 - Whether to use Angle-of-Arrival (AOA) or …\nCluster DFE packet EasyDMA channel\n0x950..0x95c - DFE packet EasyDMA channel\nDFE status information\n0x458 - DFE status information\nIEEE 802.15.4 energy detect loop count\n0x664 - IEEE 802.15.4 energy detect loop count\nIEEE 802.15.4 energy detect level\n0x668 - IEEE 802.15.4 energy detect level\nAddress sent or received\n0x104 - Address sent or received\nBit counter reached bit count value\n0x128 - Bit counter reached bit count value\nWireless medium busy - do not send\n0x148 - Wireless medium busy - do not send\nWireless medium in idle - clear to send\n0x144 - Wireless medium in idle - clear to send\nThe CCA has stopped\n0x14c - The CCA has stopped\nPacket received with CRC error\n0x134 - Packet received with CRC error\nPacket received with CRC ok\n0x130 - Packet received with CRC ok\nCTE is present (early warning right after receiving …\n0x170 - CTE is present (early warning right after …\nA device address match occurred on the last received packet\n0x114 - A device address match occurred on the last …\nNo device address match occurred on the last received …\n0x118 - No device address match occurred on the last …\nRADIO has been disabled\n0x110 - RADIO has been disabled\nSampling of energy detection complete. A new ED sample is …\n0x13c - Sampling of energy detection complete. A new ED …\nThe sampling of energy detection has stopped\n0x140 - The sampling of energy detection has stopped\nPacket sent or received\n0x10c - Packet sent or received\nIEEE 802.15.4 length field received\n0x138 - IEEE 802.15.4 length field received\nMAC header match found\n0x15c - MAC header match found\nPacket payload sent or received\n0x108 - Packet payload sent or received\nGenerated when last bit is sent on air, or received from …\n0x16c - Generated when last bit is sent on air, or …\nBle_LR CI field received, receive mode is changed from …\n0x150 - Ble_LR CI field received, receive mode is changed …\nRADIO has ramped up and is ready to be started\n0x100 - RADIO has ramped up and is ready to be started\nSampling of receive signal strength complete\n0x11c - Sampling of receive signal strength complete\nRADIO has ramped up and is ready to be started RX path\n0x158 - RADIO has ramped up and is ready to be started RX …\nPreamble indicator\n0x168 - Preamble indicator\nRADIO has ramped up and is ready to be started TX path\n0x154 - RADIO has ramped up and is ready to be started TX …\nFrequency\n0x508 - Frequency\nReturns the argument unchanged.\nDisable interrupt\n0x308 - Disable interrupt\nEnable interrupt\n0x304 - Enable interrupt\nCalls <code>U::from(self)</code>.\nSearch pattern configuration\n0x644 - Search pattern configuration\nPattern mask\n0x648 - Pattern mask\nData rate and modulation\n0x510 - Data rate and modulation\nRadio mode configuration register 0\n0x650 - Radio mode configuration register 0\nPacket pointer\n0x504 - Packet pointer\nPacket configuration register 0\n0x514 - Packet configuration register 0\nPacket configuration register 1\n0x518 - Packet configuration register 1\nPayload status\n0x414 - Payload status\nPeripheral power control\n0xffc - Peripheral power control\nPrefixes bytes for logical addresses 0-3\n0x524 - Prefixes bytes for logical addresses 0-3\nPrefixes bytes for logical addresses 4-7\n0x528 - Prefixes bytes for logical addresses 4-7\nCluster Unspecified\n0x930..0x950 - Unspecified\nRSSI sample\n0x548 - RSSI sample\nReceive address select\n0x530 - Receive address select\nCRC field of previously received packet\n0x40c - CRC field of previously received packet\nReceived address\n0x408 - Received address\nIEEE 802.15.4 start of frame delimiter\n0x660 - IEEE 802.15.4 start of frame delimiter\nShortcuts between local events and tasks\n0x200 - Shortcuts between local events and tasks\nCurrent radio state\n0x550 - Current radio state\nGPIO patterns to be used for each antenna\n0x928 - GPIO patterns to be used for each antenna\nStart the bit counter\n0x1c - Start the bit counter\nStop the bit counter\n0x20 - Stop the bit counter\nStart the clear channel assessment used in IEEE 802.15.4 …\n0x2c - Start the clear channel assessment used in IEEE …\nStop the clear channel assessment\n0x30 - Stop the clear channel assessment\nDisable RADIO\n0x10 - Disable RADIO\nStart the energy detect measurement used in IEEE 802.15.4 …\n0x24 - Start the energy detect measurement used in IEEE …\nStop the energy detect measurement\n0x28 - Stop the energy detect measurement\nStart the RSSI and take one single sample of the receive …\n0x14 - Start the RSSI and take one single sample of the …\nStop the RSSI measurement\n0x18 - Stop the RSSI measurement\nEnable RADIO in RX mode\n0x04 - Enable RADIO in RX mode\nStart RADIO\n0x08 - Start RADIO\nStop RADIO\n0x0c - Stop RADIO\nEnable RADIO in TX mode\n0x00 - Enable RADIO in TX mode\nInterframe spacing in us\n0x544 - Interframe spacing in us\nTransmit address select\n0x52c - Transmit address select\nOutput power\n0x50c - Output power\nField <code>BASE0</code> reader - Base address 0\nBase address 0\nField <code>BASE0</code> writer - Base address 0\nRegister <code>BASE0</code> reader\nRegister <code>BASE0</code> writer\nBits 0:31 - Base address 0\nBits 0:31 - Base address 0\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>BASE1</code> reader - Base address 1\nBase address 1\nField <code>BASE1</code> writer - Base address 1\nRegister <code>BASE1</code> reader\nRegister <code>BASE1</code> writer\nBits 0:31 - Base address 1\nBits 0:31 - Base address 1\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>BCC</code> reader - Bit counter compare\nBit counter compare\nField <code>BCC</code> writer - Bit counter compare\nRegister <code>BCC</code> reader\nRegister <code>BCC</code> writer\nBits 0:31 - Bit counter compare\nBits 0:31 - Bit counter compare\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n2: Energy above threshold AND carrier seen\n1: Carrier seen\n3: Energy above threshold OR carrier seen\nField <code>CCACORRCNT</code> reader - Limit for occurances above …\nField <code>CCACORRCNT</code> writer - Limit for occurances above …\nField <code>CCACORRTHRES</code> reader - CCA correlator busy threshold. …\nField <code>CCACORRTHRES</code> writer - CCA correlator busy threshold. …\nIEEE 802.15.4 clear channel assessment control\nField <code>CCAEDTHRES</code> reader - CCA energy busy threshold. Used …\nField <code>CCAEDTHRES</code> writer - CCA energy busy threshold. Used …\nCCA mode of operation\nField <code>CCAMODE</code> reader - CCA mode of operation\nField <code>CCAMODE</code> writer - CCA mode of operation\n0: Energy above threshold\n4: Energy above threshold test mode that will abort when …\nRegister <code>CCACTRL</code> reader\nRegister <code>CCACTRL</code> writer\nWrites raw bits to the register.\nEnergy above threshold AND carrier seen\nCarrier seen\nEnergy above threshold OR carrier seen\nBits 24:31 - Limit for occurances above CCACORRTHRES. When …\nBits 24:31 - Limit for occurances above CCACORRTHRES. When …\nBits 16:23 - CCA correlator busy threshold. Only relevant …\nBits 16:23 - CCA correlator busy threshold. Only relevant …\nBits 8:15 - CCA energy busy threshold. Used in all the CCA …\nBits 8:15 - CCA energy busy threshold. Used in all the CCA …\nBits 0:2 - CCA mode of operation\nBits 0:2 - CCA mode of operation\nEnergy above threshold\nEnergy above threshold test mode that will abort when …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>CARRIER_AND_ED_MODE</code>\nChecks if the value of the field is <code>CARRIER_MODE</code>\nChecks if the value of the field is <code>CARRIER_OR_ED_MODE</code>\nChecks if the value of the field is <code>ED_MODE</code>\nChecks if the value of the field is <code>ED_MODE_TEST1</code>\nGet enumerated values variant\n1: Clear the GPIO pattern\nClears GPIO pattern array for antenna control\nField <code>CLEARPATTERN</code> reader - Clears GPIO pattern array for …")