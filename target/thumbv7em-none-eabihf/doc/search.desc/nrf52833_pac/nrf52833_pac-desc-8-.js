searchState.loadedDescShard("nrf52833_pac", 8, "Checks if the value of the field is <code>POS2D_BM</code>\nChecks if the value of the field is <code>POS3D_BM</code>\nChecks if the value of the field is <code>POS4D_BM</code>\nChecks if the value of the field is <code>POS5D_BM</code>\nChecks if the value of the field is <code>POS6D_BM</code>\nChecks if the value of the field is <code>POS7D_BM</code>\nChecks if the value of the field is <code>POS8D_BM</code>\n-12 dBm\n-16 dBm\n-20 dBm\nDeprecated enumerator - -40 dBm\n-40 dBm\n-4 dBm\n-8 dBm\n+2 dBm\n+3 dBm\n+4 dBm\n+5 dBm\n+6 dBm\n+7 dBm\n+8 dBm\nBits 0:7 - RADIO output power\nBits 0:7 - RADIO output power\nGet enumerated values variant\nCONFIG (rw) register accessor: an alias for …\nEVENTS_VALRDY (rw) register accessor: an alias for …\nINTENCLR (rw) register accessor: an alias for …\nINTENSET (rw) register accessor: an alias for …\nRegister block\nSHORTS (rw) register accessor: an alias for …\nTASKS_START (w) register accessor: an alias for …\nTASKS_STOP (w) register accessor: an alias for …\nVALUE (r) register accessor: an alias for <code>Reg&lt;VALUE_SPEC&gt;</code>\nConfiguration register\n0x504 - Configuration register\nEvent being generated for every new random number written …\n0x100 - Event being generated for every new random number …\nReturns the argument unchanged.\nDisable interrupt\n0x308 - Disable interrupt\nEnable interrupt\n0x304 - Enable interrupt\nCalls <code>U::from(self)</code>.\nShortcuts between local events and tasks\n0x200 - Shortcuts between local events and tasks\nTask starting the random number generator\n0x00 - Task starting the random number generator\nTask stopping the random number generator\n0x04 - Task stopping the random number generator\nOutput random number\n0x508 - Output random number\nConfiguration register\nBias correction\nField <code>DERCEN</code> reader - Bias correction\nField <code>DERCEN</code> writer - Bias correction\n0: Disabled\n1: Enabled\nRegister <code>CONFIG</code> reader\nRegister <code>CONFIG</code> writer\nWrites raw bits to the register.\nBit 0 - Bias correction\nBit 0 - Bias correction\nDisabled\nEnabled\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nGet enumerated values variant\nEvent being generated for every new random number written …\nField <code>EVENTS_VALRDY</code> reader - Event being generated for …\nEvent being generated for every new random number written …\nField <code>EVENTS_VALRDY</code> writer - Event being generated for …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_VALRDY</code> reader\nRegister <code>EVENTS_VALRDY</code> writer\nWrites raw bits to the register.\nBit 0 - Event being generated for every new random number …\nBit 0 - Event being generated for every new random number …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\n1: Disable\n0: Read: Disabled\n1: Read: Enabled\nDisable interrupt\nRegister <code>INTENCLR</code> reader\nWrite ‘1’ to disable interrupt for event VALRDY\nWrite ‘1’ to disable interrupt for event VALRDY\nField <code>VALRDY</code> reader - Write ‘1’ to disable interrupt …\nField <code>VALRDY</code> writer - Write ‘1’ to disable interrupt …\nRegister <code>INTENCLR</code> writer\nWrites raw bits to the register.\nDisable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 0 - Write ‘1’ to disable interrupt for event VALRDY\nBit 0 - Write ‘1’ to disable interrupt for event VALRDY\nGet enumerated values variant\n0: Read: Disabled\n1: Read: Enabled\nEnable interrupt\nRegister <code>INTENSET</code> reader\n1: Enable\nWrite ‘1’ to enable interrupt for event VALRDY\nWrite ‘1’ to enable interrupt for event VALRDY\nField <code>VALRDY</code> reader - Write ‘1’ to enable interrupt …\nField <code>VALRDY</code> writer - Write ‘1’ to enable interrupt …\nRegister <code>INTENSET</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nEnable\nBit 0 - Write ‘1’ to enable interrupt for event VALRDY\nBit 0 - Write ‘1’ to enable interrupt for event VALRDY\nGet enumerated values variant\n0: Disable shortcut\n1: Enable shortcut\nRegister <code>SHORTS</code> reader\nShortcuts between local events and tasks\nShortcut between event VALRDY and task STOP\nField <code>VALRDY_STOP</code> reader - Shortcut between event VALRDY …\nField <code>VALRDY_STOP</code> writer - Shortcut between event VALRDY …\nRegister <code>SHORTS</code> writer\nWrites raw bits to the register.\nDisable shortcut\nEnable shortcut\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 0 - Shortcut between event VALRDY and task STOP\nBit 0 - Shortcut between event VALRDY and task STOP\nGet enumerated values variant\nTask starting the random number generator\nTask starting the random number generator\nField <code>TASKS_START</code> writer - Task starting the random number …\n1: Trigger task\nRegister <code>TASKS_START</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Task starting the random number generator\nTrigger task\nTask stopping the random number generator\nTask stopping the random number generator\nField <code>TASKS_STOP</code> writer - Task stopping the random number …\n1: Trigger task\nRegister <code>TASKS_STOP</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Task stopping the random number generator\nTrigger task\nRegister <code>VALUE</code> reader\nField <code>VALUE</code> reader - Generated random number\nOutput random number\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:7 - Generated random number\nCC (rw) register accessor: an alias for <code>Reg&lt;CC_SPEC&gt;</code>\nCOUNTER (r) register accessor: an alias for …\nEVENTS_COMPARE (rw) register accessor: an alias for …\nEVENTS_OVRFLW (rw) register accessor: an alias for …\nEVENTS_TICK (rw) register accessor: an alias for …\nEVTEN (rw) register accessor: an alias for <code>Reg&lt;EVTEN_SPEC&gt;</code>\nEVTENCLR (rw) register accessor: an alias for …\nEVTENSET (rw) register accessor: an alias for …\nINTENCLR (rw) register accessor: an alias for …\nINTENSET (rw) register accessor: an alias for …\nPRESCALER (rw) register accessor: an alias for …\nRegister block\nTASKS_CLEAR (w) register accessor: an alias for …\nTASKS_START (w) register accessor: an alias for …\nTASKS_STOP (w) register accessor: an alias for …\nTASKS_TRIGOVRFLW (w) register accessor: an alias for …\nDescription collection: Compare register n\n0x540..0x550 - Description collection: Compare register n\nCurrent COUNTER value\n0x504 - Current COUNTER value\nDescription collection: Compare event on CC[n] match\n0x140..0x150 - Description collection: Compare event on CC…\nEvent on COUNTER overflow\n0x104 - Event on COUNTER overflow\nEvent on COUNTER increment\n0x100 - Event on COUNTER increment\nEnable or disable event routing\n0x340 - Enable or disable event routing\nDisable event routing\n0x348 - Disable event routing\nEnable event routing\n0x344 - Enable event routing\nReturns the argument unchanged.\nDisable interrupt\n0x308 - Disable interrupt\nEnable interrupt\n0x304 - Enable interrupt\nCalls <code>U::from(self)</code>.\n12 bit prescaler for COUNTER frequency …\n0x508 - 12 bit prescaler for COUNTER frequency …\nClear RTC COUNTER\n0x08 - Clear RTC COUNTER\nStart RTC COUNTER\n0x00 - Start RTC COUNTER\nStop RTC COUNTER\n0x04 - Stop RTC COUNTER\nSet COUNTER to 0xFFFFF0\n0x0c - Set COUNTER to 0xFFFFF0\nDescription collection: Compare register n\nField <code>COMPARE</code> reader - Compare value\nField <code>COMPARE</code> writer - Compare value\nRegister <code>CC[%s]</code> reader\nRegister <code>CC[%s]</code> writer\nWrites raw bits to the register.\nBits 0:23 - Compare value\nBits 0:23 - Compare value\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>COUNTER</code> reader - Counter value\nCurrent COUNTER value\nRegister <code>COUNTER</code> reader\nBits 0:23 - Counter value\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCompare event on CC[n] match\nField <code>EVENTS_COMPARE</code> reader - Compare event on CC[n] match\nDescription collection: Compare event on CC[n] match\nField <code>EVENTS_COMPARE</code> writer - Compare event on CC[n] match\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_COMPARE[%s]</code> reader\nRegister <code>EVENTS_COMPARE[%s]</code> writer\nWrites raw bits to the register.\nBit 0 - Compare event on CC[n] match\nBit 0 - Compare event on CC[n] match\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nEvent on COUNTER overflow\nField <code>EVENTS_OVRFLW</code> reader - Event on COUNTER overflow\nEvent on COUNTER overflow\nField <code>EVENTS_OVRFLW</code> writer - Event on COUNTER overflow\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_OVRFLW</code> reader\nRegister <code>EVENTS_OVRFLW</code> writer\nWrites raw bits to the register.\nBit 0 - Event on COUNTER overflow\nBit 0 - Event on COUNTER overflow\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nEvent on COUNTER increment\nField <code>EVENTS_TICK</code> reader - Event on COUNTER increment\nEvent on COUNTER increment\nField <code>EVENTS_TICK</code> writer - Event on COUNTER increment\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_TICK</code> reader\nRegister <code>EVENTS_TICK</code> writer\nWrites raw bits to the register.\nBit 0 - Event on COUNTER increment\nBit 0 - Event on COUNTER increment\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nEnable or disable event routing for event COMPARE[0]\nField <code>COMPARE0</code> reader - Enable or disable event routing …\nField <code>COMPARE0</code> writer - Enable or disable event routing …\nEnable or disable event routing for event COMPARE[1]\nField <code>COMPARE1</code> reader - Enable or disable event routing …\nField <code>COMPARE1</code> writer - Enable or disable event routing …\nEnable or disable event routing for event COMPARE[2]\nField <code>COMPARE2</code> reader - Enable or disable event routing …\nField <code>COMPARE2</code> writer - Enable or disable event routing …\nEnable or disable event routing for event COMPARE[3]\nField <code>COMPARE3</code> reader - Enable or disable event routing …\nField <code>COMPARE3</code> writer - Enable or disable event routing …\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\nEnable or disable event routing\nEnable or disable event routing for event OVRFLW\nField <code>OVRFLW</code> reader - Enable or disable event routing for …\nField <code>OVRFLW</code> writer - Enable or disable event routing for …\nRegister <code>EVTEN</code> reader\nEnable or disable event routing for event TICK\nField <code>TICK</code> reader - Enable or disable event routing for …\nField <code>TICK</code> writer - Enable or disable event routing for …\nRegister <code>EVTEN</code> writer\nWrites raw bits to the register.\nBit 16 - Enable or disable event routing for event COMPARE…\nBit 16 - Enable or disable event routing for event COMPARE…\nBit 17 - Enable or disable event routing for event COMPARE…\nBit 17 - Enable or disable event routing for event COMPARE…\nBit 18 - Enable or disable event routing for event COMPARE…\nBit 18 - Enable or disable event routing for event COMPARE…\nBit 19 - Enable or disable event routing for event COMPARE…\nBit 19 - Enable or disable event routing for event COMPARE…\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 1 - Enable or disable event routing for event OVRFLW\nBit 1 - Enable or disable event routing for event OVRFLW\nBit 0 - Enable or disable event routing for event TICK\nBit 0 - Enable or disable event routing for event TICK\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\nWrite ‘1’ to disable event routing for event COMPARE[0]\nWrite ‘1’ to disable event routing for event COMPARE[0]\nField <code>COMPARE0</code> reader - Write ‘1’ to disable event …\nField <code>COMPARE0</code> writer - Write ‘1’ to disable event …\nWrite ‘1’ to disable event routing for event COMPARE[1]\nWrite ‘1’ to disable event routing for event COMPARE[1]\nField <code>COMPARE1</code> reader - Write ‘1’ to disable event …\nField <code>COMPARE1</code> writer - Write ‘1’ to disable event …\nWrite ‘1’ to disable event routing for event COMPARE[2]\nWrite ‘1’ to disable event routing for event COMPARE[2]\nField <code>COMPARE2</code> reader - Write ‘1’ to disable event …\nField <code>COMPARE2</code> writer - Write ‘1’ to disable event …\nWrite ‘1’ to disable event routing for event COMPARE[3]\nWrite ‘1’ to disable event routing for event COMPARE[3]\nField <code>COMPARE3</code> reader - Write ‘1’ to disable event …\nField <code>COMPARE3</code> writer - Write ‘1’ to disable event …\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\nDisable event routing\nWrite ‘1’ to disable event routing for event OVRFLW\nWrite ‘1’ to disable event routing for event OVRFLW\nField <code>OVRFLW</code> reader - Write ‘1’ to disable event …\nField <code>OVRFLW</code> writer - Write ‘1’ to disable event …\nRegister <code>EVTENCLR</code> reader\nWrite ‘1’ to disable event routing for event TICK\nWrite ‘1’ to disable event routing for event TICK\nField <code>TICK</code> reader - Write ‘1’ to disable event routing …\nField <code>TICK</code> writer - Write ‘1’ to disable event routing …\nRegister <code>EVTENCLR</code> writer\nWrites raw bits to the register.\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nBit 16 - Write ‘1’ to disable event routing for event …\nBit 16 - Write ‘1’ to disable event routing for event …\nBit 17 - Write ‘1’ to disable event routing for event …\nBit 17 - Write ‘1’ to disable event routing for event …\nBit 18 - Write ‘1’ to disable event routing for event …\nBit 18 - Write ‘1’ to disable event routing for event …\nBit 19 - Write ‘1’ to disable event routing for event …\nBit 19 - Write ‘1’ to disable event routing for event …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 1 - Write ‘1’ to disable event routing for event …\nBit 1 - Write ‘1’ to disable event routing for event …\nBit 0 - Write ‘1’ to disable event routing for event …\nBit 0 - Write ‘1’ to disable event routing for event …\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nWrite ‘1’ to enable event routing for event COMPARE[0]\nWrite ‘1’ to enable event routing for event COMPARE[0]\nField <code>COMPARE0</code> reader - Write ‘1’ to enable event …\nField <code>COMPARE0</code> writer - Write ‘1’ to enable event …\nWrite ‘1’ to enable event routing for event COMPARE[1]\nWrite ‘1’ to enable event routing for event COMPARE[1]\nField <code>COMPARE1</code> reader - Write ‘1’ to enable event …\nField <code>COMPARE1</code> writer - Write ‘1’ to enable event …\nWrite ‘1’ to enable event routing for event COMPARE[2]\nWrite ‘1’ to enable event routing for event COMPARE[2]\nField <code>COMPARE2</code> reader - Write ‘1’ to enable event …\nField <code>COMPARE2</code> writer - Write ‘1’ to enable event …\nWrite ‘1’ to enable event routing for event COMPARE[3]\nWrite ‘1’ to enable event routing for event COMPARE[3]\nField <code>COMPARE3</code> reader - Write ‘1’ to enable event …\nField <code>COMPARE3</code> writer - Write ‘1’ to enable event …\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\nEnable event routing\nWrite ‘1’ to enable event routing for event OVRFLW\nWrite ‘1’ to enable event routing for event OVRFLW\nField <code>OVRFLW</code> reader - Write ‘1’ to enable event …\nField <code>OVRFLW</code> writer - Write ‘1’ to enable event …\nRegister <code>EVTENSET</code> reader\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\nWrite ‘1’ to enable event routing for event TICK\nWrite ‘1’ to enable event routing for event TICK\nField <code>TICK</code> reader - Write ‘1’ to enable event routing …\nField <code>TICK</code> writer - Write ‘1’ to enable event routing …\nRegister <code>EVTENSET</code> writer\nWrites raw bits to the register.\nBit 16 - Write ‘1’ to enable event routing for event …\nBit 16 - Write ‘1’ to enable event routing for event …\nBit 17 - Write ‘1’ to enable event routing for event …\nBit 17 - Write ‘1’ to enable event routing for event …\nBit 18 - Write ‘1’ to enable event routing for event …\nBit 18 - Write ‘1’ to enable event routing for event …\nBit 19 - Write ‘1’ to enable event routing for event …\nBit 19 - Write ‘1’ to enable event routing for event …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 1 - Write ‘1’ to enable event routing for event …\nBit 1 - Write ‘1’ to enable event routing for event …\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nBit 0 - Write ‘1’ to enable event routing for event …\nBit 0 - Write ‘1’ to enable event routing for event …\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\nWrite ‘1’ to disable interrupt for event COMPARE[0]\nWrite ‘1’ to disable interrupt for event COMPARE[0]\nField <code>COMPARE0</code> reader - Write ‘1’ to disable interrupt …\nField <code>COMPARE0</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event COMPARE[1]\nWrite ‘1’ to disable interrupt for event COMPARE[1]\nField <code>COMPARE1</code> reader - Write ‘1’ to disable interrupt …\nField <code>COMPARE1</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event COMPARE[2]\nWrite ‘1’ to disable interrupt for event COMPARE[2]\nField <code>COMPARE2</code> reader - Write ‘1’ to disable interrupt …\nField <code>COMPARE2</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event COMPARE[3]\nWrite ‘1’ to disable interrupt for event COMPARE[3]\nField <code>COMPARE3</code> reader - Write ‘1’ to disable interrupt …\nField <code>COMPARE3</code> writer - Write ‘1’ to disable interrupt …\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\nDisable interrupt\nWrite ‘1’ to disable interrupt for event OVRFLW\nWrite ‘1’ to disable interrupt for event OVRFLW\nField <code>OVRFLW</code> reader - Write ‘1’ to disable interrupt …\nField <code>OVRFLW</code> writer - Write ‘1’ to disable interrupt …\nRegister <code>INTENCLR</code> reader\nWrite ‘1’ to disable interrupt for event TICK\nWrite ‘1’ to disable interrupt for event TICK\nField <code>TICK</code> reader - Write ‘1’ to disable interrupt for …\nField <code>TICK</code> writer - Write ‘1’ to disable interrupt for …\nRegister <code>INTENCLR</code> writer\nWrites raw bits to the register.\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nBit 16 - Write ‘1’ to disable interrupt for event …\nBit 16 - Write ‘1’ to disable interrupt for event …\nBit 17 - Write ‘1’ to disable interrupt for event …\nBit 17 - Write ‘1’ to disable interrupt for event …\nBit 18 - Write ‘1’ to disable interrupt for event …\nBit 18 - Write ‘1’ to disable interrupt for event …\nBit 19 - Write ‘1’ to disable interrupt for event …\nBit 19 - Write ‘1’ to disable interrupt for event …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 1 - Write ‘1’ to disable interrupt for event OVRFLW\nBit 1 - Write ‘1’ to disable interrupt for event OVRFLW\nBit 0 - Write ‘1’ to disable interrupt for event TICK\nBit 0 - Write ‘1’ to disable interrupt for event TICK\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nWrite ‘1’ to enable interrupt for event COMPARE[0]\nWrite ‘1’ to enable interrupt for event COMPARE[0]\nField <code>COMPARE0</code> reader - Write ‘1’ to enable interrupt …\nField <code>COMPARE0</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event COMPARE[1]\nWrite ‘1’ to enable interrupt for event COMPARE[1]\nField <code>COMPARE1</code> reader - Write ‘1’ to enable interrupt …\nField <code>COMPARE1</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event COMPARE[2]\nWrite ‘1’ to enable interrupt for event COMPARE[2]\nField <code>COMPARE2</code> reader - Write ‘1’ to enable interrupt …\nField <code>COMPARE2</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event COMPARE[3]\nWrite ‘1’ to enable interrupt for event COMPARE[3]\nField <code>COMPARE3</code> reader - Write ‘1’ to enable interrupt …\nField <code>COMPARE3</code> writer - Write ‘1’ to enable interrupt …\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\nEnable interrupt\nWrite ‘1’ to enable interrupt for event OVRFLW\nWrite ‘1’ to enable interrupt for event OVRFLW\nField <code>OVRFLW</code> reader - Write ‘1’ to enable interrupt …\nField <code>OVRFLW</code> writer - Write ‘1’ to enable interrupt …\nRegister <code>INTENSET</code> reader\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\nWrite ‘1’ to enable interrupt for event TICK\nWrite ‘1’ to enable interrupt for event TICK\nField <code>TICK</code> reader - Write ‘1’ to enable interrupt for …\nField <code>TICK</code> writer - Write ‘1’ to enable interrupt for …\nRegister <code>INTENSET</code> writer\nWrites raw bits to the register.\nBit 16 - Write ‘1’ to enable interrupt for event …\nBit 16 - Write ‘1’ to enable interrupt for event …\nBit 17 - Write ‘1’ to enable interrupt for event …\nBit 17 - Write ‘1’ to enable interrupt for event …\nBit 18 - Write ‘1’ to enable interrupt for event …\nBit 18 - Write ‘1’ to enable interrupt for event …\nBit 19 - Write ‘1’ to enable interrupt for event …\nBit 19 - Write ‘1’ to enable interrupt for event …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 1 - Write ‘1’ to enable interrupt for event OVRFLW\nBit 1 - Write ‘1’ to enable interrupt for event OVRFLW\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nBit 0 - Write ‘1’ to enable interrupt for event TICK\nBit 0 - Write ‘1’ to enable interrupt for event TICK\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nField <code>PRESCALER</code> reader - Prescaler value\n12 bit prescaler for COUNTER frequency …\nField <code>PRESCALER</code> writer - Prescaler value\nRegister <code>PRESCALER</code> reader\nRegister <code>PRESCALER</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:11 - Prescaler value\nBits 0:11 - Prescaler value\nClear RTC COUNTER\nClear RTC COUNTER\nField <code>TASKS_CLEAR</code> writer - Clear RTC COUNTER\n1: Trigger task\nRegister <code>TASKS_CLEAR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Clear RTC COUNTER\nTrigger task\nStart RTC COUNTER\nStart RTC COUNTER\nField <code>TASKS_START</code> writer - Start RTC COUNTER\n1: Trigger task\nRegister <code>TASKS_START</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Start RTC COUNTER\nTrigger task\nStop RTC COUNTER\nStop RTC COUNTER\nField <code>TASKS_STOP</code> writer - Stop RTC COUNTER\n1: Trigger task\nRegister <code>TASKS_STOP</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Stop RTC COUNTER\nTrigger task\nSet COUNTER to 0xFFFFF0\nSet COUNTER to 0xFFFFF0\nField <code>TASKS_TRIGOVRFLW</code> writer - Set COUNTER to 0xFFFFF0\n1: Trigger task\nRegister <code>TASKS_TRIGOVRFLW</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Set COUNTER to 0xFFFFF0\nTrigger task\nUnspecified\nENABLE (rw) register accessor: an alias for …\nEVENTS_CALIBRATEDONE (rw) register accessor: an alias for …\nPeripheral events.\nEVENTS_DONE (rw) register accessor: an alias for …\nEVENTS_END (rw) register accessor: an alias for …\nEVENTS_RESULTDONE (rw) register accessor: an alias for …\nEVENTS_STARTED (rw) register accessor: an alias for …\nEVENTS_STOPPED (rw) register accessor: an alias for …\nINTEN (rw) register accessor: an alias for <code>Reg&lt;INTEN_SPEC&gt;</code>\nINTENCLR (rw) register accessor: an alias for …\nINTENSET (rw) register accessor: an alias for …\nOVERSAMPLE (rw) register accessor: an alias for …\nRESOLUTION (rw) register accessor: an alias for …\nRESULT EasyDMA channel\nRegister block\nSAMPLERATE (rw) register accessor: an alias for …\nSTATUS (r) register accessor: an alias for <code>Reg&lt;STATUS_SPEC&gt;</code>\nTASKS_CALIBRATEOFFSET (w) register accessor: an alias for …\nTASKS_SAMPLE (w) register accessor: an alias for …\nTASKS_START (w) register accessor: an alias for …\nTASKS_STOP (w) register accessor: an alias for …\nCluster Unspecified\n0x510..0x590 - Unspecified\nEnable or disable SAADC\n0x500 - Enable or disable SAADC\nCalibration is complete\n0x110 - Calibration is complete\nCluster Peripheral events.\n0x118..0x158 - Peripheral events.\nA conversion task has been completed. Depending on the …\n0x108 - A conversion task has been completed. Depending on …\nThe SAADC has filled up the result buffer\n0x104 - The SAADC has filled up the result buffer\nResult ready for transfer to RAM\n0x10c - Result ready for transfer to RAM\nThe SAADC has started\n0x100 - The SAADC has started\nThe SAADC has stopped\n0x114 - The SAADC has stopped\nReturns the argument unchanged.\nEnable or disable interrupt\n0x300 - Enable or disable interrupt\nDisable interrupt\n0x308 - Disable interrupt\nEnable interrupt\n0x304 - Enable interrupt\nCalls <code>U::from(self)</code>.\nOversampling configuration. The RESOLUTION is applied …\n0x5f4 - Oversampling configuration. The RESOLUTION is …\nResolution configuration\n0x5f0 - Resolution configuration\nCluster RESULT EasyDMA channel\n0x62c..0x638 - RESULT EasyDMA channel\nControls normal or continuous sample rate\n0x5f8 - Controls normal or continuous sample rate\nStatus\n0x400 - Status\nStarts offset auto-calibration\n0x0c - Starts offset auto-calibration\nTakes one SAADC sample\n0x04 - Takes one SAADC sample\nStarts the SAADC and prepares the result buffer in RAM\n0x00 - Starts the SAADC and prepares the result buffer in …\nStops the SAADC and terminates all on-going conversions\n0x08 - Stops the SAADC and terminates all on-going …\nRegister block\nCONFIG (rw) register accessor: an alias for …\nLIMIT (rw) register accessor: an alias for <code>Reg&lt;LIMIT_SPEC&gt;</code>\nPSELN (rw) register accessor: an alias for <code>Reg&lt;PSELN_SPEC&gt;</code>\nPSELP (rw) register accessor: an alias for <code>Reg&lt;PSELP_SPEC&gt;</code>\nDescription cluster: Input configuration for CH[n]\n0x08 - Description cluster: Input configuration for CH[n]\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDescription cluster: High/low limits for event monitoring …\n0x0c - Description cluster: High/low limits for event …\nDescription cluster: Input negative pin selection for CH[n]\n0x04 - Description cluster: Input negative pin selection …\nDescription cluster: Input positive pin selection for CH[n]\n0x00 - Description cluster: Input positive pin selection …\nEnable burst mode\nField <code>BURST</code> reader - Enable burst mode\nField <code>BURST</code> writer - Enable burst mode\n0: Bypass resistor ladder\n0: Bypass resistor ladder\nDescription cluster: Input configuration for CH[n]\n1: Differential\n0: Burst mode is disabled (normal operation)\n1: Burst mode is enabled. SAADC takes 2^OVERSAMPLE number …\n5: 1\n4: 1/2\n3: 1/3\n2: 1/4\n1: 1/5\n0: 1/6\n6: 2\n7: 4\nGain control\nField <code>GAIN</code> reader - Gain control\nField <code>GAIN</code> writer - Gain control\n0: Internal reference (0.6 V)\nEnable differential mode\nField <code>MODE</code> reader - Enable differential mode\nField <code>MODE</code> writer - Enable differential mode\n1: Pull-down to GND\n1: Pull-down to GND\n2: Pull-up to VDD\n2: Pull-up to VDD\nRegister <code>CONFIG</code> reader\nReference control\nField <code>REFSEL</code> reader - Reference control\nField <code>REFSEL</code> writer - Reference control\nNegative channel resistor control\nField <code>RESN</code> reader - Negative channel resistor control\nField <code>RESN</code> writer - Negative channel resistor control\nPositive channel resistor control\nField <code>RESP</code> reader - Positive channel resistor control\nField <code>RESP</code> writer - Positive channel resistor control\n0: Single-ended, PSELN will be ignored, negative input to …\nAcquisition time, the time the SAADC uses to sample the …\nField <code>TACQ</code> reader - Acquisition time, the time the SAADC …\nField <code>TACQ</code> writer - Acquisition time, the time the SAADC …\n3: Set input at VDD/2\n3: Set input at VDD/2\n1: VDD/4 as reference\nRegister <code>CONFIG</code> writer\n2: 10 us\n10 us\n3: 15 us\n15 us\n4: 20 us\n20 us\n0: 3 us\n3 us\n5: 40 us\n40 us\n1: 5 us\n5 us\nWrites raw bits to the register.\nBit 24 - Enable burst mode\nBit 24 - Enable burst mode\nBypass resistor ladder\nBypass resistor ladder\nDifferential\nBurst mode is disabled (normal operation)\nBurst mode is enabled. SAADC takes 2^OVERSAMPLE number of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBits 8:10 - Gain control\nBits 8:10 - Gain control\n1\n1/2\n1/3\n1/4\n1/5\n1/6\n2\n4\nInternal reference (0.6 V)\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>_10US</code>\nChecks if the value of the field is <code>_15US</code>\nChecks if the value of the field is <code>_20US</code>\nChecks if the value of the field is <code>_3US</code>\nChecks if the value of the field is <code>_40US</code>\nChecks if the value of the field is <code>_5US</code>\nChecks if the value of the field is <code>BYPASS</code>\nChecks if the value of the field is <code>BYPASS</code>\nChecks if the value of the field is <code>DIFF</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>GAIN1</code>\nChecks if the value of the field is <code>GAIN1_2</code>\nChecks if the value of the field is <code>GAIN1_3</code>\nChecks if the value of the field is <code>GAIN1_4</code>\nChecks if the value of the field is <code>GAIN1_5</code>\nChecks if the value of the field is <code>GAIN1_6</code>\nChecks if the value of the field is <code>GAIN2</code>\nChecks if the value of the field is <code>GAIN4</code>\nChecks if the value of the field is <code>INTERNAL</code>\nChecks if the value of the field is <code>PULLDOWN</code>\nChecks if the value of the field is <code>PULLDOWN</code>\nChecks if the value of the field is <code>PULLUP</code>\nChecks if the value of the field is <code>PULLUP</code>\nChecks if the value of the field is <code>SE</code>\nChecks if the value of the field is <code>VDD1_2</code>\nChecks if the value of the field is <code>VDD1_2</code>\nChecks if the value of the field is <code>VDD1_4</code>\nBit 20 - Enable differential mode\nBit 20 - Enable differential mode\nPull-down to GND\nPull-down to GND\nPull-up to VDD\nPull-up to VDD\nBit 12 - Reference control\nBit 12 - Reference control\nBits 4:5 - Negative channel resistor control\nBits 4:5 - Negative channel resistor control\nBits 0:1 - Positive channel resistor control\nBits 0:1 - Positive channel resistor control\nSingle-ended, PSELN will be ignored, negative input to …\nBits 16:18 - Acquisition time, the time the SAADC uses to …\nBits 16:18 - Acquisition time, the time the SAADC uses to …\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nSet input at VDD/2\nSet input at VDD/2\nVDD/4 as reference\nField <code>HIGH</code> reader - High level limit\nField <code>HIGH</code> writer - High level limit\nDescription cluster: High/low limits for event monitoring …\nField <code>LOW</code> reader - Low level limit\nField <code>LOW</code> writer - Low level limit\nRegister <code>LIMIT</code> reader\nRegister <code>LIMIT</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBits 16:31 - High level limit\nBits 16:31 - High level limit\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:15 - Low level limit\nBits 0:15 - Low level limit\n1: AIN0\n2: AIN1\n3: AIN2\n4: AIN3\n5: AIN4\n6: AIN5\n7: AIN6\n8: AIN7\n0: Not connected\nAnalog negative input, enables differential channel\nField <code>PSELN</code> reader - Analog negative input, enables …\nDescription cluster: Input negative pin selection for CH[n]\nField <code>PSELN</code> writer - Analog negative input, enables …\nRegister <code>PSELN</code> reader\n9: VDD\n13: VDDH/5\nRegister <code>PSELN</code> writer\nAIN0\nAIN1\nAIN2\nAIN3\nAIN4\nAIN5\nAIN6\nAIN7\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>ANALOG_INPUT0</code>\nChecks if the value of the field is <code>ANALOG_INPUT1</code>\nChecks if the value of the field is <code>ANALOG_INPUT2</code>\nChecks if the value of the field is <code>ANALOG_INPUT3</code>\nChecks if the value of the field is <code>ANALOG_INPUT4</code>\nChecks if the value of the field is <code>ANALOG_INPUT5</code>\nChecks if the value of the field is <code>ANALOG_INPUT6</code>\nChecks if the value of the field is <code>ANALOG_INPUT7</code>\nChecks if the value of the field is <code>NC</code>\nChecks if the value of the field is <code>VDD</code>\nChecks if the value of the field is <code>VDDHDIV5</code>\nNot connected\nBits 0:4 - Analog negative input, enables differential …\nBits 0:4 - Analog negative input, enables differential …\nGet enumerated values variant\nVDD\nVDDH/5\n1: AIN0\n2: AIN1\n3: AIN2\n4: AIN3\n5: AIN4\n6: AIN5\n7: AIN6\n8: AIN7\n0: Not connected\nAnalog positive input channel\nField <code>PSELP</code> reader - Analog positive input channel\nDescription cluster: Input positive pin selection for CH[n]\nField <code>PSELP</code> writer - Analog positive input channel\nRegister <code>PSELP</code> reader\n9: VDD\n13: VDDH/5\nRegister <code>PSELP</code> writer\nAIN0\nAIN1\nAIN2\nAIN3\nAIN4\nAIN5\nAIN6\nAIN7\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>ANALOG_INPUT0</code>\nChecks if the value of the field is <code>ANALOG_INPUT1</code>\nChecks if the value of the field is <code>ANALOG_INPUT2</code>\nChecks if the value of the field is <code>ANALOG_INPUT3</code>\nChecks if the value of the field is <code>ANALOG_INPUT4</code>\nChecks if the value of the field is <code>ANALOG_INPUT5</code>\nChecks if the value of the field is <code>ANALOG_INPUT6</code>\nChecks if the value of the field is <code>ANALOG_INPUT7</code>\nChecks if the value of the field is <code>NC</code>\nChecks if the value of the field is <code>VDD</code>\nChecks if the value of the field is <code>VDDHDIV5</code>\nNot connected\nBits 0:4 - Analog positive input channel\nBits 0:4 - Analog positive input channel\nGet enumerated values variant\nVDD\nVDDH/5\n0: Disable SAADC\n1: Enable SAADC\nEnable or disable SAADC\nField <code>ENABLE</code> reader - Enable or disable SAADC\nEnable or disable SAADC\nField <code>ENABLE</code> writer - Enable or disable SAADC\nRegister <code>ENABLE</code> reader\nRegister <code>ENABLE</code> writer\nWrites raw bits to the register.\nDisable SAADC\nBit 0 - Enable or disable SAADC\nBit 0 - Enable or disable SAADC\nEnable SAADC\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nGet enumerated values variant\nCalibration is complete\nField <code>EVENTS_CALIBRATEDONE</code> reader - Calibration is complete\nCalibration is complete\nField <code>EVENTS_CALIBRATEDONE</code> writer - Calibration is complete\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_CALIBRATEDONE</code> reader\nRegister <code>EVENTS_CALIBRATEDONE</code> writer\nWrites raw bits to the register.\nBit 0 - Calibration is complete\nBit 0 - Calibration is complete\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nRegister block\nLIMITH (rw) register accessor: an alias for …\nLIMITL (rw) register accessor: an alias for …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDescription cluster: Last result is equal or above CH[n…\n0x00 - Description cluster: Last result is equal or above …\nDescription cluster: Last result is equal or below CH[n…\n0x04 - Description cluster: Last result is equal or below …\n1: Event generated\nLast result is equal or above CH[n].LIMIT.HIGH\nField <code>LIMITH</code> reader - Last result is equal or above CH[n…\nDescription cluster: Last result is equal or above CH[n…\nField <code>LIMITH</code> writer - Last result is equal or above CH[n…\n0: Event not generated\nRegister <code>LIMITH</code> reader\nRegister <code>LIMITH</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nBit 0 - Last result is equal or above CH[n].LIMIT.HIGH\nBit 0 - Last result is equal or above CH[n].LIMIT.HIGH\nEvent not generated\nGet enumerated values variant\n1: Event generated\nLast result is equal or below CH[n].LIMIT.LOW\nField <code>LIMITL</code> reader - Last result is equal or below CH[n…\nDescription cluster: Last result is equal or below CH[n…\nField <code>LIMITL</code> writer - Last result is equal or below CH[n…\n0: Event not generated\nRegister <code>LIMITL</code> reader\nRegister <code>LIMITL</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nBit 0 - Last result is equal or below CH[n].LIMIT.LOW\nBit 0 - Last result is equal or below CH[n].LIMIT.LOW\nEvent not generated\nGet enumerated values variant\nA conversion task has been completed. Depending on the …\nField <code>EVENTS_DONE</code> reader - A conversion task has been …\nA conversion task has been completed. Depending on the …\nField <code>EVENTS_DONE</code> writer - A conversion task has been …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_DONE</code> reader\nRegister <code>EVENTS_DONE</code> writer\nWrites raw bits to the register.\nBit 0 - A conversion task has been completed. Depending on …\nBit 0 - A conversion task has been completed. Depending on …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nThe SAADC has filled up the result buffer\nField <code>EVENTS_END</code> reader - The SAADC has filled up the …\nThe SAADC has filled up the result buffer\nField <code>EVENTS_END</code> writer - The SAADC has filled up the …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_END</code> reader\nRegister <code>EVENTS_END</code> writer\nWrites raw bits to the register.\nBit 0 - The SAADC has filled up the result buffer\nBit 0 - The SAADC has filled up the result buffer\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nResult ready for transfer to RAM\nField <code>EVENTS_RESULTDONE</code> reader - Result ready for transfer …\nResult ready for transfer to RAM\nField <code>EVENTS_RESULTDONE</code> writer - Result ready for transfer …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_RESULTDONE</code> reader\nRegister <code>EVENTS_RESULTDONE</code> writer\nWrites raw bits to the register.\nBit 0 - Result ready for transfer to RAM\nBit 0 - Result ready for transfer to RAM\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nThe SAADC has started\nField <code>EVENTS_STARTED</code> reader - The SAADC has started\nThe SAADC has started\nField <code>EVENTS_STARTED</code> writer - The SAADC has started\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_STARTED</code> reader\nRegister <code>EVENTS_STARTED</code> writer\nWrites raw bits to the register.\nBit 0 - The SAADC has started\nBit 0 - The SAADC has started\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nThe SAADC has stopped\nField <code>EVENTS_STOPPED</code> reader - The SAADC has stopped\nThe SAADC has stopped\nField <code>EVENTS_STOPPED</code> writer - The SAADC has stopped\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_STOPPED</code> reader\nRegister <code>EVENTS_STOPPED</code> writer\nWrites raw bits to the register.\nBit 0 - The SAADC has stopped\nBit 0 - The SAADC has stopped\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nEnable or disable interrupt for event CALIBRATEDONE\nField <code>CALIBRATEDONE</code> reader - Enable or disable interrupt …\nField <code>CALIBRATEDONE</code> writer - Enable or disable interrupt …\nEnable or disable interrupt for event CH0LIMITH\nField <code>CH0LIMITH</code> reader - Enable or disable interrupt for …\nField <code>CH0LIMITH</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for event CH0LIMITL\nField <code>CH0LIMITL</code> reader - Enable or disable interrupt for …\nField <code>CH0LIMITL</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for event CH1LIMITH\nField <code>CH1LIMITH</code> reader - Enable or disable interrupt for …\nField <code>CH1LIMITH</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for event CH1LIMITL\nField <code>CH1LIMITL</code> reader - Enable or disable interrupt for …\nField <code>CH1LIMITL</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for event CH2LIMITH\nField <code>CH2LIMITH</code> reader - Enable or disable interrupt for …\nField <code>CH2LIMITH</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for event CH2LIMITL\nField <code>CH2LIMITL</code> reader - Enable or disable interrupt for …\nField <code>CH2LIMITL</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for event CH3LIMITH\nField <code>CH3LIMITH</code> reader - Enable or disable interrupt for …\nField <code>CH3LIMITH</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for event CH3LIMITL\nField <code>CH3LIMITL</code> reader - Enable or disable interrupt for …\nField <code>CH3LIMITL</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for event CH4LIMITH\nField <code>CH4LIMITH</code> reader - Enable or disable interrupt for …\nField <code>CH4LIMITH</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for event CH4LIMITL\nField <code>CH4LIMITL</code> reader - Enable or disable interrupt for …\nField <code>CH4LIMITL</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for event CH5LIMITH\nField <code>CH5LIMITH</code> reader - Enable or disable interrupt for …\nField <code>CH5LIMITH</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for event CH5LIMITL\nField <code>CH5LIMITL</code> reader - Enable or disable interrupt for …\nField <code>CH5LIMITL</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for event CH6LIMITH\nField <code>CH6LIMITH</code> reader - Enable or disable interrupt for …\nField <code>CH6LIMITH</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for event CH6LIMITL\nField <code>CH6LIMITL</code> reader - Enable or disable interrupt for …\nField <code>CH6LIMITL</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for event CH7LIMITH\nField <code>CH7LIMITH</code> reader - Enable or disable interrupt for …\nField <code>CH7LIMITH</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for event CH7LIMITL\nField <code>CH7LIMITL</code> reader - Enable or disable interrupt for …\nField <code>CH7LIMITL</code> writer - Enable or disable interrupt for …\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\nEnable or disable interrupt for event DONE\nField <code>DONE</code> reader - Enable or disable interrupt for event …\nField <code>DONE</code> writer - Enable or disable interrupt for event …\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\nEnable or disable interrupt for event END\nField <code>END</code> reader - Enable or disable interrupt for event …\nField <code>END</code> writer - Enable or disable interrupt for event …\nEnable or disable interrupt\nRegister <code>INTEN</code> reader\nEnable or disable interrupt for event RESULTDONE\nField <code>RESULTDONE</code> reader - Enable or disable interrupt for …\nField <code>RESULTDONE</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for event STARTED\nField <code>STARTED</code> reader - Enable or disable interrupt for …\nField <code>STARTED</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for event STOPPED\nField <code>STOPPED</code> reader - Enable or disable interrupt for …\nField <code>STOPPED</code> writer - Enable or disable interrupt for …\nRegister <code>INTEN</code> writer\nWrites raw bits to the register.\nBit 4 - Enable or disable interrupt for event CALIBRATEDONE\nBit 4 - Enable or disable interrupt for event CALIBRATEDONE\nBit 6 - Enable or disable interrupt for event CH0LIMITH\nBit 6 - Enable or disable interrupt for event CH0LIMITH\nBit 7 - Enable or disable interrupt for event CH0LIMITL\nBit 7 - Enable or disable interrupt for event CH0LIMITL\nBit 8 - Enable or disable interrupt for event CH1LIMITH\nBit 8 - Enable or disable interrupt for event CH1LIMITH\nBit 9 - Enable or disable interrupt for event CH1LIMITL\nBit 9 - Enable or disable interrupt for event CH1LIMITL\nBit 10 - Enable or disable interrupt for event CH2LIMITH\nBit 10 - Enable or disable interrupt for event CH2LIMITH\nBit 11 - Enable or disable interrupt for event CH2LIMITL\nBit 11 - Enable or disable interrupt for event CH2LIMITL\nBit 12 - Enable or disable interrupt for event CH3LIMITH\nBit 12 - Enable or disable interrupt for event CH3LIMITH\nBit 13 - Enable or disable interrupt for event CH3LIMITL\nBit 13 - Enable or disable interrupt for event CH3LIMITL\nBit 14 - Enable or disable interrupt for event CH4LIMITH\nBit 14 - Enable or disable interrupt for event CH4LIMITH\nBit 15 - Enable or disable interrupt for event CH4LIMITL\nBit 15 - Enable or disable interrupt for event CH4LIMITL\nBit 16 - Enable or disable interrupt for event CH5LIMITH\nBit 16 - Enable or disable interrupt for event CH5LIMITH\nBit 17 - Enable or disable interrupt for event CH5LIMITL\nBit 17 - Enable or disable interrupt for event CH5LIMITL\nBit 18 - Enable or disable interrupt for event CH6LIMITH\nBit 18 - Enable or disable interrupt for event CH6LIMITH\nBit 19 - Enable or disable interrupt for event CH6LIMITL\nBit 19 - Enable or disable interrupt for event CH6LIMITL\nBit 20 - Enable or disable interrupt for event CH7LIMITH\nBit 20 - Enable or disable interrupt for event CH7LIMITH\nBit 21 - Enable or disable interrupt for event CH7LIMITL\nBit 21 - Enable or disable interrupt for event CH7LIMITL\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nBit 2 - Enable or disable interrupt for event DONE\nBit 2 - Enable or disable interrupt for event DONE\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nBit 1 - Enable or disable interrupt for event END\nBit 1 - Enable or disable interrupt for event END\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 3 - Enable or disable interrupt for event RESULTDONE\nBit 3 - Enable or disable interrupt for event RESULTDONE\nBit 0 - Enable or disable interrupt for event STARTED\nBit 0 - Enable or disable interrupt for event STARTED\nBit 5 - Enable or disable interrupt for event STOPPED\nBit 5 - Enable or disable interrupt for event STOPPED\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nWrite ‘1’ to disable interrupt for event CALIBRATEDONE\nWrite ‘1’ to disable interrupt for event CALIBRATEDONE\nField <code>CALIBRATEDONE</code> reader - Write ‘1’ to disable …\nField <code>CALIBRATEDONE</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event CH0LIMITH\nWrite ‘1’ to disable interrupt for event CH0LIMITH\nField <code>CH0LIMITH</code> reader - Write ‘1’ to disable …\nField <code>CH0LIMITH</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event CH0LIMITL\nWrite ‘1’ to disable interrupt for event CH0LIMITL\nField <code>CH0LIMITL</code> reader - Write ‘1’ to disable …\nField <code>CH0LIMITL</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event CH1LIMITH\nWrite ‘1’ to disable interrupt for event CH1LIMITH\nField <code>CH1LIMITH</code> reader - Write ‘1’ to disable …\nField <code>CH1LIMITH</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event CH1LIMITL\nWrite ‘1’ to disable interrupt for event CH1LIMITL\nField <code>CH1LIMITL</code> reader - Write ‘1’ to disable …\nField <code>CH1LIMITL</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event CH2LIMITH\nWrite ‘1’ to disable interrupt for event CH2LIMITH\nField <code>CH2LIMITH</code> reader - Write ‘1’ to disable …\nField <code>CH2LIMITH</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event CH2LIMITL\nWrite ‘1’ to disable interrupt for event CH2LIMITL\nField <code>CH2LIMITL</code> reader - Write ‘1’ to disable …\nField <code>CH2LIMITL</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event CH3LIMITH\nWrite ‘1’ to disable interrupt for event CH3LIMITH\nField <code>CH3LIMITH</code> reader - Write ‘1’ to disable …\nField <code>CH3LIMITH</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event CH3LIMITL\nWrite ‘1’ to disable interrupt for event CH3LIMITL\nField <code>CH3LIMITL</code> reader - Write ‘1’ to disable …\nField <code>CH3LIMITL</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event CH4LIMITH\nWrite ‘1’ to disable interrupt for event CH4LIMITH\nField <code>CH4LIMITH</code> reader - Write ‘1’ to disable …\nField <code>CH4LIMITH</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event CH4LIMITL\nWrite ‘1’ to disable interrupt for event CH4LIMITL\nField <code>CH4LIMITL</code> reader - Write ‘1’ to disable …\nField <code>CH4LIMITL</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event CH5LIMITH\nWrite ‘1’ to disable interrupt for event CH5LIMITH\nField <code>CH5LIMITH</code> reader - Write ‘1’ to disable …\nField <code>CH5LIMITH</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event CH5LIMITL\nWrite ‘1’ to disable interrupt for event CH5LIMITL\nField <code>CH5LIMITL</code> reader - Write ‘1’ to disable …\nField <code>CH5LIMITL</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event CH6LIMITH\nWrite ‘1’ to disable interrupt for event CH6LIMITH\nField <code>CH6LIMITH</code> reader - Write ‘1’ to disable …\nField <code>CH6LIMITH</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event CH6LIMITL\nWrite ‘1’ to disable interrupt for event CH6LIMITL\nField <code>CH6LIMITL</code> reader - Write ‘1’ to disable …\nField <code>CH6LIMITL</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event CH7LIMITH\nWrite ‘1’ to disable interrupt for event CH7LIMITH\nField <code>CH7LIMITH</code> reader - Write ‘1’ to disable …\nField <code>CH7LIMITH</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event CH7LIMITL\nWrite ‘1’ to disable interrupt for event CH7LIMITL\nField <code>CH7LIMITL</code> reader - Write ‘1’ to disable …\nField <code>CH7LIMITL</code> writer - Write ‘1’ to disable …\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\nWrite ‘1’ to disable interrupt for event DONE\nWrite ‘1’ to disable interrupt for event DONE\nField <code>DONE</code> reader - Write ‘1’ to disable interrupt for …\nField <code>DONE</code> writer - Write ‘1’ to disable interrupt for …\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\nWrite ‘1’ to disable interrupt for event END\nWrite ‘1’ to disable interrupt for event END\nField <code>END</code> reader - Write ‘1’ to disable interrupt for …\nField <code>END</code> writer - Write ‘1’ to disable interrupt for …\nDisable interrupt\nRegister <code>INTENCLR</code> reader\nWrite ‘1’ to disable interrupt for event RESULTDONE\nWrite ‘1’ to disable interrupt for event RESULTDONE\nField <code>RESULTDONE</code> reader - Write ‘1’ to disable …\nField <code>RESULTDONE</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event STARTED\nWrite ‘1’ to disable interrupt for event STARTED\nField <code>STARTED</code> reader - Write ‘1’ to disable interrupt …\nField <code>STARTED</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event STOPPED\nWrite ‘1’ to disable interrupt for event STOPPED\nField <code>STOPPED</code> reader - Write ‘1’ to disable interrupt …\nField <code>STOPPED</code> writer - Write ‘1’ to disable interrupt …\nRegister <code>INTENCLR</code> writer\nWrites raw bits to the register.\nBit 4 - Write ‘1’ to disable interrupt for event …\nBit 4 - Write ‘1’ to disable interrupt for event …\nBit 6 - Write ‘1’ to disable interrupt for event …\nBit 6 - Write ‘1’ to disable interrupt for event …\nBit 7 - Write ‘1’ to disable interrupt for event …\nBit 7 - Write ‘1’ to disable interrupt for event …\nBit 8 - Write ‘1’ to disable interrupt for event …\nBit 8 - Write ‘1’ to disable interrupt for event …\nBit 9 - Write ‘1’ to disable interrupt for event …\nBit 9 - Write ‘1’ to disable interrupt for event …\nBit 10 - Write ‘1’ to disable interrupt for event …\nBit 10 - Write ‘1’ to disable interrupt for event …\nBit 11 - Write ‘1’ to disable interrupt for event …\nBit 11 - Write ‘1’ to disable interrupt for event …\nBit 12 - Write ‘1’ to disable interrupt for event …\nBit 12 - Write ‘1’ to disable interrupt for event …\nBit 13 - Write ‘1’ to disable interrupt for event …\nBit 13 - Write ‘1’ to disable interrupt for event …\nBit 14 - Write ‘1’ to disable interrupt for event …\nBit 14 - Write ‘1’ to disable interrupt for event …\nBit 15 - Write ‘1’ to disable interrupt for event …\nBit 15 - Write ‘1’ to disable interrupt for event …\nBit 16 - Write ‘1’ to disable interrupt for event …\nBit 16 - Write ‘1’ to disable interrupt for event …\nBit 17 - Write ‘1’ to disable interrupt for event …\nBit 17 - Write ‘1’ to disable interrupt for event …\nBit 18 - Write ‘1’ to disable interrupt for event …\nBit 18 - Write ‘1’ to disable interrupt for event …\nBit 19 - Write ‘1’ to disable interrupt for event …\nBit 19 - Write ‘1’ to disable interrupt for event …\nBit 20 - Write ‘1’ to disable interrupt for event …\nBit 20 - Write ‘1’ to disable interrupt for event …\nBit 21 - Write ‘1’ to disable interrupt for event …\nBit 21 - Write ‘1’ to disable interrupt for event …\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nBit 2 - Write ‘1’ to disable interrupt for event DONE\nBit 2 - Write ‘1’ to disable interrupt for event DONE\nBit 1 - Write ‘1’ to disable interrupt for event END\nBit 1 - Write ‘1’ to disable interrupt for event END\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 3 - Write ‘1’ to disable interrupt for event …\nBit 3 - Write ‘1’ to disable interrupt for event …\nBit 0 - Write ‘1’ to disable interrupt for event …\nBit 0 - Write ‘1’ to disable interrupt for event …\nBit 5 - Write ‘1’ to disable interrupt for event …\nBit 5 - Write ‘1’ to disable interrupt for event …\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nWrite ‘1’ to enable interrupt for event CALIBRATEDONE\nWrite ‘1’ to enable interrupt for event CALIBRATEDONE\nField <code>CALIBRATEDONE</code> reader - Write ‘1’ to enable …\nField <code>CALIBRATEDONE</code> writer - Write ‘1’ to enable …\nWrite ‘1’ to enable interrupt for event CH0LIMITH\nWrite ‘1’ to enable interrupt for event CH0LIMITH\nField <code>CH0LIMITH</code> reader - Write ‘1’ to enable interrupt …\nField <code>CH0LIMITH</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event CH0LIMITL\nWrite ‘1’ to enable interrupt for event CH0LIMITL\nField <code>CH0LIMITL</code> reader - Write ‘1’ to enable interrupt …\nField <code>CH0LIMITL</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event CH1LIMITH\nWrite ‘1’ to enable interrupt for event CH1LIMITH\nField <code>CH1LIMITH</code> reader - Write ‘1’ to enable interrupt …\nField <code>CH1LIMITH</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event CH1LIMITL\nWrite ‘1’ to enable interrupt for event CH1LIMITL\nField <code>CH1LIMITL</code> reader - Write ‘1’ to enable interrupt …\nField <code>CH1LIMITL</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event CH2LIMITH\nWrite ‘1’ to enable interrupt for event CH2LIMITH\nField <code>CH2LIMITH</code> reader - Write ‘1’ to enable interrupt …\nField <code>CH2LIMITH</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event CH2LIMITL\nWrite ‘1’ to enable interrupt for event CH2LIMITL\nField <code>CH2LIMITL</code> reader - Write ‘1’ to enable interrupt …\nField <code>CH2LIMITL</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event CH3LIMITH\nWrite ‘1’ to enable interrupt for event CH3LIMITH\nField <code>CH3LIMITH</code> reader - Write ‘1’ to enable interrupt …\nField <code>CH3LIMITH</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event CH3LIMITL\nWrite ‘1’ to enable interrupt for event CH3LIMITL\nField <code>CH3LIMITL</code> reader - Write ‘1’ to enable interrupt …\nField <code>CH3LIMITL</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event CH4LIMITH\nWrite ‘1’ to enable interrupt for event CH4LIMITH\nField <code>CH4LIMITH</code> reader - Write ‘1’ to enable interrupt …\nField <code>CH4LIMITH</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event CH4LIMITL\nWrite ‘1’ to enable interrupt for event CH4LIMITL\nField <code>CH4LIMITL</code> reader - Write ‘1’ to enable interrupt …\nField <code>CH4LIMITL</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event CH5LIMITH\nWrite ‘1’ to enable interrupt for event CH5LIMITH\nField <code>CH5LIMITH</code> reader - Write ‘1’ to enable interrupt …\nField <code>CH5LIMITH</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event CH5LIMITL\nWrite ‘1’ to enable interrupt for event CH5LIMITL\nField <code>CH5LIMITL</code> reader - Write ‘1’ to enable interrupt …\nField <code>CH5LIMITL</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event CH6LIMITH\nWrite ‘1’ to enable interrupt for event CH6LIMITH\nField <code>CH6LIMITH</code> reader - Write ‘1’ to enable interrupt …\nField <code>CH6LIMITH</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event CH6LIMITL\nWrite ‘1’ to enable interrupt for event CH6LIMITL\nField <code>CH6LIMITL</code> reader - Write ‘1’ to enable interrupt …\nField <code>CH6LIMITL</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event CH7LIMITH\nWrite ‘1’ to enable interrupt for event CH7LIMITH\nField <code>CH7LIMITH</code> reader - Write ‘1’ to enable interrupt …\nField <code>CH7LIMITH</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event CH7LIMITL\nWrite ‘1’ to enable interrupt for event CH7LIMITL\nField <code>CH7LIMITL</code> reader - Write ‘1’ to enable interrupt …\nField <code>CH7LIMITL</code> writer - Write ‘1’ to enable interrupt …\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\nWrite ‘1’ to enable interrupt for event DONE\nWrite ‘1’ to enable interrupt for event DONE\nField <code>DONE</code> reader - Write ‘1’ to enable interrupt for …\nField <code>DONE</code> writer - Write ‘1’ to enable interrupt for …\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\nWrite ‘1’ to enable interrupt for event END\nWrite ‘1’ to enable interrupt for event END\nField <code>END</code> reader - Write ‘1’ to enable interrupt for …\nField <code>END</code> writer - Write ‘1’ to enable interrupt for …\nEnable interrupt\nRegister <code>INTENSET</code> reader\nWrite ‘1’ to enable interrupt for event RESULTDONE\nWrite ‘1’ to enable interrupt for event RESULTDONE\nField <code>RESULTDONE</code> reader - Write ‘1’ to enable …\nField <code>RESULTDONE</code> writer - Write ‘1’ to enable …\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\nWrite ‘1’ to enable interrupt for event STARTED\nWrite ‘1’ to enable interrupt for event STARTED\nField <code>STARTED</code> reader - Write ‘1’ to enable interrupt …\nField <code>STARTED</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event STOPPED\nWrite ‘1’ to enable interrupt for event STOPPED\nField <code>STOPPED</code> reader - Write ‘1’ to enable interrupt …\nField <code>STOPPED</code> writer - Write ‘1’ to enable interrupt …\nRegister <code>INTENSET</code> writer\nWrites raw bits to the register.\nBit 4 - Write ‘1’ to enable interrupt for event …\nBit 4 - Write ‘1’ to enable interrupt for event …\nBit 6 - Write ‘1’ to enable interrupt for event …\nBit 6 - Write ‘1’ to enable interrupt for event …\nBit 7 - Write ‘1’ to enable interrupt for event …\nBit 7 - Write ‘1’ to enable interrupt for event …\nBit 8 - Write ‘1’ to enable interrupt for event …\nBit 8 - Write ‘1’ to enable interrupt for event …\nBit 9 - Write ‘1’ to enable interrupt for event …\nBit 9 - Write ‘1’ to enable interrupt for event …\nBit 10 - Write ‘1’ to enable interrupt for event …\nBit 10 - Write ‘1’ to enable interrupt for event …\nBit 11 - Write ‘1’ to enable interrupt for event …\nBit 11 - Write ‘1’ to enable interrupt for event …\nBit 12 - Write ‘1’ to enable interrupt for event …\nBit 12 - Write ‘1’ to enable interrupt for event …\nBit 13 - Write ‘1’ to enable interrupt for event …\nBit 13 - Write ‘1’ to enable interrupt for event …\nBit 14 - Write ‘1’ to enable interrupt for event …\nBit 14 - Write ‘1’ to enable interrupt for event …\nBit 15 - Write ‘1’ to enable interrupt for event …\nBit 15 - Write ‘1’ to enable interrupt for event …\nBit 16 - Write ‘1’ to enable interrupt for event …\nBit 16 - Write ‘1’ to enable interrupt for event …\nBit 17 - Write ‘1’ to enable interrupt for event …\nBit 17 - Write ‘1’ to enable interrupt for event …\nBit 18 - Write ‘1’ to enable interrupt for event …\nBit 18 - Write ‘1’ to enable interrupt for event …\nBit 19 - Write ‘1’ to enable interrupt for event …\nBit 19 - Write ‘1’ to enable interrupt for event …\nBit 20 - Write ‘1’ to enable interrupt for event …\nBit 20 - Write ‘1’ to enable interrupt for event …\nBit 21 - Write ‘1’ to enable interrupt for event …\nBit 21 - Write ‘1’ to enable interrupt for event …\nBit 2 - Write ‘1’ to enable interrupt for event DONE\nBit 2 - Write ‘1’ to enable interrupt for event DONE\nBit 1 - Write ‘1’ to enable interrupt for event END\nBit 1 - Write ‘1’ to enable interrupt for event END\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 3 - Write ‘1’ to enable interrupt for event …\nBit 3 - Write ‘1’ to enable interrupt for event …\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nBit 0 - Write ‘1’ to enable interrupt for event STARTED\nBit 0 - Write ‘1’ to enable interrupt for event STARTED\nBit 5 - Write ‘1’ to enable interrupt for event STOPPED\nBit 5 - Write ‘1’ to enable interrupt for event STOPPED\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\n0: Bypass oversampling\n7: Oversample 128x\n4: Oversample 16x\n8: Oversample 256x\n1: Oversample 2x\n5: Oversample 32x\n2: Oversample 4x\n6: Oversample 64x\n3: Oversample 8x\nOversample control\nField <code>OVERSAMPLE</code> reader - Oversample control\nOversampling configuration. The RESOLUTION is applied …\nField <code>OVERSAMPLE</code> writer - Oversample control\nRegister <code>OVERSAMPLE</code> reader\nRegister <code>OVERSAMPLE</code> writer\nWrites raw bits to the register.\nBypass oversampling\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>BYPASS</code>\nChecks if the value of the field is <code>OVER128X</code>\nChecks if the value of the field is <code>OVER16X</code>\nChecks if the value of the field is <code>OVER256X</code>\nChecks if the value of the field is <code>OVER2X</code>\nChecks if the value of the field is <code>OVER32X</code>\nChecks if the value of the field is <code>OVER4X</code>\nChecks if the value of the field is <code>OVER64X</code>\nChecks if the value of the field is <code>OVER8X</code>\nOversample 128x\nOversample 16x\nOversample 256x\nOversample 2x\nOversample 32x\nOversample 4x\nOversample 64x\nOversample 8x\nBits 0:3 - Oversample control\nBits 0:3 - Oversample control\nGet enumerated values variant\nRegister <code>RESOLUTION</code> reader\nResolution configuration\nSet the resolution\nField <code>VAL</code> reader - Set the resolution\nField <code>VAL</code> writer - Set the resolution\nRegister <code>RESOLUTION</code> writer\n1: 10 bits\n10 bits\n2: 12 bits\n12 bits\n3: 14 bits\n14 bits\n0: 8 bits\n8 bits\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>_10BIT</code>\nChecks if the value of the field is <code>_12BIT</code>\nChecks if the value of the field is <code>_14BIT</code>\nChecks if the value of the field is <code>_8BIT</code>\nBits 0:2 - Set the resolution\nBits 0:2 - Set the resolution\nGet enumerated values variant\nAMOUNT (r) register accessor: an alias for <code>Reg&lt;AMOUNT_SPEC&gt;</code>\nMAXCNT (rw) register accessor: an alias for …\nPTR (rw) register accessor: an alias for <code>Reg&lt;PTR_SPEC&gt;</code>\nRegister block\nNumber of 16-bit samples written to output RAM buffer …\n0x08 - Number of 16-bit samples written to output RAM …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMaximum number of 16-bit samples to be written to output …\n0x04 - Maximum number of 16-bit samples to be written to …\nData pointer\n0x00 - Data pointer\nField <code>AMOUNT</code> reader - Number of 16-bit samples written to …\nNumber of 16-bit samples written to output RAM buffer …\nRegister <code>AMOUNT</code> reader\nBits 0:14 - Number of 16-bit samples written to output RAM …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>MAXCNT</code> reader - Maximum number of 16-bit samples to …\nMaximum number of 16-bit samples to be written to output …\nField <code>MAXCNT</code> writer - Maximum number of 16-bit samples to …\nRegister <code>MAXCNT</code> reader\nRegister <code>MAXCNT</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:14 - Maximum number of 16-bit samples to be written …\nBits 0:14 - Maximum number of 16-bit samples to be written …\nField <code>PTR</code> reader - Data pointer\nData pointer\nField <code>PTR</code> writer - Data pointer\nRegister <code>PTR</code> reader\nRegister <code>PTR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Data pointer\nBits 0:31 - Data pointer\nField <code>CC</code> reader - Capture and compare value. Sample rate …\nField <code>CC</code> writer - Capture and compare value. Sample rate …\nSelect mode for sample rate control\nField <code>MODE</code> reader - Select mode for sample rate control\nField <code>MODE</code> writer - Select mode for sample rate control\nRegister <code>SAMPLERATE</code> reader\nControls normal or continuous sample rate\n0: Rate is controlled from SAMPLE task\n1: Rate is controlled from local timer (use CC to control …\nRegister <code>SAMPLERATE</code> writer\nWrites raw bits to the register.\nBits 0:10 - Capture and compare value. Sample rate is 16 …\nBits 0:10 - Capture and compare value. Sample rate is 16 …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>TASK</code>\nChecks if the value of the field is <code>TIMERS</code>\nBit 12 - Select mode for sample rate control\nBit 12 - Select mode for sample rate control\nRate is controlled from SAMPLE task\nRate is controlled from local timer (use CC to control the …\nGet enumerated values variant\n1: SAADC is busy. Conversion in progress.\nRegister <code>STATUS</code> reader\n0: SAADC is ready. No on-going conversions.\nStatus\nField <code>STATUS</code> reader - Status\nStatus\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>BUSY</code>\nChecks if the value of the field is <code>READY</code>\nBit 0 - Status\nGet enumerated values variant\nStarts offset auto-calibration\nStarts offset auto-calibration\nField <code>TASKS_CALIBRATEOFFSET</code> writer - Starts offset …\n1: Trigger task\nRegister <code>TASKS_CALIBRATEOFFSET</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Starts offset auto-calibration\nTrigger task\nTakes one SAADC sample\nTakes one SAADC sample\nField <code>TASKS_SAMPLE</code> writer - Takes one SAADC sample\n1: Trigger task\nRegister <code>TASKS_SAMPLE</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Takes one SAADC sample\nTrigger task\nStarts the SAADC and prepares the result buffer in RAM\nStarts the SAADC and prepares the result buffer in RAM\nField <code>TASKS_START</code> writer - Starts the SAADC and prepares …\n1: Trigger task\nRegister <code>TASKS_START</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Starts the SAADC and prepares the result buffer in …\nTrigger task\nStops the SAADC and terminates all on-going conversions\nStops the SAADC and terminates all on-going conversions\nField <code>TASKS_STOP</code> writer - Stops the SAADC and terminates …\n1: Trigger task\nRegister <code>TASKS_STOP</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Stops the SAADC and terminates all on-going …\nTrigger task\nCONFIG (rw) register accessor: an alias for …\nENABLE (rw) register accessor: an alias for …\nEVENTS_READY (rw) register accessor: an alias for …\nFREQUENCY (rw) register accessor: an alias for …\nINTENCLR (rw) register accessor: an alias for …\nINTENSET (rw) register accessor: an alias for …\nUnspecified\nRXD (r) register accessor: an alias for <code>Reg&lt;RXD_SPEC&gt;</code>\nRegister block\nTXD (rw) register accessor: an alias for <code>Reg&lt;TXD_SPEC&gt;</code>\nConfiguration register\n0x554 - Configuration register\nEnable SPI\n0x500 - Enable SPI\nTXD byte sent and RXD byte received\n0x108 - TXD byte sent and RXD byte received\nSPI frequency. Accuracy depends on the HFCLK source …\n0x524 - SPI frequency. Accuracy depends on the HFCLK …\nReturns the argument unchanged.\nDisable interrupt\n0x308 - Disable interrupt\nEnable interrupt\n0x304 - Enable interrupt\nCalls <code>U::from(self)</code>.\nCluster Unspecified\n0x508..0x514 - Unspecified\nRXD register\n0x518 - RXD register\nTXD register\n0x51c - TXD register\n0: Active high\n1: Active low\nConfiguration register\nSerial clock (SCK) phase\nField <code>CPHA</code> reader - Serial clock (SCK) phase\nField <code>CPHA</code> writer - Serial clock (SCK) phase\nSerial clock (SCK) polarity\nField <code>CPOL</code> reader - Serial clock (SCK) polarity\nField <code>CPOL</code> writer - Serial clock (SCK) polarity\n0: Sample on leading edge of clock, shift serial data on …\n1: Least significant bit shifted out first\n0: Most significant bit shifted out first\nBit order\nField <code>ORDER</code> reader - Bit order\nField <code>ORDER</code> writer - Bit order\nRegister <code>CONFIG</code> reader\n1: Sample on trailing edge of clock, shift serial data on …\nRegister <code>CONFIG</code> writer\nActive high\nActive low\nWrites raw bits to the register.\nBit 1 - Serial clock (SCK) phase\nBit 1 - Serial clock (SCK) phase\nBit 2 - Serial clock (SCK) polarity\nBit 2 - Serial clock (SCK) polarity\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>ACTIVE_HIGH</code>\nChecks if the value of the field is <code>ACTIVE_LOW</code>\nChecks if the value of the field is <code>LEADING</code>\nChecks if the value of the field is <code>LSB_FIRST</code>\nChecks if the value of the field is <code>MSB_FIRST</code>\nChecks if the value of the field is <code>TRAILING</code>\nSample on leading edge of clock, shift serial data on …\nLeast significant bit shifted out first\nMost significant bit shifted out first\nBit 0 - Bit order\nBit 0 - Bit order\nSample on trailing edge of clock, shift serial data on …\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\n0: Disable SPI\n1: Enable SPI\nEnable or disable SPI\nField <code>ENABLE</code> reader - Enable or disable SPI\nEnable SPI\nField <code>ENABLE</code> writer - Enable or disable SPI\nRegister <code>ENABLE</code> reader\nRegister <code>ENABLE</code> writer\nWrites raw bits to the register.\nDisable SPI\nBits 0:3 - Enable or disable SPI\nBits 0:3 - Enable or disable SPI\nEnable SPI\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nGet enumerated values variant\nTXD byte sent and RXD byte received\nField <code>EVENTS_READY</code> reader - TXD byte sent and RXD byte …\nTXD byte sent and RXD byte received\nField <code>EVENTS_READY</code> writer - TXD byte sent and RXD byte …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_READY</code> reader\nRegister <code>EVENTS_READY</code> writer\nWrites raw bits to the register.\nBit 0 - TXD byte sent and RXD byte received\nBit 0 - TXD byte sent and RXD byte received\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nSPI master data rate\nField <code>FREQUENCY</code> reader - SPI master data rate\nSPI frequency. Accuracy depends on the HFCLK source …\nField <code>FREQUENCY</code> writer - SPI master data rate\n33554432: 125 kbps\n67108864: 250 kbps\n134217728: 500 kbps\n268435456: 1 Mbps\n536870912: 2 Mbps\n1073741824: 4 Mbps\n2147483648: 8 Mbps\nRegister <code>FREQUENCY</code> reader\nRegister <code>FREQUENCY</code> writer\nWrites raw bits to the register.\nBits 0:31 - SPI master data rate\nBits 0:31 - SPI master data rate\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>K125</code>\nChecks if the value of the field is <code>K250</code>\nChecks if the value of the field is <code>K500</code>\nChecks if the value of the field is <code>M1</code>\nChecks if the value of the field is <code>M2</code>\nChecks if the value of the field is <code>M4</code>\nChecks if the value of the field is <code>M8</code>\n125 kbps\n250 kbps\n500 kbps\n1 Mbps\n2 Mbps\n4 Mbps\n8 Mbps\nGet enumerated values variant\n1: Disable\n0: Read: Disabled\n1: Read: Enabled\nDisable interrupt\nRegister <code>INTENCLR</code> reader\nWrite ‘1’ to disable interrupt for event READY\nWrite ‘1’ to disable interrupt for event READY\nField <code>READY</code> reader - Write ‘1’ to disable interrupt …\nField <code>READY</code> writer - Write ‘1’ to disable interrupt …\nRegister <code>INTENCLR</code> writer\nWrites raw bits to the register.\nDisable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 2 - Write ‘1’ to disable interrupt for event READY\nBit 2 - Write ‘1’ to disable interrupt for event READY\nGet enumerated values variant\n0: Read: Disabled\n1: Read: Enabled\nEnable interrupt\nRegister <code>INTENSET</code> reader\nWrite ‘1’ to enable interrupt for event READY\nWrite ‘1’ to enable interrupt for event READY\nField <code>READY</code> reader - Write ‘1’ to enable interrupt for …\nField <code>READY</code> writer - Write ‘1’ to enable interrupt for …\n1: Enable\nRegister <code>INTENSET</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 2 - Write ‘1’ to enable interrupt for event READY\nBit 2 - Write ‘1’ to enable interrupt for event READY\nEnable\nGet enumerated values variant\nMISO (rw) register accessor: an alias for <code>Reg&lt;MISO_SPEC&gt;</code>\nMOSI (rw) register accessor: an alias for <code>Reg&lt;MOSI_SPEC&gt;</code>\nRegister block\nSCK (rw) register accessor: an alias for <code>Reg&lt;SCK_SPEC&gt;</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPin select for MISO signal\n0x08 - Pin select for MISO signal\nPin select for MOSI signal\n0x04 - Pin select for MOSI signal\nPin select for SCK\n0x00 - Pin select for SCK\n0: Connect\nConnection\nField <code>CONNECT</code> reader - Connection\nField <code>CONNECT</code> writer - Connection\n1: Disconnect\nPin select for MISO signal\nField <code>PIN</code> reader - Pin number\nField <code>PIN</code> writer - Pin number\nField <code>PORT</code> reader - Port number\nField <code>PORT</code> writer - Port number\nRegister <code>MISO</code> reader\nRegister <code>MISO</code> writer\nWrites raw bits to the register.\nBit 31 - Connection\nBit 31 - Connection\nConnect\nDisconnect\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>CONNECTED</code>\nChecks if the value of the field is <code>DISCONNECTED</code>\nBits 0:4 - Pin number\nBits 0:4 - Pin number\nBit 5 - Port number\nBit 5 - Port number\nGet enumerated values variant\n0: Connect\nConnection\nField <code>CONNECT</code> reader - Connection\nField <code>CONNECT</code> writer - Connection\n1: Disconnect\nPin select for MOSI signal\nField <code>PIN</code> reader - Pin number\nField <code>PIN</code> writer - Pin number\nField <code>PORT</code> reader - Port number\nField <code>PORT</code> writer - Port number\nRegister <code>MOSI</code> reader\nRegister <code>MOSI</code> writer\nWrites raw bits to the register.\nBit 31 - Connection\nBit 31 - Connection\nConnect\nDisconnect\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>CONNECTED</code>\nChecks if the value of the field is <code>DISCONNECTED</code>\nBits 0:4 - Pin number\nBits 0:4 - Pin number\nBit 5 - Port number\nBit 5 - Port number\nGet enumerated values variant\n0: Connect\nConnection\nField <code>CONNECT</code> reader - Connection\nField <code>CONNECT</code> writer - Connection\n1: Disconnect\nField <code>PIN</code> reader - Pin number\nField <code>PIN</code> writer - Pin number\nField <code>PORT</code> reader - Port number\nField <code>PORT</code> writer - Port number\nRegister <code>SCK</code> reader\nPin select for SCK\nRegister <code>SCK</code> writer\nWrites raw bits to the register.\nBit 31 - Connection\nBit 31 - Connection\nConnect\nDisconnect\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>CONNECTED</code>\nChecks if the value of the field is <code>DISCONNECTED</code>\nBits 0:4 - Pin number\nBits 0:4 - Pin number\nBit 5 - Port number\nBit 5 - Port number\nGet enumerated values variant\nRegister <code>RXD</code> reader\nField <code>RXD</code> reader - RX data received. Double buffered\nRXD register\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:7 - RX data received. Double buffered\nRegister <code>TXD</code> reader\nField <code>TXD</code> reader - TX data to send. Double buffered\nTXD register\nField <code>TXD</code> writer - TX data to send. Double buffered\nRegister <code>TXD</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:7 - TX data to send. Double buffered\nBits 0:7 - TX data to send. Double buffered\nCONFIG (rw) register accessor: an alias for …\nCSNPOL (rw) register accessor: an alias for …\nDCXCNT (rw) register accessor: an alias for …\nENABLE (rw) register accessor: an alias for …\nEVENTS_END (rw) register accessor: an alias for …\nEVENTS_ENDRX (rw) register accessor: an alias for …\nEVENTS_ENDTX (rw) register accessor: an alias for …\nEVENTS_STARTED (rw) register accessor: an alias for …\nEVENTS_STOPPED (rw) register accessor: an alias for …\nFREQUENCY (rw) register accessor: an alias for …\nUnspecified\nINTENCLR (rw) register accessor: an alias for …\nINTENSET (rw) register accessor: an alias for …\nORC (rw) register accessor: an alias for <code>Reg&lt;ORC_SPEC&gt;</code>\nUnspecified\nPSELDCX (rw) register accessor: an alias for …\nRXD EasyDMA channel\nRegister block\nSHORTS (rw) register accessor: an alias for …\nSTALLSTAT (rw) register accessor: an alias for …\nTASKS_RESUME (w) register accessor: an alias for …\nTASKS_START (w) register accessor: an alias for …\nTASKS_STOP (w) register accessor: an alias for …\nTASKS_SUSPEND (w) register accessor: an alias for …\nTXD EasyDMA channel\nConfiguration register\n0x554 - Configuration register\nPolarity of CSN output\n0x568 - Polarity of CSN output\nDCX configuration\n0x570 - DCX configuration\nEnable SPIM\n0x500 - Enable SPIM\nEnd of RXD buffer and TXD buffer reached\n0x118 - End of RXD buffer and TXD buffer reached\nEnd of RXD buffer reached\n0x110 - End of RXD buffer reached\nEnd of TXD buffer reached\n0x120 - End of TXD buffer reached\nTransaction started\n0x14c - Transaction started\nSPI transaction has stopped\n0x104 - SPI transaction has stopped\nSPI frequency. Accuracy depends on the HFCLK source …\n0x524 - SPI frequency. Accuracy depends on the HFCLK …\nReturns the argument unchanged.\nCluster Unspecified\n0x560..0x568 - Unspecified\nDisable interrupt\n0x308 - Disable interrupt\nEnable interrupt\n0x304 - Enable interrupt\nCalls <code>U::from(self)</code>.\nByte transmitted after TXD.MAXCNT bytes have been …\n0x5c0 - Byte transmitted after TXD.MAXCNT bytes have been …\nCluster Unspecified\n0x508..0x518 - Unspecified\nPin select for DCX signal\n0x56c - Pin select for DCX signal\nCluster RXD EasyDMA channel\n0x534..0x544 - RXD EasyDMA channel\nShortcuts between local events and tasks\n0x200 - Shortcuts between local events and tasks\nStall status for EasyDMA RAM accesses. The fields in this …\n0x400 - Stall status for EasyDMA RAM accesses. The fields …\nResume SPI transaction\n0x20 - Resume SPI transaction\nStart SPI transaction\n0x10 - Start SPI transaction\nStop SPI transaction\n0x14 - Stop SPI transaction\nSuspend SPI transaction\n0x1c - Suspend SPI transaction\nCluster TXD EasyDMA channel\n0x544..0x554 - TXD EasyDMA channel\n0: Active high\n1: Active low\nConfiguration register\nSerial clock (SCK) phase\nField <code>CPHA</code> reader - Serial clock (SCK) phase\nField <code>CPHA</code> writer - Serial clock (SCK) phase\nSerial clock (SCK) polarity\nField <code>CPOL</code> reader - Serial clock (SCK) polarity\nField <code>CPOL</code> writer - Serial clock (SCK) polarity\n0: Sample on leading edge of clock, shift serial data on …\n1: Least significant bit shifted out first\n0: Most significant bit shifted out first\nBit order\nField <code>ORDER</code> reader - Bit order\nField <code>ORDER</code> writer - Bit order\nRegister <code>CONFIG</code> reader\n1: Sample on trailing edge of clock, shift serial data on …\nRegister <code>CONFIG</code> writer\nActive high\nActive low\nWrites raw bits to the register.\nBit 1 - Serial clock (SCK) phase\nBit 1 - Serial clock (SCK) phase\nBit 2 - Serial clock (SCK) polarity\nBit 2 - Serial clock (SCK) polarity\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>ACTIVE_HIGH</code>\nChecks if the value of the field is <code>ACTIVE_LOW</code>\nChecks if the value of the field is <code>LEADING</code>\nChecks if the value of the field is <code>LSB_FIRST</code>\nChecks if the value of the field is <code>MSB_FIRST</code>\nChecks if the value of the field is <code>TRAILING</code>\nSample on leading edge of clock, shift serial data on …\nLeast significant bit shifted out first\nMost significant bit shifted out first\nBit 0 - Bit order\nBit 0 - Bit order\nSample on trailing edge of clock, shift serial data on …\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nPolarity of CSN output\nField <code>CSNPOL</code> reader - Polarity of CSN output\nPolarity of CSN output\nField <code>CSNPOL</code> writer - Polarity of CSN output\n1: Active high (idle state low)\n0: Active low (idle state high)\nRegister <code>CSNPOL</code> reader\nRegister <code>CSNPOL</code> writer\nWrites raw bits to the register.\nBit 0 - Polarity of CSN output\nBit 0 - Polarity of CSN output\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nActive high (idle state low)\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>HIGH</code>\nChecks if the value of the field is <code>LOW</code>\nActive low (idle state high)\nGet enumerated values variant\nField <code>DCXCNT</code> reader - This register specifies the number …\nDCX configuration\nField <code>DCXCNT</code> writer - This register specifies the number …\nRegister <code>DCXCNT</code> reader\nRegister <code>DCXCNT</code> writer\nWrites raw bits to the register.\nBits 0:3 - This register specifies the number of command …\nBits 0:3 - This register specifies the number of command …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n0: Disable SPIM\n7: Enable SPIM\nEnable or disable SPIM\nField <code>ENABLE</code> reader - Enable or disable SPIM\nEnable SPIM\nField <code>ENABLE</code> writer - Enable or disable SPIM\nRegister <code>ENABLE</code> reader\nRegister <code>ENABLE</code> writer\nWrites raw bits to the register.\nDisable SPIM\nBits 0:3 - Enable or disable SPIM\nBits 0:3 - Enable or disable SPIM\nEnable SPIM\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nGet enumerated values variant\nEnd of RXD buffer and TXD buffer reached\nField <code>EVENTS_END</code> reader - End of RXD buffer and TXD buffer …\nEnd of RXD buffer and TXD buffer reached\nField <code>EVENTS_END</code> writer - End of RXD buffer and TXD buffer …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_END</code> reader\nRegister <code>EVENTS_END</code> writer\nWrites raw bits to the register.\nBit 0 - End of RXD buffer and TXD buffer reached\nBit 0 - End of RXD buffer and TXD buffer reached\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nEnd of RXD buffer reached\nField <code>EVENTS_ENDRX</code> reader - End of RXD buffer reached\nEnd of RXD buffer reached\nField <code>EVENTS_ENDRX</code> writer - End of RXD buffer reached\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_ENDRX</code> reader\nRegister <code>EVENTS_ENDRX</code> writer\nWrites raw bits to the register.\nBit 0 - End of RXD buffer reached\nBit 0 - End of RXD buffer reached\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>")