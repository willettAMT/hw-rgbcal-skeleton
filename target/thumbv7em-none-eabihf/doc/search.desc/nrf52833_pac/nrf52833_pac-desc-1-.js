searchState.loadedDescShard("nrf52833_pac", 1, "Field <code>TRIGGERED15</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for event TRIGGERED[1]\nField <code>TRIGGERED1</code> reader - Enable or disable interrupt for …\nField <code>TRIGGERED1</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for event TRIGGERED[2]\nField <code>TRIGGERED2</code> reader - Enable or disable interrupt for …\nField <code>TRIGGERED2</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for event TRIGGERED[3]\nField <code>TRIGGERED3</code> reader - Enable or disable interrupt for …\nField <code>TRIGGERED3</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for event TRIGGERED[4]\nField <code>TRIGGERED4</code> reader - Enable or disable interrupt for …\nField <code>TRIGGERED4</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for event TRIGGERED[5]\nField <code>TRIGGERED5</code> reader - Enable or disable interrupt for …\nField <code>TRIGGERED5</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for event TRIGGERED[6]\nField <code>TRIGGERED6</code> reader - Enable or disable interrupt for …\nField <code>TRIGGERED6</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for event TRIGGERED[7]\nField <code>TRIGGERED7</code> reader - Enable or disable interrupt for …\nField <code>TRIGGERED7</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for event TRIGGERED[8]\nField <code>TRIGGERED8</code> reader - Enable or disable interrupt for …\nField <code>TRIGGERED8</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for event TRIGGERED[9]\nField <code>TRIGGERED9</code> reader - Enable or disable interrupt for …\nField <code>TRIGGERED9</code> writer - Enable or disable interrupt for …\nRegister <code>INTEN</code> writer\nWrites raw bits to the register.\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 0 - Enable or disable interrupt for event TRIGGERED[0]\nBit 0 - Enable or disable interrupt for event TRIGGERED[0]\nBit 1 - Enable or disable interrupt for event TRIGGERED[1]\nBit 1 - Enable or disable interrupt for event TRIGGERED[1]\nBit 10 - Enable or disable interrupt for event TRIGGERED[10…\nBit 10 - Enable or disable interrupt for event TRIGGERED[10…\nBit 11 - Enable or disable interrupt for event TRIGGERED[11…\nBit 11 - Enable or disable interrupt for event TRIGGERED[11…\nBit 12 - Enable or disable interrupt for event TRIGGERED[12…\nBit 12 - Enable or disable interrupt for event TRIGGERED[12…\nBit 13 - Enable or disable interrupt for event TRIGGERED[13…\nBit 13 - Enable or disable interrupt for event TRIGGERED[13…\nBit 14 - Enable or disable interrupt for event TRIGGERED[14…\nBit 14 - Enable or disable interrupt for event TRIGGERED[14…\nBit 15 - Enable or disable interrupt for event TRIGGERED[15…\nBit 15 - Enable or disable interrupt for event TRIGGERED[15…\nBit 2 - Enable or disable interrupt for event TRIGGERED[2]\nBit 2 - Enable or disable interrupt for event TRIGGERED[2]\nBit 3 - Enable or disable interrupt for event TRIGGERED[3]\nBit 3 - Enable or disable interrupt for event TRIGGERED[3]\nBit 4 - Enable or disable interrupt for event TRIGGERED[4]\nBit 4 - Enable or disable interrupt for event TRIGGERED[4]\nBit 5 - Enable or disable interrupt for event TRIGGERED[5]\nBit 5 - Enable or disable interrupt for event TRIGGERED[5]\nBit 6 - Enable or disable interrupt for event TRIGGERED[6]\nBit 6 - Enable or disable interrupt for event TRIGGERED[6]\nBit 7 - Enable or disable interrupt for event TRIGGERED[7]\nBit 7 - Enable or disable interrupt for event TRIGGERED[7]\nBit 8 - Enable or disable interrupt for event TRIGGERED[8]\nBit 8 - Enable or disable interrupt for event TRIGGERED[8]\nBit 9 - Enable or disable interrupt for event TRIGGERED[9]\nBit 9 - Enable or disable interrupt for event TRIGGERED[9]\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\nDisable interrupt\nRegister <code>INTENCLR</code> reader\nWrite ‘1’ to disable interrupt for event TRIGGERED[0]\nWrite ‘1’ to disable interrupt for event TRIGGERED[0]\nField <code>TRIGGERED0</code> reader - Write ‘1’ to disable …\nField <code>TRIGGERED0</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event TRIGGERED[10]\nWrite ‘1’ to disable interrupt for event TRIGGERED[10]\nField <code>TRIGGERED10</code> reader - Write ‘1’ to disable …\nField <code>TRIGGERED10</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event TRIGGERED[11]\nWrite ‘1’ to disable interrupt for event TRIGGERED[11]\nField <code>TRIGGERED11</code> reader - Write ‘1’ to disable …\nField <code>TRIGGERED11</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event TRIGGERED[12]\nWrite ‘1’ to disable interrupt for event TRIGGERED[12]\nField <code>TRIGGERED12</code> reader - Write ‘1’ to disable …\nField <code>TRIGGERED12</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event TRIGGERED[13]\nWrite ‘1’ to disable interrupt for event TRIGGERED[13]\nField <code>TRIGGERED13</code> reader - Write ‘1’ to disable …\nField <code>TRIGGERED13</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event TRIGGERED[14]\nWrite ‘1’ to disable interrupt for event TRIGGERED[14]\nField <code>TRIGGERED14</code> reader - Write ‘1’ to disable …\nField <code>TRIGGERED14</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event TRIGGERED[15]\nWrite ‘1’ to disable interrupt for event TRIGGERED[15]\nField <code>TRIGGERED15</code> reader - Write ‘1’ to disable …\nField <code>TRIGGERED15</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event TRIGGERED[1]\nWrite ‘1’ to disable interrupt for event TRIGGERED[1]\nField <code>TRIGGERED1</code> reader - Write ‘1’ to disable …\nField <code>TRIGGERED1</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event TRIGGERED[2]\nWrite ‘1’ to disable interrupt for event TRIGGERED[2]\nField <code>TRIGGERED2</code> reader - Write ‘1’ to disable …\nField <code>TRIGGERED2</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event TRIGGERED[3]\nWrite ‘1’ to disable interrupt for event TRIGGERED[3]\nField <code>TRIGGERED3</code> reader - Write ‘1’ to disable …\nField <code>TRIGGERED3</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event TRIGGERED[4]\nWrite ‘1’ to disable interrupt for event TRIGGERED[4]\nField <code>TRIGGERED4</code> reader - Write ‘1’ to disable …\nField <code>TRIGGERED4</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event TRIGGERED[5]\nWrite ‘1’ to disable interrupt for event TRIGGERED[5]\nField <code>TRIGGERED5</code> reader - Write ‘1’ to disable …\nField <code>TRIGGERED5</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event TRIGGERED[6]\nWrite ‘1’ to disable interrupt for event TRIGGERED[6]\nField <code>TRIGGERED6</code> reader - Write ‘1’ to disable …\nField <code>TRIGGERED6</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event TRIGGERED[7]\nWrite ‘1’ to disable interrupt for event TRIGGERED[7]\nField <code>TRIGGERED7</code> reader - Write ‘1’ to disable …\nField <code>TRIGGERED7</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event TRIGGERED[8]\nWrite ‘1’ to disable interrupt for event TRIGGERED[8]\nField <code>TRIGGERED8</code> reader - Write ‘1’ to disable …\nField <code>TRIGGERED8</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for event TRIGGERED[9]\nWrite ‘1’ to disable interrupt for event TRIGGERED[9]\nField <code>TRIGGERED9</code> reader - Write ‘1’ to disable …\nField <code>TRIGGERED9</code> writer - Write ‘1’ to disable …\nRegister <code>INTENCLR</code> writer\nWrites raw bits to the register.\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 0 - Write ‘1’ to disable interrupt for event …\nBit 0 - Write ‘1’ to disable interrupt for event …\nBit 1 - Write ‘1’ to disable interrupt for event …\nBit 1 - Write ‘1’ to disable interrupt for event …\nBit 10 - Write ‘1’ to disable interrupt for event …\nBit 10 - Write ‘1’ to disable interrupt for event …\nBit 11 - Write ‘1’ to disable interrupt for event …\nBit 11 - Write ‘1’ to disable interrupt for event …\nBit 12 - Write ‘1’ to disable interrupt for event …\nBit 12 - Write ‘1’ to disable interrupt for event …\nBit 13 - Write ‘1’ to disable interrupt for event …\nBit 13 - Write ‘1’ to disable interrupt for event …\nBit 14 - Write ‘1’ to disable interrupt for event …\nBit 14 - Write ‘1’ to disable interrupt for event …\nBit 15 - Write ‘1’ to disable interrupt for event …\nBit 15 - Write ‘1’ to disable interrupt for event …\nBit 2 - Write ‘1’ to disable interrupt for event …\nBit 2 - Write ‘1’ to disable interrupt for event …\nBit 3 - Write ‘1’ to disable interrupt for event …\nBit 3 - Write ‘1’ to disable interrupt for event …\nBit 4 - Write ‘1’ to disable interrupt for event …\nBit 4 - Write ‘1’ to disable interrupt for event …\nBit 5 - Write ‘1’ to disable interrupt for event …\nBit 5 - Write ‘1’ to disable interrupt for event …\nBit 6 - Write ‘1’ to disable interrupt for event …\nBit 6 - Write ‘1’ to disable interrupt for event …\nBit 7 - Write ‘1’ to disable interrupt for event …\nBit 7 - Write ‘1’ to disable interrupt for event …\nBit 8 - Write ‘1’ to disable interrupt for event …\nBit 8 - Write ‘1’ to disable interrupt for event …\nBit 9 - Write ‘1’ to disable interrupt for event …\nBit 9 - Write ‘1’ to disable interrupt for event …\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\nEnable interrupt\nRegister <code>INTENSET</code> reader\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\nWrite ‘1’ to enable interrupt for event TRIGGERED[0]\nWrite ‘1’ to enable interrupt for event TRIGGERED[0]\nField <code>TRIGGERED0</code> reader - Write ‘1’ to enable …\nField <code>TRIGGERED0</code> writer - Write ‘1’ to enable …\nWrite ‘1’ to enable interrupt for event TRIGGERED[10]\nWrite ‘1’ to enable interrupt for event TRIGGERED[10]\nField <code>TRIGGERED10</code> reader - Write ‘1’ to enable …\nField <code>TRIGGERED10</code> writer - Write ‘1’ to enable …\nWrite ‘1’ to enable interrupt for event TRIGGERED[11]\nWrite ‘1’ to enable interrupt for event TRIGGERED[11]\nField <code>TRIGGERED11</code> reader - Write ‘1’ to enable …\nField <code>TRIGGERED11</code> writer - Write ‘1’ to enable …\nWrite ‘1’ to enable interrupt for event TRIGGERED[12]\nWrite ‘1’ to enable interrupt for event TRIGGERED[12]\nField <code>TRIGGERED12</code> reader - Write ‘1’ to enable …\nField <code>TRIGGERED12</code> writer - Write ‘1’ to enable …\nWrite ‘1’ to enable interrupt for event TRIGGERED[13]\nWrite ‘1’ to enable interrupt for event TRIGGERED[13]\nField <code>TRIGGERED13</code> reader - Write ‘1’ to enable …\nField <code>TRIGGERED13</code> writer - Write ‘1’ to enable …\nWrite ‘1’ to enable interrupt for event TRIGGERED[14]\nWrite ‘1’ to enable interrupt for event TRIGGERED[14]\nField <code>TRIGGERED14</code> reader - Write ‘1’ to enable …\nField <code>TRIGGERED14</code> writer - Write ‘1’ to enable …\nWrite ‘1’ to enable interrupt for event TRIGGERED[15]\nWrite ‘1’ to enable interrupt for event TRIGGERED[15]\nField <code>TRIGGERED15</code> reader - Write ‘1’ to enable …\nField <code>TRIGGERED15</code> writer - Write ‘1’ to enable …\nWrite ‘1’ to enable interrupt for event TRIGGERED[1]\nWrite ‘1’ to enable interrupt for event TRIGGERED[1]\nField <code>TRIGGERED1</code> reader - Write ‘1’ to enable …\nField <code>TRIGGERED1</code> writer - Write ‘1’ to enable …\nWrite ‘1’ to enable interrupt for event TRIGGERED[2]\nWrite ‘1’ to enable interrupt for event TRIGGERED[2]\nField <code>TRIGGERED2</code> reader - Write ‘1’ to enable …\nField <code>TRIGGERED2</code> writer - Write ‘1’ to enable …\nWrite ‘1’ to enable interrupt for event TRIGGERED[3]\nWrite ‘1’ to enable interrupt for event TRIGGERED[3]\nField <code>TRIGGERED3</code> reader - Write ‘1’ to enable …\nField <code>TRIGGERED3</code> writer - Write ‘1’ to enable …\nWrite ‘1’ to enable interrupt for event TRIGGERED[4]\nWrite ‘1’ to enable interrupt for event TRIGGERED[4]\nField <code>TRIGGERED4</code> reader - Write ‘1’ to enable …\nField <code>TRIGGERED4</code> writer - Write ‘1’ to enable …\nWrite ‘1’ to enable interrupt for event TRIGGERED[5]\nWrite ‘1’ to enable interrupt for event TRIGGERED[5]\nField <code>TRIGGERED5</code> reader - Write ‘1’ to enable …\nField <code>TRIGGERED5</code> writer - Write ‘1’ to enable …\nWrite ‘1’ to enable interrupt for event TRIGGERED[6]\nWrite ‘1’ to enable interrupt for event TRIGGERED[6]\nField <code>TRIGGERED6</code> reader - Write ‘1’ to enable …\nField <code>TRIGGERED6</code> writer - Write ‘1’ to enable …\nWrite ‘1’ to enable interrupt for event TRIGGERED[7]\nWrite ‘1’ to enable interrupt for event TRIGGERED[7]\nField <code>TRIGGERED7</code> reader - Write ‘1’ to enable …\nField <code>TRIGGERED7</code> writer - Write ‘1’ to enable …\nWrite ‘1’ to enable interrupt for event TRIGGERED[8]\nWrite ‘1’ to enable interrupt for event TRIGGERED[8]\nField <code>TRIGGERED8</code> reader - Write ‘1’ to enable …\nField <code>TRIGGERED8</code> writer - Write ‘1’ to enable …\nWrite ‘1’ to enable interrupt for event TRIGGERED[9]\nWrite ‘1’ to enable interrupt for event TRIGGERED[9]\nField <code>TRIGGERED9</code> reader - Write ‘1’ to enable …\nField <code>TRIGGERED9</code> writer - Write ‘1’ to enable …\nRegister <code>INTENSET</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nBit 0 - Write ‘1’ to enable interrupt for event …\nBit 0 - Write ‘1’ to enable interrupt for event …\nBit 1 - Write ‘1’ to enable interrupt for event …\nBit 1 - Write ‘1’ to enable interrupt for event …\nBit 10 - Write ‘1’ to enable interrupt for event …\nBit 10 - Write ‘1’ to enable interrupt for event …\nBit 11 - Write ‘1’ to enable interrupt for event …\nBit 11 - Write ‘1’ to enable interrupt for event …\nBit 12 - Write ‘1’ to enable interrupt for event …\nBit 12 - Write ‘1’ to enable interrupt for event …\nBit 13 - Write ‘1’ to enable interrupt for event …\nBit 13 - Write ‘1’ to enable interrupt for event …\nBit 14 - Write ‘1’ to enable interrupt for event …\nBit 14 - Write ‘1’ to enable interrupt for event …\nBit 15 - Write ‘1’ to enable interrupt for event …\nBit 15 - Write ‘1’ to enable interrupt for event …\nBit 2 - Write ‘1’ to enable interrupt for event …\nBit 2 - Write ‘1’ to enable interrupt for event …\nBit 3 - Write ‘1’ to enable interrupt for event …\nBit 3 - Write ‘1’ to enable interrupt for event …\nBit 4 - Write ‘1’ to enable interrupt for event …\nBit 4 - Write ‘1’ to enable interrupt for event …\nBit 5 - Write ‘1’ to enable interrupt for event …\nBit 5 - Write ‘1’ to enable interrupt for event …\nBit 6 - Write ‘1’ to enable interrupt for event …\nBit 6 - Write ‘1’ to enable interrupt for event …\nBit 7 - Write ‘1’ to enable interrupt for event …\nBit 7 - Write ‘1’ to enable interrupt for event …\nBit 8 - Write ‘1’ to enable interrupt for event …\nBit 8 - Write ‘1’ to enable interrupt for event …\nBit 9 - Write ‘1’ to enable interrupt for event …\nBit 9 - Write ‘1’ to enable interrupt for event …\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nTrigger n for triggering the corresponding TRIGGERED[n] …\nDescription collection: Trigger n for triggering the …\nField <code>TASKS_TRIGGER</code> writer - Trigger n for triggering the …\n1: Trigger task\nRegister <code>TASKS_TRIGGER[%s]</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Trigger n for triggering the corresponding …\nTrigger task\nCODEPAGESIZE (r) register accessor: an alias for …\nCODESIZE (r) register accessor: an alias for …\nDEVICEADDR (r) register accessor: an alias for …\nDEVICEADDRTYPE (r) register accessor: an alias for …\nDEVICEID (r) register accessor: an alias for …\nER (r) register accessor: an alias for <code>Reg&lt;ER_SPEC&gt;</code>\nDevice info\nIR (r) register accessor: an alias for <code>Reg&lt;IR_SPEC&gt;</code>\nUnspecified\nPRODTEST (r) register accessor: an alias for …\nRegister block\nRegisters storing factory TEMP module linearization …\nCode memory page size\n0x10 - Code memory page size\nCode memory size\n0x14 - Code memory size\nDescription collection: Device address n\n0xa4..0xac - Description collection: Device address n\nDevice address type\n0xa0 - Device address type\nDescription collection: Device identifier\n0x60..0x68 - Description collection: Device identifier\nDescription collection: Encryption root, word n\n0x80..0x90 - Description collection: Encryption root, word …\nReturns the argument unchanged.\nCluster Device info\n0x100..0x114 - Device info\nCalls <code>U::from(self)</code>.\nDescription collection: Identity Root, word n\n0x90..0xa0 - Description collection: Identity Root, word n\nCluster Unspecified\n0x450..0x460 - Unspecified\nDescription collection: Production test signature n\n0x350..0x35c - Description collection: Production test …\nCluster Registers storing factory TEMP module …\n0x404..0x448 - Registers storing factory TEMP module …\nField <code>CODEPAGESIZE</code> reader - Code memory page size\nCode memory page size\nRegister <code>CODEPAGESIZE</code> reader\nBits 0:31 - Code memory page size\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>CODESIZE</code> reader - Code memory size in number of pages\nCode memory size\nRegister <code>CODESIZE</code> reader\nBits 0:31 - Code memory size in number of pages\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>DEVICEADDR</code> reader - 48 bit device address\nDescription collection: Device address n\nRegister <code>DEVICEADDR[%s]</code> reader\nBits 0:31 - 48 bit device address\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDevice address type\nField <code>DEVICEADDRTYPE</code> reader - Device address type\nDevice address type\n0: Public address\nRegister <code>DEVICEADDRTYPE</code> reader\n1: Random address\nBit 0 - Device address type\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>PUBLIC</code>\nChecks if the value of the field is <code>RANDOM</code>\nGet enumerated values variant\nField <code>DEVICEID</code> reader - 64 bit unique device identifier\nDescription collection: Device identifier\nRegister <code>DEVICEID[%s]</code> reader\nBits 0:31 - 64 bit unique device identifier\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>ER</code> reader - Encryption root, word n\nDescription collection: Encryption root, word n\nRegister <code>ER[%s]</code> reader\nBits 0:31 - Encryption root, word n\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFLASH (r) register accessor: an alias for <code>Reg&lt;FLASH_SPEC&gt;</code>\nRegister block\nPACKAGE (r) register accessor: an alias for …\nPART (r) register accessor: an alias for <code>Reg&lt;PART_SPEC&gt;</code>\nRAM (r) register accessor: an alias for <code>Reg&lt;RAM_SPEC&gt;</code>\nVARIANT (r) register accessor: an alias for …\nFlash variant\n0x10 - Flash variant\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPackage option\n0x08 - Package option\nPart code\n0x00 - Part code\nRAM variant\n0x0c - RAM variant\nBuild code (hardware version and production configuration)\n0x04 - Build code (hardware version and production …\nFlash variant\nField <code>FLASH</code> reader - Flash variant\nFlash variant\n1024: 1 MByte FLASH\n128: 128 kByte FLASH\n2048: 2 MByte FLASH\n256: 256 kByte FLASH\n512: 512 kByte FLASH\nRegister <code>FLASH</code> reader\n4294967295: Unspecified\nBits 0:31 - Flash variant\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>K1024</code>\nChecks if the value of the field is <code>K128</code>\nChecks if the value of the field is <code>K2048</code>\nChecks if the value of the field is <code>K256</code>\nChecks if the value of the field is <code>K512</code>\nChecks if the value of the field is <code>UNSPECIFIED</code>\nGet enumerated values variant\n8200: CJxx - WLCSP\nPackage option\nField <code>PACKAGE</code> reader - Package option\nPackage option\n8199: QDxx - 40-pin QFN\n8196: QIxx - 73-pin aQFN\nRegister <code>PACKAGE</code> reader\n4294967295: Unspecified\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>CJ</code>\nChecks if the value of the field is <code>QD</code>\nChecks if the value of the field is <code>QI</code>\nChecks if the value of the field is <code>UNSPECIFIED</code>\nBits 0:31 - Package option\nGet enumerated values variant\n337971: nRF52833\n337984: nRF52840\nPart code\nField <code>PART</code> reader - Part code\nPart code\nRegister <code>PART</code> reader\n4294967295: Unspecified\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>N52833</code>\nChecks if the value of the field is <code>N52840</code>\nChecks if the value of the field is <code>UNSPECIFIED</code>\nBits 0:31 - Part code\nGet enumerated values variant\n128: 128 kByte RAM\n16: 16 kByte RAM\n256: 256 kByte RAM\n32: 32 kByte RAM\n64: 64 kByte RAM\nRegister <code>RAM</code> reader\nRAM variant\nField <code>RAM</code> reader - RAM variant\nRAM variant\n4294967295: Unspecified\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>K128</code>\nChecks if the value of the field is <code>K16</code>\nChecks if the value of the field is <code>K256</code>\nChecks if the value of the field is <code>K32</code>\nChecks if the value of the field is <code>K64</code>\nChecks if the value of the field is <code>UNSPECIFIED</code>\nBits 0:31 - RAM variant\nGet enumerated values variant\n1094795585: AAAA\n1094795586: AAAB\nRegister <code>VARIANT</code> reader\n4294967295: Unspecified\nBuild code (hardware version and production …\nField <code>VARIANT</code> reader - Build code (hardware version and …\nBuild code (hardware version and production configuration)\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>AAAA</code>\nChecks if the value of the field is <code>AAAB</code>\nChecks if the value of the field is <code>UNSPECIFIED</code>\nBits 0:31 - Build code (hardware version and production …\nGet enumerated values variant\nField <code>IR</code> reader - Identity Root, word n\nDescription collection: Identity Root, word n\nRegister <code>IR[%s]</code> reader\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Identity Root, word n\nRegister block\nTAGHEADER0 (r) register accessor: an alias for …\nTAGHEADER1 (r) register accessor: an alias for …\nTAGHEADER2 (r) register accessor: an alias for …\nTAGHEADER3 (r) register accessor: an alias for …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDefault header for NFC tag. Software can read these values …\n0x00 - Default header for NFC tag. Software can read these …\nDefault header for NFC tag. Software can read these values …\n0x04 - Default header for NFC tag. Software can read these …\nDefault header for NFC tag. Software can read these values …\n0x08 - Default header for NFC tag. Software can read these …\nDefault header for NFC tag. Software can read these values …\n0x0c - Default header for NFC tag. Software can read these …\nField <code>MFGID</code> reader - Default Manufacturer ID: Nordic …\nRegister <code>TAGHEADER0</code> reader\nDefault header for NFC tag. Software can read these values …\nField <code>UD1</code> reader - Unique identifier byte 1\nField <code>UD2</code> reader - Unique identifier byte 2\nField <code>UD3</code> reader - Unique identifier byte 3\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:7 - Default Manufacturer ID: Nordic Semiconductor …\nBits 8:15 - Unique identifier byte 1\nBits 16:23 - Unique identifier byte 2\nBits 24:31 - Unique identifier byte 3\nRegister <code>TAGHEADER1</code> reader\nDefault header for NFC tag. Software can read these values …\nField <code>UD4</code> reader - Unique identifier byte 4\nField <code>UD5</code> reader - Unique identifier byte 5\nField <code>UD6</code> reader - Unique identifier byte 6\nField <code>UD7</code> reader - Unique identifier byte 7\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:7 - Unique identifier byte 4\nBits 8:15 - Unique identifier byte 5\nBits 16:23 - Unique identifier byte 6\nBits 24:31 - Unique identifier byte 7\nRegister <code>TAGHEADER2</code> reader\nDefault header for NFC tag. Software can read these values …\nField <code>UD10</code> reader - Unique identifier byte 10\nField <code>UD11</code> reader - Unique identifier byte 11\nField <code>UD8</code> reader - Unique identifier byte 8\nField <code>UD9</code> reader - Unique identifier byte 9\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 16:23 - Unique identifier byte 10\nBits 24:31 - Unique identifier byte 11\nBits 0:7 - Unique identifier byte 8\nBits 8:15 - Unique identifier byte 9\nRegister <code>TAGHEADER3</code> reader\nDefault header for NFC tag. Software can read these values …\nField <code>UD12</code> reader - Unique identifier byte 12\nField <code>UD13</code> reader - Unique identifier byte 13\nField <code>UD14</code> reader - Unique identifier byte 14\nField <code>UD15</code> reader - Unique identifier byte 15\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:7 - Unique identifier byte 12\nBits 8:15 - Unique identifier byte 13\nBits 16:23 - Unique identifier byte 14\nBits 24:31 - Unique identifier byte 15\n3141677471: Production tests done\n4294967295: Production tests not done\nProduction test signature n\nField <code>PRODTEST</code> reader - Production test signature n\nDescription collection: Production test signature n\nRegister <code>PRODTEST[%s]</code> reader\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DONE</code>\nChecks if the value of the field is <code>NOT_DONE</code>\nBits 0:31 - Production test signature n\nGet enumerated values variant\nA0 (r) register accessor: an alias for <code>Reg&lt;A0_SPEC&gt;</code>\nA1 (r) register accessor: an alias for <code>Reg&lt;A1_SPEC&gt;</code>\nA2 (r) register accessor: an alias for <code>Reg&lt;A2_SPEC&gt;</code>\nA3 (r) register accessor: an alias for <code>Reg&lt;A3_SPEC&gt;</code>\nA4 (r) register accessor: an alias for <code>Reg&lt;A4_SPEC&gt;</code>\nA5 (r) register accessor: an alias for <code>Reg&lt;A5_SPEC&gt;</code>\nB0 (r) register accessor: an alias for <code>Reg&lt;B0_SPEC&gt;</code>\nB1 (r) register accessor: an alias for <code>Reg&lt;B1_SPEC&gt;</code>\nB2 (r) register accessor: an alias for <code>Reg&lt;B2_SPEC&gt;</code>\nB3 (r) register accessor: an alias for <code>Reg&lt;B3_SPEC&gt;</code>\nB4 (r) register accessor: an alias for <code>Reg&lt;B4_SPEC&gt;</code>\nB5 (r) register accessor: an alias for <code>Reg&lt;B5_SPEC&gt;</code>\nT0 (r) register accessor: an alias for <code>Reg&lt;T0_SPEC&gt;</code>\nT1 (r) register accessor: an alias for <code>Reg&lt;T1_SPEC&gt;</code>\nT2 (r) register accessor: an alias for <code>Reg&lt;T2_SPEC&gt;</code>\nT3 (r) register accessor: an alias for <code>Reg&lt;T3_SPEC&gt;</code>\nT4 (r) register accessor: an alias for <code>Reg&lt;T4_SPEC&gt;</code>\nRegister block\nSlope definition A0\n0x00 - Slope definition A0\nSlope definition A1\n0x04 - Slope definition A1\nSlope definition A2\n0x08 - Slope definition A2\nSlope definition A3\n0x0c - Slope definition A3\nSlope definition A4\n0x10 - Slope definition A4\nSlope definition A5\n0x14 - Slope definition A5\nY-intercept B0\n0x18 - Y-intercept B0\nY-intercept B1\n0x1c - Y-intercept B1\nY-intercept B2\n0x20 - Y-intercept B2\nY-intercept B3\n0x24 - Y-intercept B3\nY-intercept B4\n0x28 - Y-intercept B4\nY-intercept B5\n0x2c - Y-intercept B5\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSegment end T0\n0x30 - Segment end T0\nSegment end T1\n0x34 - Segment end T1\nSegment end T2\n0x38 - Segment end T2\nSegment end T3\n0x3c - Segment end T3\nSegment end T4\n0x40 - Segment end T4\nSlope definition A0\nField <code>A</code> reader - A (slope definition) register.\nRegister <code>A0</code> reader\nBits 0:11 - A (slope definition) register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSlope definition A1\nField <code>A</code> reader - A (slope definition) register.\nRegister <code>A1</code> reader\nBits 0:11 - A (slope definition) register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSlope definition A2\nField <code>A</code> reader - A (slope definition) register.\nRegister <code>A2</code> reader\nBits 0:11 - A (slope definition) register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSlope definition A3\nField <code>A</code> reader - A (slope definition) register.\nRegister <code>A3</code> reader\nBits 0:11 - A (slope definition) register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSlope definition A4\nField <code>A</code> reader - A (slope definition) register.\nRegister <code>A4</code> reader\nBits 0:11 - A (slope definition) register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSlope definition A5\nField <code>A</code> reader - A (slope definition) register.\nRegister <code>A5</code> reader\nBits 0:11 - A (slope definition) register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nY-intercept B0\nField <code>B</code> reader - B (y-intercept)\nRegister <code>B0</code> reader\nBits 0:13 - B (y-intercept)\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nY-intercept B1\nField <code>B</code> reader - B (y-intercept)\nRegister <code>B1</code> reader\nBits 0:13 - B (y-intercept)\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nY-intercept B2\nField <code>B</code> reader - B (y-intercept)\nRegister <code>B2</code> reader\nBits 0:13 - B (y-intercept)\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nY-intercept B3\nField <code>B</code> reader - B (y-intercept)\nRegister <code>B3</code> reader\nBits 0:13 - B (y-intercept)\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nY-intercept B4\nField <code>B</code> reader - B (y-intercept)\nRegister <code>B4</code> reader\nBits 0:13 - B (y-intercept)\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nY-intercept B5\nField <code>B</code> reader - B (y-intercept)\nRegister <code>B5</code> reader\nBits 0:13 - B (y-intercept)\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRegister <code>T0</code> reader\nSegment end T0\nField <code>T</code> reader - T (segment end) register\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:7 - T (segment end) register\nRegister <code>T1</code> reader\nSegment end T1\nField <code>T</code> reader - T (segment end) register\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:7 - T (segment end) register\nRegister <code>T2</code> reader\nSegment end T2\nField <code>T</code> reader - T (segment end) register\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:7 - T (segment end) register\nRegister <code>T3</code> reader\nSegment end T3\nField <code>T</code> reader - T (segment end) register\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:7 - T (segment end) register\nRegister <code>T4</code> reader\nSegment end T4\nField <code>T</code> reader - T (segment end) register\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:7 - T (segment end) register\nBit-wise field reader\nBit-wise write field proxy\nBit-wise write field proxy\nBit-wise write field proxy\nBit-wise write field proxy\nBit-wise write field proxy\nBit-wise write field proxy\nBit-wise write field proxy\nField reader.\nWrite field Proxy with unsafe <code>bits</code>\nWrite field Proxy with safe <code>bits</code>\nField offset\nField offset\nField offset\nField offset\nField offset\nField offset\nField offset\nField offset\nField offset\nRegister reader.\nTrait implemented by readable registers to enable the <code>read</code> …\nResult from a call to <code>read</code> and argument to <code>modify</code>.\nThis structure provides volatile access to registers.\nRaw register type\nReset value of the register.\nRaw register type (<code>u8</code>, <code>u16</code>, <code>u32</code>, …).\nRegister writer.\nField width\nField width\nField width\nField width\nField width\nField width\nField width\nField width\nField width\nTrait implemented by writeable registers.\nWriter type argument to <code>write</code>, et al.\nReturns the underlying memory address of register.\nValue of the field as raw bits.\nWrites bit to the field\nWrites bit to the field\nWrites bit to the field\nWrites bit to the field\nWrites bit to the field\nWrites bit to the field\nWrites bit to the field\nReturns <code>true</code> if the bit is clear (0).\nReturns <code>true</code> if the bit is set (1).\nReads raw bits from register.\nWrites raw bits to the register.\nReads raw bits from field.\nWrites raw bits to the field\nWrites raw bits to the field\nClears the field bit\nClears the field bit\nClears the field bit by passing one\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nModifies the contents of the register by reading and then …\nReads the contents of a <code>Readable</code> register.\nWrites the reset value to <code>Writable</code> register.\nReset value of the register.\nSets the field bit\nSets the field bit\nSets the field bit by passing zero\nToggle the field bit by passing one\nToggle the field bit by passing zero\nWrites <code>variant</code> to the field\nWrites <code>variant</code> to the field\nWrites <code>variant</code> to the field\nWrites <code>variant</code> to the field\nWrites <code>variant</code> to the field\nWrites <code>variant</code> to the field\nWrites <code>variant</code> to the field\nWrites <code>variant</code> to the field\nWrites <code>variant</code> to the field\nWrites bits to a <code>Writable</code> register.\nWrites 0 to a <code>Writable</code> register.\nCONFIG (rw) register accessor: an alias for …\nEVENTS_IN (rw) register accessor: an alias for …\nEVENTS_PORT (rw) register accessor: an alias for …\nINTENCLR (rw) register accessor: an alias for …\nINTENSET (rw) register accessor: an alias for …\nRegister block\nTASKS_CLR (w) register accessor: an alias for …\nTASKS_OUT (w) register accessor: an alias for …\nTASKS_SET (w) register accessor: an alias for …\nDescription collection: Configuration for OUT[n], SET[n], …\n0x510..0x530 - Description collection: Configuration for …\nDescription collection: Event generated from pin specified …\n0x100..0x120 - Description collection: Event generated …\nEvent generated from multiple input GPIO pins with SENSE …\n0x17c - Event generated from multiple input GPIO pins with …\nReturns the argument unchanged.\nDisable interrupt\n0x308 - Disable interrupt\nEnable interrupt\n0x304 - Enable interrupt\nCalls <code>U::from(self)</code>.\nDescription collection: Task for writing to pin specified …\n0x60..0x80 - Description collection: Task for writing to …\nDescription collection: Task for writing to pin specified …\n0x00..0x20 - Description collection: Task for writing to …\nDescription collection: Task for writing to pin specified …\n0x30..0x50 - Description collection: Task for writing to …\nDescription collection: Configuration for OUT[n], SET[n], …\n0: Disabled. Pin specified by PSEL will not be acquired by …\n1: Event mode\n1: Task mode: Initial value of pin before task triggering …\n2: Task mode: Clear pin from OUT[n] task. Event mode: …\n0: Task mode: Initial value of pin before task triggering …\n1: Task mode: Set pin from OUT[n] task. Event mode: …\nMode\nField <code>MODE</code> reader - Mode\nField <code>MODE</code> writer - Mode\n0: Task mode: No effect on pin from OUT[n] task. Event …\nWhen in task mode: Initial value of the output when the …\nField <code>OUTINIT</code> reader - When in task mode: Initial value of …\nField <code>OUTINIT</code> writer - When in task mode: Initial value of …\nWhen In task mode: Operation to be performed on output …\nField <code>POLARITY</code> reader - When In task mode: Operation to be …\nField <code>POLARITY</code> writer - When In task mode: Operation to be …\nField <code>PORT</code> reader - Port number\nField <code>PORT</code> writer - Port number\nField <code>PSEL</code> reader - GPIO number associated with SET[n], CLR…\nField <code>PSEL</code> writer - GPIO number associated with SET[n], CLR…\nRegister <code>CONFIG[%s]</code> reader\n3: Task mode\n3: Task mode: Toggle pin from OUT[n]. Event mode: Generate …\nRegister <code>CONFIG[%s]</code> writer\nWrites raw bits to the register.\nDisabled. Pin specified by PSEL will not be acquired by …\nEvent mode\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nTask mode: Clear pin from OUT[n] task. Event mode: …\nTask mode: Initial value of pin before task triggering is …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>EVENT</code>\nChecks if the value of the field is <code>HI_TO_LO</code>\nChecks if the value of the field is <code>HIGH</code>\nChecks if the value of the field is <code>LO_TO_HI</code>\nChecks if the value of the field is <code>LOW</code>\nChecks if the value of the field is <code>NONE</code>\nChecks if the value of the field is <code>TASK</code>\nChecks if the value of the field is <code>TOGGLE</code>\nTask mode: Set pin from OUT[n] task. Event mode: Generate …\nTask mode: Initial value of pin before task triggering is …\nBits 0:1 - Mode\nBits 0:1 - Mode\nTask mode: No effect on pin from OUT[n] task. Event mode: …\nBit 20 - When in task mode: Initial value of the output …\nBit 20 - When in task mode: Initial value of the output …\nBits 16:17 - When In task mode: Operation to be performed …\nBits 16:17 - When In task mode: Operation to be performed …\nBit 13 - Port number\nBit 13 - Port number\nBits 8:12 - GPIO number associated with SET[n], CLR[n], …\nBits 8:12 - GPIO number associated with SET[n], CLR[n], …\nTask mode\nTask mode: Toggle pin from OUT[n]. Event mode: Generate IN…\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nEvent generated from pin specified in CONFIG[n].PSEL\nField <code>EVENTS_IN</code> reader - Event generated from pin …\nDescription collection: Event generated from pin specified …\nField <code>EVENTS_IN</code> writer - Event generated from pin …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_IN[%s]</code> reader\nRegister <code>EVENTS_IN[%s]</code> writer\nWrites raw bits to the register.\nBit 0 - Event generated from pin specified in CONFIG[n…\nBit 0 - Event generated from pin specified in CONFIG[n…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nEvent generated from multiple input GPIO pins with SENSE …\nField <code>EVENTS_PORT</code> reader - Event generated from multiple …\nEvent generated from multiple input GPIO pins with SENSE …\nField <code>EVENTS_PORT</code> writer - Event generated from multiple …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_PORT</code> reader\nRegister <code>EVENTS_PORT</code> writer\nWrites raw bits to the register.\nBit 0 - Event generated from multiple input GPIO pins with …\nBit 0 - Event generated from multiple input GPIO pins with …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\nWrite ‘1’ to disable interrupt for event IN[0]\nWrite ‘1’ to disable interrupt for event IN[0]\nField <code>IN0</code> reader - Write ‘1’ to disable interrupt for …\nField <code>IN0</code> writer - Write ‘1’ to disable interrupt for …\nWrite ‘1’ to disable interrupt for event IN[1]\nWrite ‘1’ to disable interrupt for event IN[1]\nField <code>IN1</code> reader - Write ‘1’ to disable interrupt for …\nField <code>IN1</code> writer - Write ‘1’ to disable interrupt for …\nWrite ‘1’ to disable interrupt for event IN[2]\nWrite ‘1’ to disable interrupt for event IN[2]\nField <code>IN2</code> reader - Write ‘1’ to disable interrupt for …\nField <code>IN2</code> writer - Write ‘1’ to disable interrupt for …\nWrite ‘1’ to disable interrupt for event IN[3]\nWrite ‘1’ to disable interrupt for event IN[3]\nField <code>IN3</code> reader - Write ‘1’ to disable interrupt for …\nField <code>IN3</code> writer - Write ‘1’ to disable interrupt for …\nWrite ‘1’ to disable interrupt for event IN[4]\nWrite ‘1’ to disable interrupt for event IN[4]\nField <code>IN4</code> reader - Write ‘1’ to disable interrupt for …\nField <code>IN4</code> writer - Write ‘1’ to disable interrupt for …\nWrite ‘1’ to disable interrupt for event IN[5]\nWrite ‘1’ to disable interrupt for event IN[5]\nField <code>IN5</code> reader - Write ‘1’ to disable interrupt for …\nField <code>IN5</code> writer - Write ‘1’ to disable interrupt for …\nWrite ‘1’ to disable interrupt for event IN[6]\nWrite ‘1’ to disable interrupt for event IN[6]\nField <code>IN6</code> reader - Write ‘1’ to disable interrupt for …\nField <code>IN6</code> writer - Write ‘1’ to disable interrupt for …\nWrite ‘1’ to disable interrupt for event IN[7]\nWrite ‘1’ to disable interrupt for event IN[7]\nField <code>IN7</code> reader - Write ‘1’ to disable interrupt for …\nField <code>IN7</code> writer - Write ‘1’ to disable interrupt for …\nDisable interrupt\nWrite ‘1’ to disable interrupt for event PORT\nWrite ‘1’ to disable interrupt for event PORT\nField <code>PORT</code> reader - Write ‘1’ to disable interrupt for …\nField <code>PORT</code> writer - Write ‘1’ to disable interrupt for …\nRegister <code>INTENCLR</code> reader\nRegister <code>INTENCLR</code> writer\nWrites raw bits to the register.\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBit 0 - Write ‘1’ to disable interrupt for event IN[0]\nBit 0 - Write ‘1’ to disable interrupt for event IN[0]\nBit 1 - Write ‘1’ to disable interrupt for event IN[1]\nBit 1 - Write ‘1’ to disable interrupt for event IN[1]\nBit 2 - Write ‘1’ to disable interrupt for event IN[2]\nBit 2 - Write ‘1’ to disable interrupt for event IN[2]\nBit 3 - Write ‘1’ to disable interrupt for event IN[3]\nBit 3 - Write ‘1’ to disable interrupt for event IN[3]\nBit 4 - Write ‘1’ to disable interrupt for event IN[4]\nBit 4 - Write ‘1’ to disable interrupt for event IN[4]\nBit 5 - Write ‘1’ to disable interrupt for event IN[5]\nBit 5 - Write ‘1’ to disable interrupt for event IN[5]\nBit 6 - Write ‘1’ to disable interrupt for event IN[6]\nBit 6 - Write ‘1’ to disable interrupt for event IN[6]\nBit 7 - Write ‘1’ to disable interrupt for event IN[7]\nBit 7 - Write ‘1’ to disable interrupt for event IN[7]\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 31 - Write ‘1’ to disable interrupt for event PORT\nBit 31 - Write ‘1’ to disable interrupt for event PORT\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\nWrite ‘1’ to enable interrupt for event IN[0]\nWrite ‘1’ to enable interrupt for event IN[0]\nField <code>IN0</code> reader - Write ‘1’ to enable interrupt for …\nField <code>IN0</code> writer - Write ‘1’ to enable interrupt for …\nWrite ‘1’ to enable interrupt for event IN[1]\nWrite ‘1’ to enable interrupt for event IN[1]\nField <code>IN1</code> reader - Write ‘1’ to enable interrupt for …\nField <code>IN1</code> writer - Write ‘1’ to enable interrupt for …\nWrite ‘1’ to enable interrupt for event IN[2]\nWrite ‘1’ to enable interrupt for event IN[2]\nField <code>IN2</code> reader - Write ‘1’ to enable interrupt for …\nField <code>IN2</code> writer - Write ‘1’ to enable interrupt for …\nWrite ‘1’ to enable interrupt for event IN[3]\nWrite ‘1’ to enable interrupt for event IN[3]\nField <code>IN3</code> reader - Write ‘1’ to enable interrupt for …\nField <code>IN3</code> writer - Write ‘1’ to enable interrupt for …\nWrite ‘1’ to enable interrupt for event IN[4]\nWrite ‘1’ to enable interrupt for event IN[4]\nField <code>IN4</code> reader - Write ‘1’ to enable interrupt for …\nField <code>IN4</code> writer - Write ‘1’ to enable interrupt for …\nWrite ‘1’ to enable interrupt for event IN[5]\nWrite ‘1’ to enable interrupt for event IN[5]\nField <code>IN5</code> reader - Write ‘1’ to enable interrupt for …\nField <code>IN5</code> writer - Write ‘1’ to enable interrupt for …\nWrite ‘1’ to enable interrupt for event IN[6]\nWrite ‘1’ to enable interrupt for event IN[6]\nField <code>IN6</code> reader - Write ‘1’ to enable interrupt for …\nField <code>IN6</code> writer - Write ‘1’ to enable interrupt for …\nWrite ‘1’ to enable interrupt for event IN[7]\nWrite ‘1’ to enable interrupt for event IN[7]\nField <code>IN7</code> reader - Write ‘1’ to enable interrupt for …\nField <code>IN7</code> writer - Write ‘1’ to enable interrupt for …\nEnable interrupt\nWrite ‘1’ to enable interrupt for event PORT\nWrite ‘1’ to enable interrupt for event PORT\nField <code>PORT</code> reader - Write ‘1’ to enable interrupt for …\nField <code>PORT</code> writer - Write ‘1’ to enable interrupt for …\nRegister <code>INTENSET</code> reader\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\nRegister <code>INTENSET</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBit 0 - Write ‘1’ to enable interrupt for event IN[0]\nBit 0 - Write ‘1’ to enable interrupt for event IN[0]\nBit 1 - Write ‘1’ to enable interrupt for event IN[1]\nBit 1 - Write ‘1’ to enable interrupt for event IN[1]\nBit 2 - Write ‘1’ to enable interrupt for event IN[2]\nBit 2 - Write ‘1’ to enable interrupt for event IN[2]\nBit 3 - Write ‘1’ to enable interrupt for event IN[3]\nBit 3 - Write ‘1’ to enable interrupt for event IN[3]\nBit 4 - Write ‘1’ to enable interrupt for event IN[4]\nBit 4 - Write ‘1’ to enable interrupt for event IN[4]\nBit 5 - Write ‘1’ to enable interrupt for event IN[5]\nBit 5 - Write ‘1’ to enable interrupt for event IN[5]\nBit 6 - Write ‘1’ to enable interrupt for event IN[6]\nBit 6 - Write ‘1’ to enable interrupt for event IN[6]\nBit 7 - Write ‘1’ to enable interrupt for event IN[7]\nBit 7 - Write ‘1’ to enable interrupt for event IN[7]\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 31 - Write ‘1’ to enable interrupt for event PORT\nBit 31 - Write ‘1’ to enable interrupt for event PORT\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nTask for writing to pin specified in CONFIG[n].PSEL. …\nDescription collection: Task for writing to pin specified …\nField <code>TASKS_CLR</code> writer - Task for writing to pin specified …\n1: Trigger task\nRegister <code>TASKS_CLR[%s]</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Task for writing to pin specified in CONFIG[n…\nTrigger task\nTask for writing to pin specified in CONFIG[n].PSEL. …\nDescription collection: Task for writing to pin specified …\nField <code>TASKS_OUT</code> writer - Task for writing to pin specified …\n1: Trigger task\nRegister <code>TASKS_OUT[%s]</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Task for writing to pin specified in CONFIG[n…\nTrigger task\nTask for writing to pin specified in CONFIG[n].PSEL. …\nDescription collection: Task for writing to pin specified …\nField <code>TASKS_SET</code> writer - Task for writing to pin specified …\n1: Trigger task\nRegister <code>TASKS_SET[%s]</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Task for writing to pin specified in CONFIG[n…\nTrigger task\nUnspecified\nENABLE (rw) register accessor: an alias for …\nEVENTS_RXPTRUPD (rw) register accessor: an alias for …\nEVENTS_STOPPED (rw) register accessor: an alias for …\nEVENTS_TXPTRUPD (rw) register accessor: an alias for …\nINTEN (rw) register accessor: an alias for <code>Reg&lt;INTEN_SPEC&gt;</code>\nINTENCLR (rw) register accessor: an alias for …\nINTENSET (rw) register accessor: an alias for …\nUnspecified\nUnspecified\nUnspecified\nRegister block\nTASKS_START (w) register accessor: an alias for …\nTASKS_STOP (w) register accessor: an alias for …\nUnspecified\nCluster Unspecified\n0x504..0x52c - Unspecified\nEnable I2S module.\n0x500 - Enable I2S module.\nThe RXD.PTR register has been copied to internal …\n0x104 - The RXD.PTR register has been copied to internal …\nI2S transfer stopped.\n0x108 - I2S transfer stopped.\nThe TDX.PTR register has been copied to internal …\n0x114 - The TDX.PTR register has been copied to internal …\nReturns the argument unchanged.\nEnable or disable interrupt\n0x300 - Enable or disable interrupt\nDisable interrupt\n0x308 - Disable interrupt\nEnable interrupt\n0x304 - Enable interrupt\nCalls <code>U::from(self)</code>.\nCluster Unspecified\n0x560..0x574 - Unspecified\nCluster Unspecified\n0x538 - Unspecified\nCluster Unspecified\n0x550 - Unspecified\nStarts continuous I2S transfer. Also starts MCK generator …\n0x00 - Starts continuous I2S transfer. Also starts MCK …\nStops I2S transfer. Also stops MCK generator. Triggering …\n0x04 - Stops I2S transfer. Also stops MCK generator. …\nCluster Unspecified\n0x540 - Unspecified\nALIGN (rw) register accessor: an alias for <code>Reg&lt;ALIGN_SPEC&gt;</code>\nCHANNELS (rw) register accessor: an alias for …\nRegister block\nFORMAT (rw) register accessor: an alias for …\nMCKEN (rw) register accessor: an alias for <code>Reg&lt;MCKEN_SPEC&gt;</code>\nMCKFREQ (rw) register accessor: an alias for …\nMODE (rw) register accessor: an alias for <code>Reg&lt;MODE_SPEC&gt;</code>\nRATIO (rw) register accessor: an alias for <code>Reg&lt;RATIO_SPEC&gt;</code>\nRXEN (rw) register accessor: an alias for <code>Reg&lt;RXEN_SPEC&gt;</code>\nSWIDTH (rw) register accessor: an alias for …\nTXEN (rw) register accessor: an alias for <code>Reg&lt;TXEN_SPEC&gt;</code>\nAlignment of sample within a frame.\n0x1c - Alignment of sample within a frame.\nEnable channels.\n0x24 - Enable channels.\nFrame format.\n0x20 - Frame format.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMaster clock generator enable.\n0x0c - Master clock generator enable.\nMaster clock generator frequency.\n0x10 - Master clock generator frequency.\nI2S mode.\n0x00 - I2S mode.\nMCK / LRCK ratio.\n0x14 - MCK / LRCK ratio.\nReception (RX) enable.\n0x04 - Reception (RX) enable.\nSample width.\n0x18 - Sample width.\nTransmission (TX) enable.\n0x08 - Transmission (TX) enable.\nAlignment of sample within a frame.\nField <code>ALIGN</code> reader - Alignment of sample within a frame.\nAlignment of sample within a frame.\nField <code>ALIGN</code> writer - Alignment of sample within a frame.\n0: Left-aligned.\nRegister <code>ALIGN</code> reader\n1: Right-aligned.\nRegister <code>ALIGN</code> writer\nBit 0 - Alignment of sample within a frame.\nBit 0 - Alignment of sample within a frame.\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>LEFT</code>\nChecks if the value of the field is <code>RIGHT</code>\nLeft-aligned.\nRight-aligned.\nGet enumerated values variant\nEnable channels.\nField <code>CHANNELS</code> reader - Enable channels.\nEnable channels.\nField <code>CHANNELS</code> writer - Enable channels.\n1: Left only.\nRegister <code>CHANNELS</code> reader\n2: Right only.\n0: Stereo.\nRegister <code>CHANNELS</code> writer\nWrites raw bits to the register.\nBits 0:1 - Enable channels.\nBits 0:1 - Enable channels.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>LEFT</code>\nChecks if the value of the field is <code>RIGHT</code>\nChecks if the value of the field is <code>STEREO</code>\nLeft only.\nRight only.\nStereo.\nGet enumerated values variant\n1: Alternate (left- or right-aligned) format.\nFrame format.\nField <code>FORMAT</code> reader - Frame format.\nFrame format.\nField <code>FORMAT</code> writer - Frame format.\n0: Original I2S format.\nRegister <code>FORMAT</code> reader\nRegister <code>FORMAT</code> writer\nAlternate (left- or right-aligned) format.\nWrites raw bits to the register.\nBit 0 - Frame format.\nBit 0 - Frame format.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nOriginal I2S format.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>ALIGNED</code>\nChecks if the value of the field is <code>I2S</code>\nGet enumerated values variant\n0: Master clock generator disabled and PSEL.MCK not …\n1: Master clock generator running and MCK output on …\nMaster clock generator enable.\nField <code>MCKEN</code> reader - Master clock generator enable.\nMaster clock generator enable.\nField <code>MCKEN</code> writer - Master clock generator enable.\nRegister <code>MCKEN</code> reader\nRegister <code>MCKEN</code> writer\nWrites raw bits to the register.\nMaster clock generator disabled and PSEL.MCK not …\nMaster clock generator running and MCK output on PSEL.MCK.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 0 - Master clock generator enable.\nBit 0 - Master clock generator enable.\nGet enumerated values variant\nMaster clock generator frequency.\nField <code>MCKFREQ</code> reader - Master clock generator frequency.\nMaster clock generator frequency.\nField <code>MCKFREQ</code> writer - Master clock generator frequency.\nRegister <code>MCKFREQ</code> reader\nRegister <code>MCKFREQ</code> writer\n402653184: 32 MHz / 10 = 3.2 MHz\n369098752: 32 MHz / 11 = 2.9090909 MHz\n34340864: 32 MHz / 125 = 0.256 MHz\n285212672: 32 MHz / 15 = 2.1333333 MHz\n268435456: 32 MHz / 16 = 2.0 MHz\n201326592: 32 MHz / 21 = 1.5238095\n184549376: 32 MHz / 23 = 1.3913043 MHz\n142606336: 32 MHz / 30 = 1.0666667 MHz\n138412032: 32 MHz / 31 = 1.0322581 MHz\n134217728: 32 MHz / 32 = 1.0 MHz\n100663296: 32 MHz / 42 = 0.7619048 MHz\n68157440: 32 MHz / 63 = 0.5079365 MHz\n536870912: 32 MHz / 8 = 4.0 MHz\n32 MHz / 10 = 3.2 MHz\n32 MHz / 11 = 2.9090909 MHz\n32 MHz / 125 = 0.256 MHz\n32 MHz / 15 = 2.1333333 MHz\n32 MHz / 16 = 2.0 MHz\n32 MHz / 21 = 1.5238095\n32 MHz / 23 = 1.3913043 MHz\n32 MHz / 30 = 1.0666667 MHz\n32 MHz / 31 = 1.0322581 MHz\n32 MHz / 32 = 1.0 MHz\n32 MHz / 42 = 0.7619048 MHz\n32 MHz / 63 = 0.5079365 MHz\n32 MHz / 8 = 4.0 MHz\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>_32MDIV10</code>\nChecks if the value of the field is <code>_32MDIV11</code>\nChecks if the value of the field is <code>_32MDIV125</code>\nChecks if the value of the field is <code>_32MDIV15</code>\nChecks if the value of the field is <code>_32MDIV16</code>\nChecks if the value of the field is <code>_32MDIV21</code>\nChecks if the value of the field is <code>_32MDIV23</code>\nChecks if the value of the field is <code>_32MDIV30</code>\nChecks if the value of the field is <code>_32MDIV31</code>\nChecks if the value of the field is <code>_32MDIV32</code>\nChecks if the value of the field is <code>_32MDIV42</code>\nChecks if the value of the field is <code>_32MDIV63</code>\nChecks if the value of the field is <code>_32MDIV8</code>\nBits 0:31 - Master clock generator frequency.\nBits 0:31 - Master clock generator frequency.\nGet enumerated values variant\n0: Master mode. SCK and LRCK generated from internal …\nI2S mode.\nField <code>MODE</code> reader - I2S mode.\nI2S mode.\nField <code>MODE</code> writer - I2S mode.\nRegister <code>MODE</code> reader\n1: Slave mode. SCK and LRCK generated by external master …\nRegister <code>MODE</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>MASTER</code>\nChecks if the value of the field is <code>SLAVE</code>\nMaster mode. SCK and LRCK generated from internal master …\nBit 0 - I2S mode.\nBit 0 - I2S mode.\nSlave mode. SCK and LRCK generated by external master and …\nGet enumerated values variant\nRegister <code>RATIO</code> reader\nMCK / LRCK ratio.\nField <code>RATIO</code> reader - MCK / LRCK ratio.\nMCK / LRCK ratio.\nField <code>RATIO</code> writer - MCK / LRCK ratio.\nRegister <code>RATIO</code> writer\n4: LRCK = MCK / 128\nLRCK = MCK / 128\n5: LRCK = MCK / 192\nLRCK = MCK / 192\n6: LRCK = MCK / 256\nLRCK = MCK / 256\n0: LRCK = MCK / 32\nLRCK = MCK / 32\n7: LRCK = MCK / 384\nLRCK = MCK / 384\n1: LRCK = MCK / 48\nLRCK = MCK / 48\n8: LRCK = MCK / 512\nLRCK = MCK / 512\n2: LRCK = MCK / 64\nLRCK = MCK / 64\n3: LRCK = MCK / 96\nLRCK = MCK / 96\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>_128X</code>\nChecks if the value of the field is <code>_192X</code>\nChecks if the value of the field is <code>_256X</code>\nChecks if the value of the field is <code>_32X</code>\nChecks if the value of the field is <code>_384X</code>\nChecks if the value of the field is <code>_48X</code>\nChecks if the value of the field is <code>_512X</code>\nChecks if the value of the field is <code>_64X</code>\nChecks if the value of the field is <code>_96X</code>\nBits 0:3 - MCK / LRCK ratio.\nBits 0:3 - MCK / LRCK ratio.\nGet enumerated values variant\n0: Reception disabled and now data will be written to the …\n1: Reception enabled.\nRegister <code>RXEN</code> reader\nReception (RX) enable.\nField <code>RXEN</code> reader - Reception (RX) enable.\nReception (RX) enable.\nField <code>RXEN</code> writer - Reception (RX) enable.\nRegister <code>RXEN</code> writer\nWrites raw bits to the register.\nReception disabled and now data will be written to the …\nReception enabled.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 0 - Reception (RX) enable.\nBit 0 - Reception (RX) enable.\nGet enumerated values variant\nRegister <code>SWIDTH</code> reader\nSample width.\nField <code>SWIDTH</code> reader - Sample width.\nSample width.\nField <code>SWIDTH</code> writer - Sample width.\nRegister <code>SWIDTH</code> writer\n1: 16 bit.\n16 bit.\n2: 24 bit.\n24 bit.\n0: 8 bit.\n8 bit.\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>_16BIT</code>\nChecks if the value of the field is <code>_24BIT</code>\nChecks if the value of the field is <code>_8BIT</code>\nBits 0:1 - Sample width.\nBits 0:1 - Sample width.\nGet enumerated values variant\n0: Transmission disabled and now data will be read from …\n1: Transmission enabled.\nRegister <code>TXEN</code> reader\nTransmission (TX) enable.\nField <code>TXEN</code> reader - Transmission (TX) enable.\nTransmission (TX) enable.\nField <code>TXEN</code> writer - Transmission (TX) enable.\nRegister <code>TXEN</code> writer\nWrites raw bits to the register.\nTransmission disabled and now data will be read from the …\nTransmission enabled.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 0 - Transmission (TX) enable.\nBit 0 - Transmission (TX) enable.\nGet enumerated values variant\n0: Disable\n1: Enable\nEnable I2S module.\nField <code>ENABLE</code> reader - Enable I2S module.\nEnable I2S module.\nField <code>ENABLE</code> writer - Enable I2S module.\nRegister <code>ENABLE</code> reader\nRegister <code>ENABLE</code> writer\nWrites raw bits to the register.\nDisable\nBit 0 - Enable I2S module.\nBit 0 - Enable I2S module.\nEnable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nGet enumerated values variant\nThe RXD.PTR register has been copied to internal …\nField <code>EVENTS_RXPTRUPD</code> reader - The RXD.PTR register has …\nThe RXD.PTR register has been copied to internal …\nField <code>EVENTS_RXPTRUPD</code> writer - The RXD.PTR register has …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_RXPTRUPD</code> reader\nRegister <code>EVENTS_RXPTRUPD</code> writer\nWrites raw bits to the register.\nBit 0 - The RXD.PTR register has been copied to internal …\nBit 0 - The RXD.PTR register has been copied to internal …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nI2S transfer stopped.\nField <code>EVENTS_STOPPED</code> reader - I2S transfer stopped.\nI2S transfer stopped.\nField <code>EVENTS_STOPPED</code> writer - I2S transfer stopped.\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_STOPPED</code> reader\nRegister <code>EVENTS_STOPPED</code> writer\nWrites raw bits to the register.\nBit 0 - I2S transfer stopped.\nBit 0 - I2S transfer stopped.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nThe TDX.PTR register has been copied to internal …\nField <code>EVENTS_TXPTRUPD</code> reader - The TDX.PTR register has …\nThe TDX.PTR register has been copied to internal …\nField <code>EVENTS_TXPTRUPD</code> writer - The TDX.PTR register has …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_TXPTRUPD</code> reader\nRegister <code>EVENTS_TXPTRUPD</code> writer\nWrites raw bits to the register.\nBit 0 - The TDX.PTR register has been copied to internal …\nBit 0 - The TDX.PTR register has been copied to internal …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\n0: Disable\n0: Disable\n0: Disable\n1: Enable\n1: Enable\n1: Enable\nEnable or disable interrupt\nRegister <code>INTEN</code> reader\nEnable or disable interrupt for event RXPTRUPD\nField <code>RXPTRUPD</code> reader - Enable or disable interrupt for …\nField <code>RXPTRUPD</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for event STOPPED\nField <code>STOPPED</code> reader - Enable or disable interrupt for …\nField <code>STOPPED</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for event TXPTRUPD\nField <code>TXPTRUPD</code> reader - Enable or disable interrupt for …\nField <code>TXPTRUPD</code> writer - Enable or disable interrupt for …\nRegister <code>INTEN</code> writer\nWrites raw bits to the register.\nDisable\nDisable\nDisable\nEnable\nEnable\nEnable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 1 - Enable or disable interrupt for event RXPTRUPD\nBit 1 - Enable or disable interrupt for event RXPTRUPD\nBit 2 - Enable or disable interrupt for event STOPPED\nBit 2 - Enable or disable interrupt for event STOPPED\nBit 5 - Enable or disable interrupt for event TXPTRUPD\nBit 5 - Enable or disable interrupt for event TXPTRUPD\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\n1: Disable\n1: Disable\n1: Disable\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\nDisable interrupt\nRegister <code>INTENCLR</code> reader\nWrite ‘1’ to disable interrupt for event RXPTRUPD\nWrite ‘1’ to disable interrupt for event RXPTRUPD\nField <code>RXPTRUPD</code> reader - Write ‘1’ to disable interrupt …\nField <code>RXPTRUPD</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event STOPPED\nWrite ‘1’ to disable interrupt for event STOPPED\nField <code>STOPPED</code> reader - Write ‘1’ to disable interrupt …\nField <code>STOPPED</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event TXPTRUPD\nWrite ‘1’ to disable interrupt for event TXPTRUPD\nField <code>TXPTRUPD</code> reader - Write ‘1’ to disable interrupt …\nField <code>TXPTRUPD</code> writer - Write ‘1’ to disable interrupt …\nRegister <code>INTENCLR</code> writer\nWrites raw bits to the register.\nDisable\nDisable\nDisable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 1 - Write ‘1’ to disable interrupt for event …\nBit 1 - Write ‘1’ to disable interrupt for event …\nBit 2 - Write ‘1’ to disable interrupt for event …\nBit 2 - Write ‘1’ to disable interrupt for event …\nBit 5 - Write ‘1’ to disable interrupt for event …\nBit 5 - Write ‘1’ to disable interrupt for event …\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\nEnable interrupt\nRegister <code>INTENSET</code> reader\nWrite ‘1’ to enable interrupt for event RXPTRUPD\nWrite ‘1’ to enable interrupt for event RXPTRUPD\nField <code>RXPTRUPD</code> reader - Write ‘1’ to enable interrupt …\nField <code>RXPTRUPD</code> writer - Write ‘1’ to enable interrupt …\n1: Enable\n1: Enable\n1: Enable\nWrite ‘1’ to enable interrupt for event STOPPED\nWrite ‘1’ to enable interrupt for event STOPPED\nField <code>STOPPED</code> reader - Write ‘1’ to enable interrupt …\nField <code>STOPPED</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for event TXPTRUPD\nWrite ‘1’ to enable interrupt for event TXPTRUPD\nField <code>TXPTRUPD</code> reader - Write ‘1’ to enable interrupt …\nField <code>TXPTRUPD</code> writer - Write ‘1’ to enable interrupt …\nRegister <code>INTENSET</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 1 - Write ‘1’ to enable interrupt for event …\nBit 1 - Write ‘1’ to enable interrupt for event …\nEnable\nEnable\nEnable\nBit 2 - Write ‘1’ to enable interrupt for event STOPPED\nBit 2 - Write ‘1’ to enable interrupt for event STOPPED\nBit 5 - Write ‘1’ to enable interrupt for event …\nBit 5 - Write ‘1’ to enable interrupt for event …\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nLRCK (rw) register accessor: an alias for <code>Reg&lt;LRCK_SPEC&gt;</code>\nMCK (rw) register accessor: an alias for <code>Reg&lt;MCK_SPEC&gt;</code>\nRegister block\nSCK (rw) register accessor: an alias for <code>Reg&lt;SCK_SPEC&gt;</code>\nSDIN (rw) register accessor: an alias for <code>Reg&lt;SDIN_SPEC&gt;</code>\nSDOUT (rw) register accessor: an alias for <code>Reg&lt;SDOUT_SPEC&gt;</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPin select for LRCK signal.\n0x08 - Pin select for LRCK signal.\nPin select for MCK signal.\n0x00 - Pin select for MCK signal.\nPin select for SCK signal.\n0x04 - Pin select for SCK signal.\nPin select for SDIN signal.\n0x0c - Pin select for SDIN signal.\nPin select for SDOUT signal.\n0x10 - Pin select for SDOUT signal.\n0: Connect\nConnection\nField <code>CONNECT</code> reader - Connection\nField <code>CONNECT</code> writer - Connection\n1: Disconnect\nPin select for LRCK signal.\nField <code>PIN</code> reader - Pin number\nField <code>PIN</code> writer - Pin number\nField <code>PORT</code> reader - Port number\nField <code>PORT</code> writer - Port number\nRegister <code>LRCK</code> reader\nRegister <code>LRCK</code> writer\nWrites raw bits to the register.\nBit 31 - Connection\nBit 31 - Connection\nConnect\nDisconnect\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>CONNECTED</code>\nChecks if the value of the field is <code>DISCONNECTED</code>\nBits 0:4 - Pin number\nBits 0:4 - Pin number\nBit 5 - Port number\nBit 5 - Port number\nGet enumerated values variant\n0: Connect\nConnection\nField <code>CONNECT</code> reader - Connection\nField <code>CONNECT</code> writer - Connection\n1: Disconnect\nPin select for MCK signal.\nField <code>PIN</code> reader - Pin number\nField <code>PIN</code> writer - Pin number\nField <code>PORT</code> reader - Port number\nField <code>PORT</code> writer - Port number\nRegister <code>MCK</code> reader\nRegister <code>MCK</code> writer\nWrites raw bits to the register.\nBit 31 - Connection\nBit 31 - Connection\nConnect\nDisconnect\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>CONNECTED</code>\nChecks if the value of the field is <code>DISCONNECTED</code>\nBits 0:4 - Pin number\nBits 0:4 - Pin number\nBit 5 - Port number\nBit 5 - Port number\nGet enumerated values variant\n0: Connect\nConnection\nField <code>CONNECT</code> reader - Connection\nField <code>CONNECT</code> writer - Connection\n1: Disconnect\nField <code>PIN</code> reader - Pin number\nField <code>PIN</code> writer - Pin number\nField <code>PORT</code> reader - Port number\nField <code>PORT</code> writer - Port number\nRegister <code>SCK</code> reader\nPin select for SCK signal.\nRegister <code>SCK</code> writer\nWrites raw bits to the register.\nBit 31 - Connection\nBit 31 - Connection\nConnect\nDisconnect\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>CONNECTED</code>\nChecks if the value of the field is <code>DISCONNECTED</code>\nBits 0:4 - Pin number\nBits 0:4 - Pin number\nBit 5 - Port number\nBit 5 - Port number\nGet enumerated values variant\n0: Connect\nConnection\nField <code>CONNECT</code> reader - Connection\nField <code>CONNECT</code> writer - Connection\n1: Disconnect\nField <code>PIN</code> reader - Pin number\nField <code>PIN</code> writer - Pin number\nField <code>PORT</code> reader - Port number\nField <code>PORT</code> writer - Port number\nRegister <code>SDIN</code> reader\nPin select for SDIN signal.\nRegister <code>SDIN</code> writer\nWrites raw bits to the register.\nBit 31 - Connection\nBit 31 - Connection\nConnect\nDisconnect\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>CONNECTED</code>\nChecks if the value of the field is <code>DISCONNECTED</code>\nBits 0:4 - Pin number\nBits 0:4 - Pin number\nBit 5 - Port number\nBit 5 - Port number\nGet enumerated values variant\n0: Connect\nConnection\nField <code>CONNECT</code> reader - Connection\nField <code>CONNECT</code> writer - Connection\n1: Disconnect\nField <code>PIN</code> reader - Pin number\nField <code>PIN</code> writer - Pin number\nField <code>PORT</code> reader - Port number\nField <code>PORT</code> writer - Port number\nRegister <code>SDOUT</code> reader\nPin select for SDOUT signal.\nRegister <code>SDOUT</code> writer\nWrites raw bits to the register.\nBit 31 - Connection\nBit 31 - Connection\nConnect\nDisconnect\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>CONNECTED</code>\nChecks if the value of the field is <code>DISCONNECTED</code>\nBits 0:4 - Pin number\nBits 0:4 - Pin number\nBit 5 - Port number\nBit 5 - Port number\nGet enumerated values variant\nPTR (rw) register accessor: an alias for <code>Reg&lt;PTR_SPEC&gt;</code>\nRegister block\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReceive buffer RAM start address.\n0x00 - Receive buffer RAM start address.\nField <code>PTR</code> reader - Receive buffer Data RAM start address. …\nReceive buffer RAM start address.\nField <code>PTR</code> writer - Receive buffer Data RAM start address. …\nRegister <code>PTR</code> reader\nRegister <code>PTR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Receive buffer Data RAM start address. When …\nBits 0:31 - Receive buffer Data RAM start address. When …\nMAXCNT (rw) register accessor: an alias for …\nRegister block\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSize of RXD and TXD buffers.\n0x00 - Size of RXD and TXD buffers.\nField <code>MAXCNT</code> reader - Size of RXD and TXD buffers in …\nSize of RXD and TXD buffers.\nField <code>MAXCNT</code> writer - Size of RXD and TXD buffers in …\nRegister <code>MAXCNT</code> reader\nRegister <code>MAXCNT</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:13 - Size of RXD and TXD buffers in number of 32 …\nBits 0:13 - Size of RXD and TXD buffers in number of 32 …\nStarts continuous I2S transfer. Also starts MCK generator …\nStarts continuous I2S transfer. Also starts MCK generator …\nField <code>TASKS_START</code> writer - Starts continuous I2S transfer. …\n1: Trigger task\nRegister <code>TASKS_START</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Starts continuous I2S transfer. Also starts MCK …\nTrigger task\nStops I2S transfer. Also stops MCK generator. Triggering …\nStops I2S transfer. Also stops MCK generator. Triggering …\nField <code>TASKS_STOP</code> writer - Stops I2S transfer. Also stops …\n1: Trigger task\nRegister <code>TASKS_STOP</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Stops I2S transfer. Also stops MCK generator. …\nTrigger task\nPTR (rw) register accessor: an alias for <code>Reg&lt;PTR_SPEC&gt;</code>\nRegister block\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTransmit buffer RAM start address.\n0x00 - Transmit buffer RAM start address.\nField <code>PTR</code> reader - Transmit buffer Data RAM start address. …\nTransmit buffer RAM start address.\nField <code>PTR</code> writer - Transmit buffer Data RAM start address. …\nRegister <code>PTR</code> reader\nRegister <code>PTR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Transmit buffer Data RAM start address. When …\nBits 0:31 - Transmit buffer Data RAM start address. When …\nANADETECT (rw) register accessor: an alias for …\nENABLE (rw) register accessor: an alias for …\nEVENTS_CROSS (rw) register accessor: an alias for …\nEVENTS_DOWN (rw) register accessor: an alias for …\nEVENTS_READY (rw) register accessor: an alias for …\nEVENTS_UP (rw) register accessor: an alias for …\nEXTREFSEL (rw) register accessor: an alias for …\nHYST (rw) register accessor: an alias for <code>Reg&lt;HYST_SPEC&gt;</code>\nINTENCLR (rw) register accessor: an alias for …\nINTENSET (rw) register accessor: an alias for …\nPSEL (rw) register accessor: an alias for <code>Reg&lt;PSEL_SPEC&gt;</code>\nREFSEL (rw) register accessor: an alias for …\nRESULT (r) register accessor: an alias for <code>Reg&lt;RESULT_SPEC&gt;</code>\nRegister block\nSHORTS (rw) register accessor: an alias for …\nTASKS_SAMPLE (w) register accessor: an alias for …\nTASKS_START (w) register accessor: an alias for …\nTASKS_STOP (w) register accessor: an alias for …\nAnalog detect configuration\n0x520 - Analog detect configuration\nEnable LPCOMP\n0x500 - Enable LPCOMP\nDownward or upward crossing\n0x10c - Downward or upward crossing\nDownward crossing\n0x104 - Downward crossing\nLPCOMP is ready and output is valid\n0x100 - LPCOMP is ready and output is valid\nUpward crossing\n0x108 - Upward crossing\nExternal reference select\n0x50c - External reference select\nReturns the argument unchanged.\nComparator hysteresis enable\n0x538 - Comparator hysteresis enable\nDisable interrupt\n0x308 - Disable interrupt\nEnable interrupt\n0x304 - Enable interrupt\nCalls <code>U::from(self)</code>.\nInput pin select\n0x504 - Input pin select\nReference select\n0x508 - Reference select\nCompare result\n0x400 - Compare result\nShortcuts between local events and tasks\n0x200 - Shortcuts between local events and tasks\nSample comparator value\n0x08 - Sample comparator value\nStart comparator\n0x00 - Start comparator\nStop comparator\n0x04 - Stop comparator\nAnalog detect configuration\nField <code>ANADETECT</code> reader - Analog detect configuration\nAnalog detect configuration\nField <code>ANADETECT</code> writer - Analog detect configuration\n0: Generate ANADETECT on crossing, both upward crossing …\n2: Generate ANADETECT on downward crossing only\nRegister <code>ANADETECT</code> reader\n1: Generate ANADETECT on upward crossing only\nRegister <code>ANADETECT</code> writer\nBits 0:1 - Analog detect configuration\nBits 0:1 - Analog detect configuration\nWrites raw bits to the register.\nGenerate ANADETECT on crossing, both upward crossing and …\nGenerate ANADETECT on downward crossing only\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>CROSS</code>\nChecks if the value of the field is <code>DOWN</code>\nChecks if the value of the field is <code>UP</code>\nGenerate ANADETECT on upward crossing only\nGet enumerated values variant\n0: Disable\n1: Enable\nEnable or disable LPCOMP\nField <code>ENABLE</code> reader - Enable or disable LPCOMP\nEnable LPCOMP\nField <code>ENABLE</code> writer - Enable or disable LPCOMP\nRegister <code>ENABLE</code> reader\nRegister <code>ENABLE</code> writer\nWrites raw bits to the register.\nDisable\nBits 0:1 - Enable or disable LPCOMP\nBits 0:1 - Enable or disable LPCOMP\nEnable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nGet enumerated values variant\nDownward or upward crossing\nField <code>EVENTS_CROSS</code> reader - Downward or upward crossing\nDownward or upward crossing\nField <code>EVENTS_CROSS</code> writer - Downward or upward crossing\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_CROSS</code> reader\nRegister <code>EVENTS_CROSS</code> writer\nWrites raw bits to the register.\nBit 0 - Downward or upward crossing\nBit 0 - Downward or upward crossing\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nDownward crossing\nField <code>EVENTS_DOWN</code> reader - Downward crossing\nDownward crossing\nField <code>EVENTS_DOWN</code> writer - Downward crossing\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_DOWN</code> reader\nRegister <code>EVENTS_DOWN</code> writer\nWrites raw bits to the register.\nBit 0 - Downward crossing\nBit 0 - Downward crossing\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nLPCOMP is ready and output is valid\nField <code>EVENTS_READY</code> reader - LPCOMP is ready and output is …\nLPCOMP is ready and output is valid\nField <code>EVENTS_READY</code> writer - LPCOMP is ready and output is …\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_READY</code> reader\nRegister <code>EVENTS_READY</code> writer\nWrites raw bits to the register.\nBit 0 - LPCOMP is ready and output is valid\nBit 0 - LPCOMP is ready and output is valid\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\nUpward crossing\nField <code>EVENTS_UP</code> reader - Upward crossing\nUpward crossing\nField <code>EVENTS_UP</code> writer - Upward crossing\n1: Event generated\n0: Event not generated\nRegister <code>EVENTS_UP</code> reader\nRegister <code>EVENTS_UP</code> writer\nWrites raw bits to the register.\nBit 0 - Upward crossing\nBit 0 - Upward crossing\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEvent generated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GENERATED</code>\nChecks if the value of the field is <code>NOT_GENERATED</code>\nEvent not generated\nGet enumerated values variant\n0: Use AIN0 as external analog reference\n1: Use AIN1 as external analog reference\nExternal analog reference select\nField <code>EXTREFSEL</code> reader - External analog reference select\nExternal reference select\nField <code>EXTREFSEL</code> writer - External analog reference select\nRegister <code>EXTREFSEL</code> reader\nRegister <code>EXTREFSEL</code> writer\nUse AIN0 as external analog reference\nUse AIN1 as external analog reference\nWrites raw bits to the register.\nBit 0 - External analog reference select\nBit 0 - External analog reference select\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>ANALOG_REFERENCE0</code>\nChecks if the value of the field is <code>ANALOG_REFERENCE1</code>\nGet enumerated values variant\n0: Comparator hysteresis disabled\n1: Comparator hysteresis enabled\nComparator hysteresis enable\nField <code>HYST</code> reader - Comparator hysteresis enable\nComparator hysteresis enable\nField <code>HYST</code> writer - Comparator hysteresis enable\nRegister <code>HYST</code> reader\nRegister <code>HYST</code> writer\nWrites raw bits to the register.\nComparator hysteresis disabled\nComparator hysteresis enabled\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBit 0 - Comparator hysteresis enable\nBit 0 - Comparator hysteresis enable\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nGet enumerated values variant\n1: Disable\n1: Disable\n1: Disable\n1: Disable\nWrite ‘1’ to disable interrupt for event CROSS\nWrite ‘1’ to disable interrupt for event CROSS\nField <code>CROSS</code> reader - Write ‘1’ to disable interrupt …\nField <code>CROSS</code> writer - Write ‘1’ to disable interrupt …\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\nWrite ‘1’ to disable interrupt for event DOWN\nWrite ‘1’ to disable interrupt for event DOWN\nField <code>DOWN</code> reader - Write ‘1’ to disable interrupt for …\nField <code>DOWN</code> writer - Write ‘1’ to disable interrupt for …\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\nDisable interrupt\nRegister <code>INTENCLR</code> reader\nWrite ‘1’ to disable interrupt for event READY\nWrite ‘1’ to disable interrupt for event READY\nField <code>READY</code> reader - Write ‘1’ to disable interrupt …\nField <code>READY</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for event UP\nWrite ‘1’ to disable interrupt for event UP\nField <code>UP</code> reader - Write ‘1’ to disable interrupt for …\nField <code>UP</code> writer - Write ‘1’ to disable interrupt for …\nRegister <code>INTENCLR</code> writer\nWrites raw bits to the register.\nDisable\nDisable\nDisable\nDisable\nBit 3 - Write ‘1’ to disable interrupt for event CROSS\nBit 3 - Write ‘1’ to disable interrupt for event CROSS\nBit 1 - Write ‘1’ to disable interrupt for event DOWN\nBit 1 - Write ‘1’ to disable interrupt for event DOWN\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 0 - Write ‘1’ to disable interrupt for event READY\nBit 0 - Write ‘1’ to disable interrupt for event READY\nBit 2 - Write ‘1’ to disable interrupt for event UP\nBit 2 - Write ‘1’ to disable interrupt for event UP\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nWrite ‘1’ to enable interrupt for event CROSS\nWrite ‘1’ to enable interrupt for event CROSS\nField <code>CROSS</code> reader - Write ‘1’ to enable interrupt for …\nField <code>CROSS</code> writer - Write ‘1’ to enable interrupt for …\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\nWrite ‘1’ to enable interrupt for event DOWN\nWrite ‘1’ to enable interrupt for event DOWN\nField <code>DOWN</code> reader - Write ‘1’ to enable interrupt for …\nField <code>DOWN</code> writer - Write ‘1’ to enable interrupt for …\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\nEnable interrupt\nRegister <code>INTENSET</code> reader\nWrite ‘1’ to enable interrupt for event READY\nWrite ‘1’ to enable interrupt for event READY\nField <code>READY</code> reader - Write ‘1’ to enable interrupt for …\nField <code>READY</code> writer - Write ‘1’ to enable interrupt for …\n1: Enable\n1: Enable\n1: Enable\n1: Enable\nWrite ‘1’ to enable interrupt for event UP\nWrite ‘1’ to enable interrupt for event UP\nField <code>UP</code> reader - Write ‘1’ to enable interrupt for …\nField <code>UP</code> writer - Write ‘1’ to enable interrupt for …\nRegister <code>INTENSET</code> writer\nWrites raw bits to the register.\nBit 3 - Write ‘1’ to enable interrupt for event CROSS\nBit 3 - Write ‘1’ to enable interrupt for event CROSS\nBit 1 - Write ‘1’ to enable interrupt for event DOWN\nBit 1 - Write ‘1’ to enable interrupt for event DOWN\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 0 - Write ‘1’ to enable interrupt for event READY\nBit 0 - Write ‘1’ to enable interrupt for event READY\nEnable\nEnable\nEnable\nEnable\nBit 2 - Write ‘1’ to enable interrupt for event UP\nBit 2 - Write ‘1’ to enable interrupt for event UP\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\n0: AIN0 selected as analog input\n1: AIN1 selected as analog input\n2: AIN2 selected as analog input\n3: AIN3 selected as analog input\n4: AIN4 selected as analog input\n5: AIN5 selected as analog input\n6: AIN6 selected as analog input\n7: AIN7 selected as analog input\nAnalog pin select\nField <code>PSEL</code> reader - Analog pin select\nInput pin select\nField <code>PSEL</code> writer - Analog pin select\nRegister <code>PSEL</code> reader\nRegister <code>PSEL</code> writer\nAIN0 selected as analog input\nAIN1 selected as analog input\nAIN2 selected as analog input\nAIN3 selected as analog input\nAIN4 selected as analog input\nAIN5 selected as analog input\nAIN6 selected as analog input\nAIN7 selected as analog input\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>ANALOG_INPUT0</code>\nChecks if the value of the field is <code>ANALOG_INPUT1</code>\nChecks if the value of the field is <code>ANALOG_INPUT2</code>\nChecks if the value of the field is <code>ANALOG_INPUT3</code>\nChecks if the value of the field is <code>ANALOG_INPUT4</code>\nChecks if the value of the field is <code>ANALOG_INPUT5</code>\nChecks if the value of the field is <code>ANALOG_INPUT6</code>\nChecks if the value of the field is <code>ANALOG_INPUT7</code>\nBits 0:2 - Analog pin select\nBits 0:2 - Analog pin select\nGet enumerated values variant\n7: External analog reference selected\nRegister <code>REFSEL</code> reader\n13: VDD * 11/16 selected as reference\n14: VDD * 13/16 selected as reference\n15: VDD * 15/16 selected as reference\n8: VDD * 1/16 selected as reference\n0: VDD * 1/8 selected as reference\n1: VDD * 2/8 selected as reference\n9: VDD * 3/16 selected as reference\n2: VDD * 3/8 selected as reference\n3: VDD * 4/8 selected as reference\n10: VDD * 5/16 selected as reference\n4: VDD * 5/8 selected as reference\n5: VDD * 6/8 selected as reference\n11: VDD * 7/16 selected as reference\n6: VDD * 7/8 selected as reference\n12: VDD * 9/16 selected as reference\nReference select\nField <code>REFSEL</code> reader - Reference select\nReference select\nField <code>REFSEL</code> writer - Reference select\nRegister <code>REFSEL</code> writer\nExternal analog reference selected\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>AREF</code>\nChecks if the value of the field is <code>REF11_16VDD</code>\nChecks if the value of the field is <code>REF13_16VDD</code>\nChecks if the value of the field is <code>REF15_16VDD</code>\nChecks if the value of the field is <code>REF1_16VDD</code>\nChecks if the value of the field is <code>REF1_8VDD</code>\nChecks if the value of the field is <code>REF2_8VDD</code>\nChecks if the value of the field is <code>REF3_16VDD</code>\nChecks if the value of the field is <code>REF3_8VDD</code>\nChecks if the value of the field is <code>REF4_8VDD</code>\nChecks if the value of the field is <code>REF5_16VDD</code>\nChecks if the value of the field is <code>REF5_8VDD</code>\nChecks if the value of the field is <code>REF6_8VDD</code>\nChecks if the value of the field is <code>REF7_16VDD</code>\nChecks if the value of the field is <code>REF7_8VDD</code>\nChecks if the value of the field is <code>REF9_16VDD</code>\nVDD * 11/16 selected as reference\nVDD * 13/16 selected as reference\nVDD * 15/16 selected as reference\nVDD * 1/16 selected as reference\nVDD * 1/8 selected as reference\nVDD * 2/8 selected as reference\nVDD * 3/16 selected as reference\nVDD * 3/8 selected as reference\nVDD * 4/8 selected as reference\nVDD * 5/16 selected as reference\nVDD * 5/8 selected as reference\nVDD * 6/8 selected as reference\nVDD * 7/16 selected as reference\nVDD * 7/8 selected as reference\nVDD * 9/16 selected as reference\nBits 0:3 - Reference select\nBits 0:3 - Reference select\nGet enumerated values variant\n1: Input voltage is above the reference threshold (VIN+ &gt; …\n0: Input voltage is below the reference threshold (VIN+ &lt; …\nRegister <code>RESULT</code> reader\nResult of last compare. Decision point SAMPLE task.\nField <code>RESULT</code> reader - Result of last compare. Decision …\nCompare result\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>ABOVE</code>\nChecks if the value of the field is <code>BELOW</code>\nBit 0 - Result of last compare. Decision point SAMPLE task.\nGet enumerated values variant\nShortcut between event CROSS and task STOP\nField <code>CROSS_STOP</code> reader - Shortcut between event CROSS and …\nField <code>CROSS_STOP</code> writer - Shortcut between event CROSS and …\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\nShortcut between event DOWN and task STOP\nField <code>DOWN_STOP</code> reader - Shortcut between event DOWN and …\nField <code>DOWN_STOP</code> writer - Shortcut between event DOWN and …\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\nRegister <code>SHORTS</code> reader\nShortcut between event READY and task SAMPLE\nField <code>READY_SAMPLE</code> reader - Shortcut between event READY …\nField <code>READY_SAMPLE</code> writer - Shortcut between event READY …\nShortcut between event READY and task STOP\nField <code>READY_STOP</code> reader - Shortcut between event READY and …\nField <code>READY_STOP</code> writer - Shortcut between event READY and …\nShortcuts between local events and tasks\nShortcut between event UP and task STOP\nField <code>UP_STOP</code> reader - Shortcut between event UP and task …\nField <code>UP_STOP</code> writer - Shortcut between event UP and task …\nRegister <code>SHORTS</code> writer\nWrites raw bits to the register.\nBit 4 - Shortcut between event CROSS and task STOP\nBit 4 - Shortcut between event CROSS and task STOP\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nBit 2 - Shortcut between event DOWN and task STOP\nBit 2 - Shortcut between event DOWN and task STOP\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 0 - Shortcut between event READY and task SAMPLE\nBit 0 - Shortcut between event READY and task SAMPLE\nBit 1 - Shortcut between event READY and task STOP\nBit 1 - Shortcut between event READY and task STOP\nBit 3 - Shortcut between event UP and task STOP\nBit 3 - Shortcut between event UP and task STOP\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nSample comparator value\nSample comparator value\nField <code>TASKS_SAMPLE</code> writer - Sample comparator value\n1: Trigger task\nRegister <code>TASKS_SAMPLE</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Sample comparator value\nTrigger task\nStart comparator\nStart comparator\nField <code>TASKS_START</code> writer - Start comparator\n1: Trigger task\nRegister <code>TASKS_START</code> writer")