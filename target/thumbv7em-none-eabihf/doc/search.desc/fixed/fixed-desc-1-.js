searchState.loadedDescShard("fixed", 1, "Rounds to the nearest integer, with ties rounded to even.\nRounds to the nearest integer, with ties rounded to even.\nRounds to the next integer towards 0.\nRounds to the next integer towards 0.\nRounds to the next integer towards 0.\nRounds to the next integer towards 0.\nRounds to the next integer towards 0.\nRounds to the next integer towards 0.\nRounds to the next integer towards 0.\nRounds to the next integer towards 0.\nRounds to the next integer towards 0.\nRounds to the next integer towards 0.\nRounds to the next integer towards 0.\nRounds to the next integer towards 0.\nRounds to the next integer towards 0.\nSaturating absolute value. Returns the absolute value, …\nSaturating absolute value. Returns the absolute value, …\nSaturating absolute value. Returns the absolute value, …\nSaturating absolute value. Returns the absolute value, …\nSaturating absolute value. Returns the absolute value, …\nSaturating addition. Returns the sum, saturating on …\nSaturating addition. Returns the sum, saturating on …\nSaturating addition. Returns the sum, saturating on …\nSaturating addition. Returns the sum, saturating on …\nSaturating addition. Returns the sum, saturating on …\nSaturating addition. Returns the sum, saturating on …\nSaturating addition. Returns the sum, saturating on …\nSaturating addition. Returns the sum, saturating on …\nSaturating addition. Returns the sum, saturating on …\nSaturating addition. Returns the sum, saturating on …\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>, saturating on overflow.\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>, saturating on overflow.\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>, saturating on overflow.\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>, saturating on overflow.\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>, saturating on overflow.\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>, saturating on overflow.\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>, saturating on overflow.\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>, saturating on overflow.\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>, saturating on overflow.\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>, saturating on overflow.\nSaturating addition with a signed fixed-point number. …\nSaturating addition with a signed fixed-point number. …\nSaturating addition with a signed fixed-point number. …\nSaturating addition with a signed fixed-point number. …\nSaturating addition with a signed fixed-point number. …\nSaturating addition with an unsigned fixed-point number. …\nSaturating addition with an unsigned fixed-point number. …\nSaturating addition with an unsigned fixed-point number. …\nSaturating addition with an unsigned fixed-point number. …\nSaturating addition with an unsigned fixed-point number. …\nSaturating ceil. Rounds to the next integer towards +∞, …\nSaturating ceil. Rounds to the next integer towards +∞, …\nSaturating ceil. Rounds to the next integer towards +∞, …\nSaturating ceil. Rounds to the next integer towards +∞, …\nSaturating ceil. Rounds to the next integer towards +∞, …\nSaturating ceil. Rounds to the next integer towards +∞, …\nSaturating ceil. Rounds to the next integer towards +∞, …\nSaturating ceil. Rounds to the next integer towards +∞, …\nSaturating ceil. Rounds to the next integer towards +∞, …\nSaturating ceil. Rounds to the next integer towards +∞, …\nSaturating distance. Returns the distance from <code>self</code> to …\nSaturating distance. Returns the distance from <code>self</code> to …\nSaturating distance. Returns the distance from <code>self</code> to …\nSaturating distance. Returns the distance from <code>self</code> to …\nSaturating distance. Returns the distance from <code>self</code> to …\nSaturating distance. Returns the distance from <code>self</code> to …\nSaturating distance. Returns the distance from <code>self</code> to …\nSaturating distance. Returns the distance from <code>self</code> to …\nSaturating distance. Returns the distance from <code>self</code> to …\nSaturating distance. Returns the distance from <code>self</code> to …\nSaturating division. Returns the quotient, saturating on …\nSaturating division. Returns the quotient, saturating on …\nSaturating division. Returns the quotient, saturating on …\nSaturating division. Returns the quotient, saturating on …\nSaturating division. Returns the quotient, saturating on …\nSaturating division. Returns the quotient, saturating on …\nSaturating division. Returns the quotient, saturating on …\nSaturating division. Returns the quotient, saturating on …\nSaturating division. Returns the quotient, saturating on …\nSaturating division. Returns the quotient, saturating on …\nSaturating Euclidean division. Returns the quotient, …\nSaturating Euclidean division. Returns the quotient, …\nSaturating Euclidean division. Returns the quotient, …\nSaturating Euclidean division. Returns the quotient, …\nSaturating Euclidean division. Returns the quotient, …\nSaturating Euclidean division. Returns the quotient, …\nSaturating Euclidean division. Returns the quotient, …\nSaturating Euclidean division. Returns the quotient, …\nSaturating Euclidean division. Returns the quotient, …\nSaturating Euclidean division. Returns the quotient, …\nSaturating Euclidean division by an integer. Returns the …\nSaturating Euclidean division by an integer. Returns the …\nSaturating Euclidean division by an integer. Returns the …\nSaturating Euclidean division by an integer. Returns the …\nSaturating Euclidean division by an integer. Returns the …\nSaturating Euclidean division by an integer. Returns the …\nSaturating Euclidean division by an integer. Returns the …\nSaturating Euclidean division by an integer. Returns the …\nSaturating Euclidean division by an integer. Returns the …\nSaturating Euclidean division by an integer. Returns the …\nSaturating division by an integer. Returns the quotient.\nSaturating division by an integer. Returns the quotient.\nSaturating division by an integer. Returns the quotient.\nSaturating division by an integer. Returns the quotient.\nSaturating division by an integer. Returns the quotient.\nSaturating division by an integer. Returns the quotient, …\nSaturating division by an integer. Returns the quotient, …\nSaturating division by an integer. Returns the quotient, …\nSaturating division by an integer. Returns the quotient, …\nSaturating division by an integer. Returns the quotient, …\nSaturating floor. Rounds to the next integer towards −…\nSaturating floor. Rounds to the next integer towards −…\nSaturating floor. Rounds to the next integer towards −…\nSaturating floor. Rounds to the next integer towards −…\nSaturating floor. Rounds to the next integer towards −…\nSaturating floor. Rounds to the next integer towards −…\nSaturating floor. Rounds to the next integer towards −…\nSaturating floor. Rounds to the next integer towards −…\nSaturating floor. Rounds to the next integer towards −…\nSaturating floor. Rounds to the next integer towards −…\nParses an ASCII-byte slice containing decimal digits to …\nParses an ASCII-byte slice containing decimal digits to …\nParses an ASCII-byte slice containing decimal digits to …\nParses an ASCII-byte slice containing decimal digits to …\nParses an ASCII-byte slice containing decimal digits to …\nParses an ASCII-byte slice containing decimal digits to …\nParses an ASCII-byte slice containing decimal digits to …\nParses an ASCII-byte slice containing decimal digits to …\nParses an ASCII-byte slice containing decimal digits to …\nParses an ASCII-byte slice containing decimal digits to …\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing binary digits to …\nPrases an ASCII-byte slice containing hexadecimal digits …\nPrases an ASCII-byte slice containing hexadecimal digits …\nPrases an ASCII-byte slice containing hexadecimal digits …\nPrases an ASCII-byte slice containing hexadecimal digits …\nPrases an ASCII-byte slice containing hexadecimal digits …\nPrases an ASCII-byte slice containing hexadecimal digits …\nPrases an ASCII-byte slice containing hexadecimal digits …\nPrases an ASCII-byte slice containing hexadecimal digits …\nPrases an ASCII-byte slice containing hexadecimal digits …\nPrases an ASCII-byte slice containing hexadecimal digits …\nParses an ASCII-byte slice containing octal digits to …\nParses an ASCII-byte slice containing octal digits to …\nParses an ASCII-byte slice containing octal digits to …\nParses an ASCII-byte slice containing octal digits to …\nParses an ASCII-byte slice containing octal digits to …\nParses an ASCII-byte slice containing octal digits to …\nParses an ASCII-byte slice containing octal digits to …\nParses an ASCII-byte slice containing octal digits to …\nParses an ASCII-byte slice containing octal digits to …\nParses an ASCII-byte slice containing octal digits to …\nConverts a fixed-point number to a floating-point number, …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number to a floating-point number, …\nCreates a fixed-point number from another number, …\nCreates a fixed-point number from another number, …\nCreates a fixed-point number from another number, …\nCreates a fixed-point number from another number, …\nCreates a fixed-point number from another number, …\nCreates a fixed-point number from another number, …\nCreates a fixed-point number from another number, …\nCreates a fixed-point number from another number, …\nCreates a fixed-point number from another number, …\nCreates a fixed-point number from another number, …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nPrases a string slice containing hexadecimal digits to …\nPrases a string slice containing hexadecimal digits to …\nPrases a string slice containing hexadecimal digits to …\nPrases a string slice containing hexadecimal digits to …\nPrases a string slice containing hexadecimal digits to …\nPrases a string slice containing hexadecimal digits to …\nPrases a string slice containing hexadecimal digits to …\nPrases a string slice containing hexadecimal digits to …\nPrases a string slice containing hexadecimal digits to …\nPrases a string slice containing hexadecimal digits to …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nCompute the hypotenuse of a right triange, saturating on …\nCompute the hypotenuse of a right triange, saturating on …\nCompute the hypotenuse of a right triange, saturating on …\nCompute the hypotenuse of a right triange, saturating on …\nCompute the hypotenuse of a right triange, saturating on …\nCompute the hypotenuse of a right triange, saturating on …\nCompute the hypotenuse of a right triange, saturating on …\nCompute the hypotenuse of a right triange, saturating on …\nCompute the hypotenuse of a right triange, saturating on …\nCompute the hypotenuse of a right triange, saturating on …\nInverse linear interpolation between <code>start</code> and <code>end</code>, …\nInverse linear interpolation between <code>start</code> and <code>end</code>, …\nInverse linear interpolation between <code>start</code> and <code>end</code>, …\nInverse linear interpolation between <code>start</code> and <code>end</code>, …\nInverse linear interpolation between <code>start</code> and <code>end</code>, …\nInverse linear interpolation between <code>start</code> and <code>end</code>, …\nInverse linear interpolation between <code>start</code> and <code>end</code>, …\nInverse linear interpolation between <code>start</code> and <code>end</code>, …\nInverse linear interpolation between <code>start</code> and <code>end</code>, …\nInverse linear interpolation between <code>start</code> and <code>end</code>, …\nLinear interpolation between <code>start</code> and <code>end</code>, saturating on …\nLinear interpolation between <code>start</code> and <code>end</code>, saturating on …\nLinear interpolation between <code>start</code> and <code>end</code>, saturating on …\nLinear interpolation between <code>start</code> and <code>end</code>, saturating on …\nLinear interpolation between <code>start</code> and <code>end</code>, saturating on …\nLinear interpolation between <code>start</code> and <code>end</code>, saturating on …\nLinear interpolation between <code>start</code> and <code>end</code>, saturating on …\nLinear interpolation between <code>start</code> and <code>end</code>, saturating on …\nLinear interpolation between <code>start</code> and <code>end</code>, saturating on …\nLinear interpolation between <code>start</code> and <code>end</code>, saturating on …\nSaturating multiplication. Returns the product, saturating …\nSaturating multiplication. Returns the product, saturating …\nSaturating multiplication. Returns the product, saturating …\nSaturating multiplication. Returns the product, saturating …\nSaturating multiplication. Returns the product, saturating …\nSaturating multiplication. Returns the product, saturating …\nSaturating multiplication. Returns the product, saturating …\nSaturating multiplication. Returns the product, saturating …\nSaturating multiplication. Returns the product, saturating …\nSaturating multiplication. Returns the product, saturating …\nSaturating multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, …\nSaturating multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, …\nSaturating multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, …\nSaturating multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, …\nSaturating multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, …\nSaturating multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, …\nSaturating multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, …\nSaturating multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, …\nSaturating multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, …\nSaturating multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, …\nSaturating multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, …\nSaturating multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, …\nSaturating multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, …\nSaturating multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, …\nSaturating multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, …\nSaturating multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, …\nSaturating multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, …\nSaturating multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, …\nSaturating multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, …\nSaturating multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, …\nSaturating multiplication by an integer. Returns the …\nSaturating multiplication by an integer. Returns the …\nSaturating multiplication by an integer. Returns the …\nSaturating multiplication by an integer. Returns the …\nSaturating multiplication by an integer. Returns the …\nSaturating multiplication by an integer. Returns the …\nSaturating multiplication by an integer. Returns the …\nSaturating multiplication by an integer. Returns the …\nSaturating multiplication by an integer. Returns the …\nSaturating multiplication by an integer. Returns the …\nSaturating negation. Returns the negated value, saturating …\nSaturating negation. Returns the negated value, saturating …\nSaturating negation. Returns the negated value, saturating …\nSaturating negation. Returns the negated value, saturating …\nSaturating negation. Returns the negated value, saturating …\nSaturating negation. Returns the negated value, saturating …\nSaturating negation. Returns the negated value, saturating …\nSaturating negation. Returns the negated value, saturating …\nSaturating negation. Returns the negated value, saturating …\nSaturating negation. Returns the negated value, saturating …\nSaturating next multiple of <code>other</code>.\nSaturating next multiple of <code>other</code>.\nSaturating next multiple of <code>other</code>.\nSaturating next multiple of <code>other</code>.\nSaturating next multiple of <code>other</code>.\nSaturating next multiple of <code>other</code>.\nSaturating next multiple of <code>other</code>.\nSaturating next multiple of <code>other</code>.\nSaturating next multiple of <code>other</code>.\nSaturating next multiple of <code>other</code>.\nSaturating reciprocal. Returns the reciprocal, saturating …\nSaturating reciprocal. Returns the reciprocal, saturating …\nSaturating reciprocal. Returns the reciprocal, saturating …\nSaturating reciprocal. Returns the reciprocal, saturating …\nSaturating reciprocal. Returns the reciprocal, saturating …\nSaturating reciprocal. Returns the reciprocal, saturating …\nSaturating reciprocal. Returns the reciprocal, saturating …\nSaturating reciprocal. Returns the reciprocal, saturating …\nSaturating reciprocal. Returns the reciprocal, saturating …\nSaturating reciprocal. Returns the reciprocal, saturating …\nSaturating remainder for Euclidean division by an integer. …\nSaturating remainder for Euclidean division by an integer. …\nSaturating remainder for Euclidean division by an integer. …\nSaturating remainder for Euclidean division by an integer. …\nSaturating remainder for Euclidean division by an integer. …\nSaturating remainder for Euclidean division by an integer. …\nSaturating remainder for Euclidean division by an integer. …\nSaturating remainder for Euclidean division by an integer. …\nSaturating remainder for Euclidean division by an integer. …\nSaturating remainder for Euclidean division by an integer. …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating signum. Returns a number representing the sign …\nSaturating signum. Returns a number representing the sign …\nSaturating signum. Returns a number representing the sign …\nSaturating signum. Returns a number representing the sign …\nSaturating signum. Returns a number representing the sign …\nReturns the square root, saturating on overflow. Can never …\nReturns the square root, saturating on overflow. Can never …\nReturns the square root, saturating on overflow. Can never …\nReturns the square root, saturating on overflow. Can never …\nReturns the square root, saturating on overflow. Can never …\nReturns the square root, saturating on overflow.\nReturns the square root, saturating on overflow.\nReturns the square root, saturating on overflow.\nReturns the square root, saturating on overflow.\nReturns the square root, saturating on overflow.\nSaturating subtraction. Returns the difference, saturating …\nSaturating subtraction. Returns the difference, saturating …\nSaturating subtraction. Returns the difference, saturating …\nSaturating subtraction. Returns the difference, saturating …\nSaturating subtraction. Returns the difference, saturating …\nSaturating subtraction. Returns the difference, saturating …\nSaturating subtraction. Returns the difference, saturating …\nSaturating subtraction. Returns the difference, saturating …\nSaturating subtraction. Returns the difference, saturating …\nSaturating subtraction. Returns the difference, saturating …\nSaturating subtraction with a signed fixed-point number. …\nSaturating subtraction with a signed fixed-point number. …\nSaturating subtraction with a signed fixed-point number. …\nSaturating subtraction with a signed fixed-point number. …\nSaturating subtraction with a signed fixed-point number. …\nSaturating subtraction with an unsigned fixed-point number.\nSaturating subtraction with an unsigned fixed-point number.\nSaturating subtraction with an unsigned fixed-point number.\nSaturating subtraction with an unsigned fixed-point number.\nSaturating subtraction with an unsigned fixed-point number.\nConverts a floating-point number to a fixed-point number, …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a fixed-point number, saturating if it does not …\nConverts a floating-point number to a fixed-point number, …\nConverts a fixed-point number to another number, …\nConverts a fixed-point number to another number, …\nConverts a fixed-point number to another number, …\nConverts a fixed-point number to another number, …\nConverts a fixed-point number to another number, …\nConverts a fixed-point number to another number, …\nConverts a fixed-point number to another number, …\nConverts a fixed-point number to another number, …\nConverts a fixed-point number to another number, …\nConverts a fixed-point number to another number, …\nReturns the number of bits required to represent the value.\nReturns the number of bits required to represent the value.\nReturns the number of bits required to represent the value.\nReturns the number of bits required to represent the value.\nReturns the number of bits required to represent the value.\nReturns the number of bits required to represent the value.\nReturns the number of bits required to represent the value.\nReturns the number of bits required to represent the value.\nReturns the number of bits required to represent the value.\nReturns the number of bits required to represent the value.\nReturns the number of bits required to represent the value.\nReturns the number of bits required to represent the value.\nReturns the number of bits required to represent the value.\nReturns the number of bits required to represent the value.\nReturns the number of bits required to represent the value.\nReturns the number of bits required to represent the value.\nReturns a number that represents the sign of the input …\nReturns a number representing the sign of <code>self</code>.\nReturns a number representing the sign of <code>self</code>.\nReturns a number representing the sign of <code>self</code>.\nReturns a number representing the sign of <code>self</code>.\nReturns a number representing the sign of <code>self</code>.\nReturns a number representing the sign of <code>self</code>.\nReturns a number representing the sign of <code>self</code>.\nReturns a number representing the sign of <code>self</code>.\nReturns the square root.\nReturns the square root.\nReturns the square root.\nReturns the square root.\nReturns the square root.\nReturns the square root.\nReturns the square root.\nReturns the square root.\nReturns the square root.\nReturns the square root.\nReturns the square root.\nReturns the square root.\nReturns the square root.\nSubtraction with an signed fixed-point number.\nSubtraction with an signed fixed-point number.\nSubtraction with an signed fixed-point number.\nSubtraction with a signed fixed-point number.\nSubtraction with a signed fixed-point number.\nSubtraction with a signed fixed-point number.\nSubtraction with a signed fixed-point number.\nSubtraction with a signed fixed-point number.\nSubtraction with an unsigned fixed-point number.\nSubtraction with an unsigned fixed-point number.\nSubtraction with an unsigned fixed-point number.\nSubtraction with an unsigned fixed-point number.\nSubtraction with an unsigned fixed-point number.\nSubtraction with an unsigned fixed-point number.\nSubtraction with an unsigned fixed-point number.\nSubtraction with an unsigned fixed-point number.\nReverses the byte order of the fixed-point number.\nReverses the byte order of the fixed-point number.\nReverses the byte order of the fixed-point number.\nReverses the byte order of the fixed-point number.\nReverses the byte order of the fixed-point number.\nReverses the byte order of the fixed-point number.\nReverses the byte order of the fixed-point number.\nReverses the byte order of the fixed-point number.\nReverses the byte order of the fixed-point number.\nReverses the byte order of the fixed-point number.\nReverses the byte order of the fixed-point number.\nReverses the byte order of the fixed-point number.\nReverses the byte order of the fixed-point number.\nConverts <code>self</code> to big endian from the target’s endianness.\nConverts <code>self</code> to big endian from the target’s endianness.\nConverts <code>self</code> to big endian from the target’s endianness.\nConverts <code>self</code> to big endian from the target’s endianness.\nConverts <code>self</code> to big endian from the target’s endianness.\nConverts <code>self</code> to big endian from the target’s endianness.\nConverts <code>self</code> to big endian from the target’s endianness.\nConverts <code>self</code> to big endian from the target’s endianness.\nConverts <code>self</code> to big endian from the target’s endianness.\nConverts <code>self</code> to big endian from the target’s endianness.\nConverts <code>self</code> to big endian from the target’s endianness.\nConverts <code>self</code> to big endian from the target’s endianness.\nConverts <code>self</code> to big endian from the target’s endianness.\nReturns the memory representation of the number as a byte …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nRaw transmutation to <code>u128</code>.\nCreates an integer that has a bitwise representation …\nCreates an integer that has a bitwise representation …\nCreates an integer that has a bitwise representation …\nCreates an integer that has a bitwise representation …\nCreates an integer that has a bitwise representation …\nCreates an integer that has a bitwise representation …\nCreates an integer that has a bitwise representation …\nCreates an integer that has a bitwise representation …\nCreates an integer that has a bitwise representation …\nCreates an integer that has a bitwise representation …\nCreates an integer that has a bitwise representation …\nCreates an integer that has a bitwise representation …\nCreates an integer that has a bitwise representation …\nConverts a floating-point number to a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a fixed-point number.\nConverts a floating-point number to a fixed-point number.\nConverts <code>self</code> to little endian from the target’s …\nConverts <code>self</code> to little endian from the target’s …\nConverts <code>self</code> to little endian from the target’s …\nConverts <code>self</code> to little endian from the target’s …\nConverts <code>self</code> to little endian from the target’s …\nConverts <code>self</code> to little endian from the target’s …\nConverts <code>self</code> to little endian from the target’s …\nConverts <code>self</code> to little endian from the target’s …\nConverts <code>self</code> to little endian from the target’s …\nConverts <code>self</code> to little endian from the target’s …\nConverts <code>self</code> to little endian from the target’s …\nConverts <code>self</code> to little endian from the target’s …\nConverts <code>self</code> to little endian from the target’s …\nReturns the memory representation of the number as a byte …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of the number as a byte …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nConverts a fixed-point number to another number, …\nConverts a fixed-point number to another number, panicking …\nConverts a fixed-point number to another number, wrapping …\nConverts a fixed-point number to another number.\nConverts a fixed-point number to another number.\nConverts a fixed-point number to another number.\nConverts a fixed-point number to another number.\nConverts a fixed-point number to another number.\nConverts a fixed-point number to another number.\nConverts a fixed-point number to another number.\nConverts a fixed-point number to another number.\nConverts a fixed-point number to another number.\nConverts a fixed-point number to another number.\nReturns the ordering between <code>self</code> and <code>other</code>.\nReturns the number of trailing ones in the binary …\nReturns the number of trailing ones in the binary …\nReturns the number of trailing ones in the binary …\nReturns the number of trailing ones in the binary …\nReturns the number of trailing ones in the binary …\nReturns the number of trailing ones in the binary …\nReturns the number of trailing ones in the binary …\nReturns the number of trailing ones in the binary …\nReturns the number of trailing ones in the binary …\nReturns the number of trailing ones in the binary …\nReturns the number of trailing ones in the binary …\nReturns the number of trailing ones in the binary …\nReturns the number of trailing ones in the binary …\nReturns the number of trailing zeros in the binary …\nReturns the number of trailing zeros in the binary …\nReturns the number of trailing zeros in the binary …\nReturns the number of trailing zeros in the binary …\nReturns the number of trailing zeros in the binary …\nReturns the number of trailing zeros in the binary …\nReturns the number of trailing zeros in the binary …\nReturns the number of trailing zeros in the binary …\nReturns the number of trailing zeros in the binary …\nReturns the number of trailing zeros in the binary …\nReturns the number of trailing zeros in the binary …\nReturns the number of trailing zeros in the binary …\nReturns the number of trailing zeros in the binary …\nTraits for conversions and for generic use of fixed-point …\nType aliases for all supported fixed-point numbers.\nUnbounded shift left. Computes <code>self &lt;&lt; rhs</code>, without …\nUnbounded shift left. Computes <code>self &lt;&lt; rhs</code>, without …\nUnbounded shift left. Computes <code>self &lt;&lt; rhs</code>, without …\nUnbounded shift left. Computes <code>self &lt;&lt; rhs</code>, without …\nUnbounded shift left. Computes <code>self &lt;&lt; rhs</code>, without …\nUnbounded shift left. Computes <code>self &lt;&lt; rhs</code>, without …\nUnbounded shift left. Computes <code>self &lt;&lt; rhs</code>, without …\nUnbounded shift left. Computes <code>self &lt;&lt; rhs</code>, without …\nUnbounded shift left. Computes <code>self &lt;&lt; rhs</code>, without …\nUnbounded shift left. Computes <code>self &lt;&lt; rhs</code>, without …\nUnbounded shift left. Computes <code>self &lt;&lt; rhs</code>, without …\nUnbounded shift left. Computes <code>self &lt;&lt; rhs</code>, without …\nUnbounded shift left. Computes <code>self &lt;&lt; rhs</code>, without …\nUnbounded shift right. Computes <code>self &gt;&gt; rhs</code>, without …\nUnbounded shift right. Computes <code>self &gt;&gt; rhs</code>, without …\nUnbounded shift right. Computes <code>self &gt;&gt; rhs</code>, without …\nUnbounded shift right. Computes <code>self &gt;&gt; rhs</code>, without …\nUnbounded shift right. Computes <code>self &gt;&gt; rhs</code>, without …\nUnbounded shift right. Computes <code>self &gt;&gt; rhs</code>, without …\nUnbounded shift right. Computes <code>self &gt;&gt; rhs</code>, without …\nUnbounded shift right. Computes <code>self &gt;&gt; rhs</code>, without …\nUnbounded shift right. Computes <code>self &gt;&gt; rhs</code>, without …\nUnbounded shift right. Computes <code>self &gt;&gt; rhs</code>, without …\nUnbounded shift right. Computes <code>self &gt;&gt; rhs</code>, without …\nUnbounded shift right. Computes <code>self &gt;&gt; rhs</code>, without …\nUnbounded shift right. Computes <code>self &gt;&gt; rhs</code>, without …\nUnchecked addition. Computes <code>self</code> + <code>rhs</code>, assuming …\nUnchecked addition. Computes <code>self</code> + <code>rhs</code>, assuming …\nUnchecked addition. Computes <code>self</code> + <code>rhs</code>, assuming …\nUnchecked addition. Computes <code>self</code> + <code>rhs</code>, assuming …\nUnchecked addition. Computes <code>self</code> + <code>rhs</code>, assuming …\nUnchecked addition. Computes <code>self</code> + <code>rhs</code>, assuming …\nUnchecked addition. Computes <code>self</code> + <code>rhs</code>, assuming …\nUnchecked addition. Computes <code>self</code> + <code>rhs</code>, assuming …\nUnchecked addition. Computes <code>self</code> + <code>rhs</code>, assuming …\nUnchecked addition. Computes <code>self</code> + <code>rhs</code>, assuming …\nUnchecked multiplication by an integer. Computes <code>self</code> × …\nUnchecked multiplication by an integer. Computes <code>self</code> × …\nUnchecked multiplication by an integer. Computes <code>self</code> × …\nUnchecked multiplication by an integer. Computes <code>self</code> × …\nUnchecked multiplication by an integer. Computes <code>self</code> × …\nUnchecked multiplication by an integer. Computes <code>self</code> × …\nUnchecked multiplication by an integer. Computes <code>self</code> × …\nUnchecked multiplication by an integer. Computes <code>self</code> × …\nUnchecked multiplication by an integer. Computes <code>self</code> × …\nUnchecked multiplication by an integer. Computes <code>self</code> × …\nUnchecked subtraction. Computes <code>self</code> − <code>rhs</code>, assuming …\nUnchecked subtraction. Computes <code>self</code> − <code>rhs</code>, assuming …\nUnchecked subtraction. Computes <code>self</code> − <code>rhs</code>, assuming …\nUnchecked subtraction. Computes <code>self</code> − <code>rhs</code>, assuming …\nUnchecked subtraction. Computes <code>self</code> − <code>rhs</code>, assuming …\nUnchecked subtraction. Computes <code>self</code> − <code>rhs</code>, assuming …\nUnchecked subtraction. Computes <code>self</code> − <code>rhs</code>, assuming …\nUnchecked subtraction. Computes <code>self</code> − <code>rhs</code>, assuming …\nUnchecked subtraction. Computes <code>self</code> − <code>rhs</code>, assuming …\nUnchecked subtraction. Computes <code>self</code> − <code>rhs</code>, assuming …\nReturns the absolute value using an unsigned type without …\nReturns the absolute value using an unsigned type without …\nReturns the absolute value using an unsigned type without …\nReturns the absolute value using an unsigned type without …\nReturns the absolute value using an unsigned type without …\nReturns the distance from <code>self</code> to <code>other</code> using an unsigned …\nReturns the distance from <code>self</code> to <code>other</code> using an unsigned …\nReturns the distance from <code>self</code> to <code>other</code> using an unsigned …\nReturns the distance from <code>self</code> to <code>other</code> using an unsigned …\nReturns the distance from <code>self</code> to <code>other</code> using an unsigned …\nUnwrapped absolute value. Returns the absolute value, …\nUnwrapped absolute value. Returns the absolute value, …\nUnwrapped absolute value. Returns the absolute value, …\nUnwrapped absolute value. Returns the absolute value, …\nUnwrapped absolute value. Returns the absolute value, …\nUnwrapped addition. Returns the sum, panicking on overflow.\nUnwrapped addition. Returns the sum, panicking on overflow.\nUnwrapped addition. Returns the sum, panicking on overflow.\nUnwrapped addition. Returns the sum, panicking on overflow.\nUnwrapped addition. Returns the sum, panicking on overflow.\nUnwrapped addition. Returns the sum, panicking on overflow.\nUnwrapped addition. Returns the sum, panicking on overflow.\nUnwrapped addition. Returns the sum, panicking on overflow.\nUnwrapped addition. Returns the sum, panicking on overflow.\nUnwrapped addition. Returns the sum, panicking on overflow.\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>, panicking on overflow.\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>, panicking on overflow.\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>, panicking on overflow.\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>, panicking on overflow.\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>, panicking on overflow.\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>, panicking on overflow.\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>, panicking on overflow.\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>, panicking on overflow.\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>, panicking on overflow.\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>, panicking on overflow.\nUnwrapped addition with a signed fixed-point number. …\nUnwrapped addition with a signed fixed-point number. …\nUnwrapped addition with a signed fixed-point number. …\nUnwrapped addition with a signed fixed-point number. …\nUnwrapped addition with a signed fixed-point number. …\nUnwrapped addition with an unsigned fixed-point number. …\nUnwrapped addition with an unsigned fixed-point number. …\nUnwrapped addition with an unsigned fixed-point number. …\nUnwrapped addition with an unsigned fixed-point number. …\nUnwrapped addition with an unsigned fixed-point number. …\nUnwrapped ceil. Rounds to the next integer towards +∞, …\nUnwrapped ceil. Rounds to the next integer towards +∞, …\nUnwrapped ceil. Rounds to the next integer towards +∞, …\nUnwrapped ceil. Rounds to the next integer towards +∞, …\nUnwrapped ceil. Rounds to the next integer towards +∞, …\nUnwrapped ceil. Rounds to the next integer towards +∞, …\nUnwrapped ceil. Rounds to the next integer towards +∞, …\nUnwrapped ceil. Rounds to the next integer towards +∞, …\nUnwrapped ceil. Rounds to the next integer towards +∞, …\nUnwrapped ceil. Rounds to the next integer towards +∞, …\nUnwrapped distance. Returns the distance from <code>self</code> to <code>other</code>…\nUnwrapped distance. Returns the distance from <code>self</code> to <code>other</code>…\nUnwrapped distance. Returns the distance from <code>self</code> to <code>other</code>…\nUnwrapped distance. Returns the distance from <code>self</code> to <code>other</code>…\nUnwrapped distance. Returns the distance from <code>self</code> to <code>other</code>…\nUnwrapped distance. Returns the distance from <code>self</code> to <code>other</code>…\nUnwrapped distance. Returns the distance from <code>self</code> to <code>other</code>…\nUnwrapped distance. Returns the distance from <code>self</code> to <code>other</code>…\nUnwrapped distance. Returns the distance from <code>self</code> to <code>other</code>…\nUnwrapped distance. Returns the distance from <code>self</code> to <code>other</code>…\nUnwrapped division. Returns the quotient, panicking on …\nUnwrapped division. Returns the quotient, panicking on …\nUnwrapped division. Returns the quotient, panicking on …\nUnwrapped division. Returns the quotient, panicking on …\nUnwrapped division. Returns the quotient, panicking on …\nUnwrapped division. Returns the quotient, panicking on …\nUnwrapped division. Returns the quotient, panicking on …\nUnwrapped division. Returns the quotient, panicking on …\nUnwrapped division. Returns the quotient, panicking on …\nUnwrapped division. Returns the quotient, panicking on …\nUnwrapped Euclidean division. Returns the quotient, …\nUnwrapped Euclidean division. Returns the quotient, …\nUnwrapped Euclidean division. Returns the quotient, …\nUnwrapped Euclidean division. Returns the quotient, …\nUnwrapped Euclidean division. Returns the quotient, …\nUnwrapped Euclidean division. Returns the quotient, …\nUnwrapped Euclidean division. Returns the quotient, …\nUnwrapped Euclidean division. Returns the quotient, …\nUnwrapped Euclidean division. Returns the quotient, …\nUnwrapped Euclidean division. Returns the quotient, …\nUnwrapped Euclidean division by an integer. Returns the …\nUnwrapped Euclidean division by an integer. Returns the …\nUnwrapped Euclidean division by an integer. Returns the …\nUnwrapped Euclidean division by an integer. Returns the …\nUnwrapped Euclidean division by an integer. Returns the …\nUnwrapped Euclidean division by an integer. Returns the …\nUnwrapped Euclidean division by an integer. Returns the …\nUnwrapped Euclidean division by an integer. Returns the …\nUnwrapped Euclidean division by an integer. Returns the …\nUnwrapped Euclidean division by an integer. Returns the …\nUnwrapped division by an integer. Returns the quotient.\nUnwrapped division by an integer. Returns the quotient.\nUnwrapped division by an integer. Returns the quotient.\nUnwrapped division by an integer. Returns the quotient.\nUnwrapped division by an integer. Returns the quotient.\nUnwrapped division by an integer. Returns the quotient, …\nUnwrapped division by an integer. Returns the quotient, …\nUnwrapped division by an integer. Returns the quotient, …\nUnwrapped division by an integer. Returns the quotient, …\nUnwrapped division by an integer. Returns the quotient, …\nUnwrapped floor. Rounds to the next integer towards −…\nUnwrapped floor. Rounds to the next integer towards −…\nUnwrapped floor. Rounds to the next integer towards −…\nUnwrapped floor. Rounds to the next integer towards −…\nUnwrapped floor. Rounds to the next integer towards −…\nUnwrapped floor. Rounds to the next integer towards −…\nUnwrapped floor. Rounds to the next integer towards −…\nUnwrapped floor. Rounds to the next integer towards −…\nUnwrapped floor. Rounds to the next integer towards −…\nUnwrapped floor. Rounds to the next integer towards −…\nParses an ASCII-byte slice containing decimal digits to …\nParses an ASCII-byte slice containing decimal digits to …\nParses an ASCII-byte slice containing decimal digits to …\nParses an ASCII-byte slice containing decimal digits to …\nParses an ASCII-byte slice containing decimal digits to …\nParses an ASCII-byte slice containing decimal digits to …\nParses an ASCII-byte slice containing decimal digits to …\nParses an ASCII-byte slice containing decimal digits to …\nParses an ASCII-byte slice containing decimal digits to …\nParses an ASCII-byte slice containing decimal digits to …\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing hexadecimal digits …\nParses an ASCII-byte slice containing hexadecimal digits …\nParses an ASCII-byte slice containing hexadecimal digits …\nParses an ASCII-byte slice containing hexadecimal digits …\nParses an ASCII-byte slice containing hexadecimal digits …\nParses an ASCII-byte slice containing hexadecimal digits …\nParses an ASCII-byte slice containing hexadecimal digits …\nParses an ASCII-byte slice containing hexadecimal digits …\nParses an ASCII-byte slice containing hexadecimal digits …\nParses an ASCII-byte slice containing hexadecimal digits …\nParses an ASCII-byte slice containing octal digits to …\nParses an ASCII-byte slice containing octal digits to …\nParses an ASCII-byte slice containing octal digits to …\nParses an ASCII-byte slice containing octal digits to …\nParses an ASCII-byte slice containing octal digits to …\nParses an ASCII-byte slice containing octal digits to …\nParses an ASCII-byte slice containing octal digits to …\nParses an ASCII-byte slice containing octal digits to …\nParses an ASCII-byte slice containing octal digits to …\nParses an ASCII-byte slice containing octal digits to …\nConverts a fixed-point number to a floating-point number, …\nConverts a fixed-point number, panicking if it does not …\nConverts a fixed-point number, panicking if it does not …\nConverts a fixed-point number, panicking if it does not …\nConverts a fixed-point number, panicking if it does not …\nConverts a fixed-point number, panicking if it does not …\nConverts a fixed-point number, panicking if it does not …\nConverts a fixed-point number, panicking if it does not …\nConverts a fixed-point number, panicking if it does not …\nConverts a fixed-point number, panicking if it does not …\nConverts a fixed-point number, panicking if it does not …\nConverts a fixed-point number to a floating-point number, …\nCreates a fixed-point number from another number, …\nCreates a fixed-point number from another number, …\nCreates a fixed-point number from another number, …\nCreates a fixed-point number from another number, …\nCreates a fixed-point number from another number, …\nCreates a fixed-point number from another number, …\nCreates a fixed-point number from another number, …\nCreates a fixed-point number from another number, …\nCreates a fixed-point number from another number, …\nCreates a fixed-point number from another number, …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nCompute the hypotenuse of a right triange, panicking on …\nCompute the hypotenuse of a right triange, panicking on …\nCompute the hypotenuse of a right triange, panicking on …\nCompute the hypotenuse of a right triange, panicking on …\nCompute the hypotenuse of a right triange, panicking on …\nCompute the hypotenuse of a right triange, panicking on …\nCompute the hypotenuse of a right triange, panicking on …\nCompute the hypotenuse of a right triange, panicking on …\nCompute the hypotenuse of a right triange, panicking on …\nCompute the hypotenuse of a right triange, panicking on …\nInverse linear interpolation between <code>start</code> and <code>end</code>, …\nInverse linear interpolation between <code>start</code> and <code>end</code>, …\nInverse linear interpolation between <code>start</code> and <code>end</code>, …\nInverse linear interpolation between <code>start</code> and <code>end</code>, …\nInverse linear interpolation between <code>start</code> and <code>end</code>, …\nInverse linear interpolation between <code>start</code> and <code>end</code>, …\nInverse linear interpolation between <code>start</code> and <code>end</code>, …\nInverse linear interpolation between <code>start</code> and <code>end</code>, …\nInverse linear interpolation between <code>start</code> and <code>end</code>, …\nInverse linear interpolation between <code>start</code> and <code>end</code>, …\nLinear interpolation between <code>start</code> and <code>end</code>, panicking on …\nLinear interpolation between <code>start</code> and <code>end</code>, panicking on …\nLinear interpolation between <code>start</code> and <code>end</code>, panicking on …\nLinear interpolation between <code>start</code> and <code>end</code>, panicking on …\nLinear interpolation between <code>start</code> and <code>end</code>, panicking on …\nLinear interpolation between <code>start</code> and <code>end</code>, panicking on …\nLinear interpolation between <code>start</code> and <code>end</code>, panicking on …\nLinear interpolation between <code>start</code> and <code>end</code>, panicking on …\nLinear interpolation between <code>start</code> and <code>end</code>, panicking on …\nLinear interpolation between <code>start</code> and <code>end</code>, panicking on …\nUnwrapped multiplication. Returns the product, panicking …\nUnwrapped multiplication. Returns the product, panicking …\nUnwrapped multiplication. Returns the product, panicking …\nUnwrapped multiplication. Returns the product, panicking …\nUnwrapped multiplication. Returns the product, panicking …\nUnwrapped multiplication. Returns the product, panicking …\nUnwrapped multiplication. Returns the product, panicking …\nUnwrapped multiplication. Returns the product, panicking …\nUnwrapped multiplication. Returns the product, panicking …\nUnwrapped multiplication. Returns the product, panicking …\nUnwrapped multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, …\nUnwrapped multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, …\nUnwrapped multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, …\nUnwrapped multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, …\nUnwrapped multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, …\nUnwrapped multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, …\nUnwrapped multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, …\nUnwrapped multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, …\nUnwrapped multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, …\nUnwrapped multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, …\nUnwrapped multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, …\nUnwrapped multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, …\nUnwrapped multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, …\nUnwrapped multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, …\nUnwrapped multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, …\nUnwrapped multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, …\nUnwrapped multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, …\nUnwrapped multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, …\nUnwrapped multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, …\nUnwrapped multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, …\nUnwrapped multiplication by an integer. Returns the …\nUnwrapped multiplication by an integer. Returns the …\nUnwrapped multiplication by an integer. Returns the …\nUnwrapped multiplication by an integer. Returns the …\nUnwrapped multiplication by an integer. Returns the …\nUnwrapped multiplication by an integer. Returns the …\nUnwrapped multiplication by an integer. Returns the …\nUnwrapped multiplication by an integer. Returns the …\nUnwrapped multiplication by an integer. Returns the …\nUnwrapped multiplication by an integer. Returns the …\nUnwrapped negation. Returns the negated value, panicking …\nUnwrapped negation. Returns the negated value, panicking …\nUnwrapped negation. Returns the negated value, panicking …\nUnwrapped negation. Returns the negated value, panicking …\nUnwrapped negation. Returns the negated value, panicking …\nUnwrapped negation. Returns the negated value, panicking …\nUnwrapped negation. Returns the negated value, panicking …\nUnwrapped negation. Returns the negated value, panicking …\nUnwrapped negation. Returns the negated value, panicking …\nUnwrapped negation. Returns the negated value, panicking …\nReturns the next multiple of <code>other</code>, panicking on overflow.\nReturns the next multiple of <code>other</code>, panicking on overflow.\nReturns the next multiple of <code>other</code>, panicking on overflow.\nReturns the next multiple of <code>other</code>, panicking on overflow.\nReturns the next multiple of <code>other</code>, panicking on overflow.\nReturns the next multiple of <code>other</code>, panicking on overflow.\nReturns the next multiple of <code>other</code>, panicking on overflow.\nReturns the next multiple of <code>other</code>, panicking on overflow.\nReturns the next multiple of <code>other</code>, panicking on overflow.\nReturns the next multiple of <code>other</code>, panicking on overflow.\nReturns the smallest power of two that is ≥ <code>self</code>, …\nReturns the smallest power of two that is ≥ <code>self</code>, …\nReturns the smallest power of two that is ≥ <code>self</code>, …\nReturns the smallest power of two that is ≥ <code>self</code>, …\nReturns the smallest power of two that is ≥ <code>self</code>, …\nUnwrapped reciprocal. Returns the reciprocal, panicking on …\nUnwrapped reciprocal. Returns the reciprocal, panicking on …\nUnwrapped reciprocal. Returns the reciprocal, panicking on …\nUnwrapped reciprocal. Returns the reciprocal, panicking on …\nUnwrapped reciprocal. Returns the reciprocal, panicking on …\nUnwrapped reciprocal. Returns the reciprocal, panicking on …\nUnwrapped reciprocal. Returns the reciprocal, panicking on …\nUnwrapped reciprocal. Returns the reciprocal, panicking on …\nUnwrapped reciprocal. Returns the reciprocal, panicking on …\nUnwrapped reciprocal. Returns the reciprocal, panicking on …\nUnwrapped remainder. Returns the remainder, panicking if …\nUnwrapped remainder. Returns the remainder, panicking if …\nUnwrapped remainder. Returns the remainder, panicking if …\nUnwrapped remainder. Returns the remainder, panicking if …\nUnwrapped remainder. Returns the remainder, panicking if …\nUnwrapped remainder. Returns the remainder, panicking if …\nUnwrapped remainder. Returns the remainder, panicking if …\nUnwrapped remainder. Returns the remainder, panicking if …\nUnwrapped remainder. Returns the remainder, panicking if …\nUnwrapped remainder. Returns the remainder, panicking if …\nUnwrapped remainder for Euclidean division. Returns the …\nUnwrapped remainder for Euclidean division. Returns the …\nUnwrapped remainder for Euclidean division. Returns the …\nUnwrapped remainder for Euclidean division. Returns the …\nUnwrapped remainder for Euclidean division. Returns the …\nUnwrapped remainder for Euclidean division. Returns the …\nUnwrapped remainder for Euclidean division. Returns the …\nUnwrapped remainder for Euclidean division. Returns the …\nUnwrapped remainder for Euclidean division. Returns the …\nUnwrapped remainder for Euclidean division. Returns the …\nUnwrapped remainder for Euclidean division by an integer. …\nUnwrapped remainder for Euclidean division by an integer. …\nUnwrapped remainder for Euclidean division by an integer. …\nUnwrapped remainder for Euclidean division by an integer. …\nUnwrapped remainder for Euclidean division by an integer. …\nUnwrapped remainder for Euclidean division by an integer. …\nUnwrapped remainder for Euclidean division by an integer. …\nUnwrapped remainder for Euclidean division by an integer. …\nUnwrapped remainder for Euclidean division by an integer. …\nUnwrapped remainder for Euclidean division by an integer. …\nUnwrapped fixed-point remainder for division by an integer.\nUnwrapped fixed-point remainder for division by an integer.\nUnwrapped fixed-point remainder for division by an integer.\nUnwrapped fixed-point remainder for division by an integer.\nUnwrapped fixed-point remainder for division by an integer.\nUnwrapped fixed-point remainder for division by an integer.\nUnwrapped fixed-point remainder for division by an integer.\nUnwrapped fixed-point remainder for division by an integer.\nUnwrapped fixed-point remainder for division by an integer.\nUnwrapped fixed-point remainder for division by an integer.\nUnwrapped round. Rounds to the next integer to the …\nUnwrapped round. Rounds to the next integer to the …\nUnwrapped round. Rounds to the next integer to the …\nUnwrapped round. Rounds to the next integer to the …\nUnwrapped round. Rounds to the next integer to the …\nUnwrapped round. Rounds to the next integer to the …\nUnwrapped round. Rounds to the next integer to the …\nUnwrapped round. Rounds to the next integer to the …\nUnwrapped round. Rounds to the next integer to the …\nUnwrapped round. Rounds to the next integer to the …\nUnwrapped round. Rounds to the next integer to the …\nUnwrapped round. Rounds to the next integer to the …\nUnwrapped round. Rounds to the next integer to the …\nUnwrapped round. Rounds to the next integer to the …\nUnwrapped round. Rounds to the next integer to the …\nUnwrapped round. Rounds to the next integer to the …\nUnwrapped round. Rounds to the next integer to the …\nUnwrapped round. Rounds to the next integer to the …\nUnwrapped round. Rounds to the next integer to the …\nUnwrapped round. Rounds to the next integer to the …\nUnwrapped round. Rounds to the next integer to the …\nUnwrapped round. Rounds to the next integer to the …\nUnwrapped round. Rounds to the next integer to the …\nUnwrapped round. Rounds to the next integer to the …\nUnwrapped round. Rounds to the next integer to the …\nUnwrapped round. Rounds to the next integer to the …\nUnwrapped round. Rounds to the next integer to the …\nUnwrapped round. Rounds to the next integer to the …\nUnwrapped round. Rounds to the next integer to the …\nUnwrapped round. Rounds to the next integer to the …\nUnwrapped shift left. Panics if <code>rhs</code> ≥ 8.\nUnwrapped shift left. Panics if <code>rhs</code> ≥ 16.\nUnwrapped shift left. Panics if <code>rhs</code> ≥ 32.\nUnwrapped shift left. Panics if <code>rhs</code> ≥ 64.\nUnwrapped shift left. Panics if <code>rhs</code> ≥ 128.\nUnwrapped shift left. Panics if <code>rhs</code> ≥ 8.\nUnwrapped shift left. Panics if <code>rhs</code> ≥ 16.\nUnwrapped shift left. Panics if <code>rhs</code> ≥ 32.\nUnwrapped shift left. Panics if <code>rhs</code> ≥ 64.\nUnwrapped shift left. Panics if <code>rhs</code> ≥ 128.\nUnwrapped shift right. Panics if <code>rhs</code> ≥ 8.\nUnwrapped shift right. Panics if <code>rhs</code> ≥ 16.\nUnwrapped shift right. Panics if <code>rhs</code> ≥ 32.\nUnwrapped shift right. Panics if <code>rhs</code> ≥ 64.\nUnwrapped shift right. Panics if <code>rhs</code> ≥ 128.\nUnwrapped shift right. Panics if <code>rhs</code> ≥ 8.\nUnwrapped shift right. Panics if <code>rhs</code> ≥ 16.\nUnwrapped shift right. Panics if <code>rhs</code> ≥ 32.\nUnwrapped shift right. Panics if <code>rhs</code> ≥ 64.\nUnwrapped shift right. Panics if <code>rhs</code> ≥ 128.\nUnwrapped signum. Returns a number representing the sign …\nUnwrapped signum. Returns a number representing the sign …\nUnwrapped signum. Returns a number representing the sign …\nUnwrapped signum. Returns a number representing the sign …\nUnwrapped signum. Returns a number representing the sign …\nReturns the square root. Can never overflow for unsigned …\nReturns the square root. Can never overflow for unsigned …\nReturns the square root. Can never overflow for unsigned …\nReturns the square root. Can never overflow for unsigned …\nReturns the square root. Can never overflow for unsigned …\nReturns the square root, panicking for negative numbers …\nReturns the square root, panicking for negative numbers …\nReturns the square root, panicking for negative numbers …\nReturns the square root, panicking for negative numbers …\nReturns the square root, panicking for negative numbers …\nUnwrapped subtraction. Returns the difference, panicking …\nUnwrapped subtraction. Returns the difference, panicking …\nUnwrapped subtraction. Returns the difference, panicking …\nUnwrapped subtraction. Returns the difference, panicking …\nUnwrapped subtraction. Returns the difference, panicking …\nUnwrapped subtraction. Returns the difference, panicking …\nUnwrapped subtraction. Returns the difference, panicking …\nUnwrapped subtraction. Returns the difference, panicking …\nUnwrapped subtraction. Returns the difference, panicking …\nUnwrapped subtraction. Returns the difference, panicking …\nUnwrapped subtraction with a signed fixed-point number. …\nUnwrapped subtraction with a signed fixed-point number. …\nUnwrapped subtraction with a signed fixed-point number. …\nUnwrapped subtraction with a signed fixed-point number. …\nUnwrapped subtraction with a signed fixed-point number. …\nUnwrapped subtraction with an unsigned fixed-point number. …\nUnwrapped subtraction with an unsigned fixed-point number. …\nUnwrapped subtraction with an unsigned fixed-point number. …\nUnwrapped subtraction with an unsigned fixed-point number. …\nUnwrapped subtraction with an unsigned fixed-point number. …\nConverts a floating-point number to a fixed-point number, …\nConverts a fixed-point number, panicking if it does not …\nConverts a fixed-point number, panicking if it does not …\nConverts a fixed-point number, panicking if it does not …\nConverts a fixed-point number, panicking if it does not …\nConverts a fixed-point number, panicking if it does not …\nConverts a fixed-point number, panicking if it does not …\nConverts a fixed-point number, panicking if it does not …\nConverts a fixed-point number, panicking if it does not …\nConverts a fixed-point number, panicking if it does not …\nConverts a fixed-point number, panicking if it does not …\nConverts a floating-point number to a fixed-point number, …\nConverts a fixed-point number to another number, panicking …\nConverts a fixed-point number to another number, panicking …\nConverts a fixed-point number to another number, panicking …\nConverts a fixed-point number to another number, panicking …\nConverts a fixed-point number to another number, panicking …\nConverts a fixed-point number to another number, panicking …\nConverts a fixed-point number to another number, panicking …\nConverts a fixed-point number to another number, panicking …\nConverts a fixed-point number to another number, panicking …\nConverts a fixed-point number to another number, panicking …\nDivides two fixed-point numbers and returns a wider type …\nDivides two fixed-point numbers and returns a wider type …\nDivides two fixed-point numbers and returns a wider type …\nDivides two fixed-point numbers and returns a wider type …\nDivides two fixed-point numbers and returns a wider type …\nDivides two fixed-point numbers and returns a wider type …\nDivides two fixed-point numbers and returns a wider type …\nDivides two fixed-point numbers and returns a wider type …\nDivides by an unsigned fixed-point number and returns a …\nDivides by an unsigned fixed-point number and returns a …\nDivides by an unsigned fixed-point number and returns a …\nDivides by an unsigned fixed-point number and returns a …\nMultiplies two fixed-point numbers and returns a wider …\nMultiplies two fixed-point numbers and returns a wider …\nMultiplies two fixed-point numbers and returns a wider …\nMultiplies two fixed-point numbers and returns a wider …\nMultiplies two fixed-point numbers and returns a wider …\nMultiplies two fixed-point numbers and returns a wider …\nMultiplies two fixed-point numbers and returns a wider …\nMultiplies two fixed-point numbers and returns a wider …\nMultiplies a signed fixed-point number and returns a wider …\nMultiplies a signed fixed-point number and returns a wider …\nMultiplies a signed fixed-point number and returns a wider …\nMultiplies a signed fixed-point number and returns a wider …\nMultiplies an unsigned fixed-point number and returns a …\nMultiplies an unsigned fixed-point number and returns a …\nMultiplies an unsigned fixed-point number and returns a …\nMultiplies an unsigned fixed-point number and returns a …\nDivides two fixed-point numbers and returns a wider type …\nDivides two fixed-point numbers and returns a wider type …\nDivides two fixed-point numbers and returns a wider type …\nDivides two fixed-point numbers and returns a wider type …\nDivides by a signed fixed-point number and returns a wider …\nDivides by a signed fixed-point number and returns a wider …\nDivides by a signed fixed-point number and returns a wider …\nDivides by a signed fixed-point number and returns a wider …\nWrapping absolute value. Returns the absolute value, …\nWrapping absolute value. Returns the absolute value, …\nWrapping absolute value. Returns the absolute value, …\nWrapping absolute value. Returns the absolute value, …\nWrapping absolute value. Returns the absolute value, …\nWrapping addition. Returns the sum, wrapping on overflow.\nWrapping addition. Returns the sum, wrapping on overflow.\nWrapping addition. Returns the sum, wrapping on overflow.\nWrapping addition. Returns the sum, wrapping on overflow.\nWrapping addition. Returns the sum, wrapping on overflow.\nWrapping addition. Returns the sum, wrapping on overflow.\nWrapping addition. Returns the sum, wrapping on overflow.\nWrapping addition. Returns the sum, wrapping on overflow.\nWrapping addition. Returns the sum, wrapping on overflow.\nWrapping addition. Returns the sum, wrapping on overflow.\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>, wrapping on overflow.\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>, wrapping on overflow.\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>, wrapping on overflow.\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>, wrapping on overflow.\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>, wrapping on overflow.\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>, wrapping on overflow.\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>, wrapping on overflow.\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>, wrapping on overflow.\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>, wrapping on overflow.\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>, wrapping on overflow.\nWrapping addition with a signed fixed-point number. …\nWrapping addition with a signed fixed-point number. …\nWrapping addition with a signed fixed-point number. …\nWrapping addition with a signed fixed-point number. …\nWrapping addition with a signed fixed-point number. …\nWrapping addition with an unsigned fixed-point number. …\nWrapping addition with an unsigned fixed-point number. …\nWrapping addition with an unsigned fixed-point number. …\nWrapping addition with an unsigned fixed-point number. …\nWrapping addition with an unsigned fixed-point number. …\nWrapping ceil. Rounds to the next integer towards +∞, …\nWrapping ceil. Rounds to the next integer towards +∞, …\nWrapping ceil. Rounds to the next integer towards +∞, …\nWrapping ceil. Rounds to the next integer towards +∞, …\nWrapping ceil. Rounds to the next integer towards +∞, …\nWrapping ceil. Rounds to the next integer towards +∞, …\nWrapping ceil. Rounds to the next integer towards +∞, …\nWrapping ceil. Rounds to the next integer towards +∞, …\nWrapping ceil. Rounds to the next integer towards +∞, …\nWrapping ceil. Rounds to the next integer towards +∞, …\nWrapping distance. Returns the distance from <code>self</code> to <code>other</code>.\nWrapping distance. Returns the distance from <code>self</code> to <code>other</code>.\nWrapping distance. Returns the distance from <code>self</code> to <code>other</code>.\nWrapping distance. Returns the distance from <code>self</code> to <code>other</code>.\nWrapping distance. Returns the distance from <code>self</code> to <code>other</code>.\nWrapping distance. Returns the distance from <code>self</code> to <code>other</code>…\nWrapping distance. Returns the distance from <code>self</code> to <code>other</code>…\nWrapping distance. Returns the distance from <code>self</code> to <code>other</code>…\nWrapping distance. Returns the distance from <code>self</code> to <code>other</code>…\nWrapping distance. Returns the distance from <code>self</code> to <code>other</code>…\nWrapping division. Returns the quotient, wrapping on …\nWrapping division. Returns the quotient, wrapping on …\nWrapping division. Returns the quotient, wrapping on …\nWrapping division. Returns the quotient, wrapping on …\nWrapping division. Returns the quotient, wrapping on …\nWrapping division. Returns the quotient, wrapping on …\nWrapping division. Returns the quotient, wrapping on …\nWrapping division. Returns the quotient, wrapping on …\nWrapping division. Returns the quotient, wrapping on …\nWrapping division. Returns the quotient, wrapping on …\nWrapping Euclidean division. Returns the quotient, …\nWrapping Euclidean division. Returns the quotient, …\nWrapping Euclidean division. Returns the quotient, …\nWrapping Euclidean division. Returns the quotient, …\nWrapping Euclidean division. Returns the quotient, …\nWrapping Euclidean division. Returns the quotient, …\nWrapping Euclidean division. Returns the quotient, …\nWrapping Euclidean division. Returns the quotient, …\nWrapping Euclidean division. Returns the quotient, …\nWrapping Euclidean division. Returns the quotient, …\nWrapping Euclidean division by an integer. Returns the …\nWrapping Euclidean division by an integer. Returns the …\nWrapping Euclidean division by an integer. Returns the …\nWrapping Euclidean division by an integer. Returns the …\nWrapping Euclidean division by an integer. Returns the …\nWrapping Euclidean division by an integer. Returns the …\nWrapping Euclidean division by an integer. Returns the …\nWrapping Euclidean division by an integer. Returns the …\nWrapping Euclidean division by an integer. Returns the …\nWrapping Euclidean division by an integer. Returns the …\nWrapping division by an integer. Returns the quotient.\nWrapping division by an integer. Returns the quotient.\nWrapping division by an integer. Returns the quotient.\nWrapping division by an integer. Returns the quotient.\nWrapping division by an integer. Returns the quotient.\nWrapping division by an integer. Returns the quotient, …\nWrapping division by an integer. Returns the quotient, …\nWrapping division by an integer. Returns the quotient, …\nWrapping division by an integer. Returns the quotient, …\nWrapping division by an integer. Returns the quotient, …\nWrapping floor. Rounds to the next integer towards −∞. …\nWrapping floor. Rounds to the next integer towards −∞. …\nWrapping floor. Rounds to the next integer towards −∞. …\nWrapping floor. Rounds to the next integer towards −∞. …\nWrapping floor. Rounds to the next integer towards −∞. …\nWrapping floor. Rounds to the next integer towards −∞, …\nWrapping floor. Rounds to the next integer towards −∞, …\nWrapping floor. Rounds to the next integer towards −∞, …\nWrapping floor. Rounds to the next integer towards −∞, …\nWrapping floor. Rounds to the next integer towards −∞, …\nParses an ASCII-byte slice containing decimal digits to …\nParses an ASCII-byte slice containing decimal digits to …\nParses an ASCII-byte slice containing decimal digits to …\nParses an ASCII-byte slice containing decimal digits to …\nParses an ASCII-byte slice containing decimal digits to …\nParses an ASCII-byte slice containing decimal digits to …\nParses an ASCII-byte slice containing decimal digits to …\nParses an ASCII-byte slice containing decimal digits to …\nParses an ASCII-byte slice containing decimal digits to …\nParses an ASCII-byte slice containing decimal digits to …\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing hexadecimal digits …\nParses an ASCII-byte slice containing hexadecimal digits …\nParses an ASCII-byte slice containing hexadecimal digits …\nParses an ASCII-byte slice containing hexadecimal digits …\nParses an ASCII-byte slice containing hexadecimal digits …\nParses an ASCII-byte slice containing hexadecimal digits …\nParses an ASCII-byte slice containing hexadecimal digits …\nParses an ASCII-byte slice containing hexadecimal digits …\nParses an ASCII-byte slice containing hexadecimal digits …\nParses an ASCII-byte slice containing hexadecimal digits …\nParses an ASCII-byte slice containing octal digits to …\nParses an ASCII-byte slice containing octal digits to …\nParses an ASCII-byte slice containing octal digits to …\nParses an ASCII-byte slice containing octal digits to …\nParses an ASCII-byte slice containing octal digits to …\nParses an ASCII-byte slice containing octal digits to …\nParses an ASCII-byte slice containing octal digits to …\nParses an ASCII-byte slice containing octal digits to …\nParses an ASCII-byte slice containing octal digits to …\nParses an ASCII-byte slice containing octal digits to …\nConverts a fixed-point number to a floating-point number, …\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number to a floating-point number, …\nCreates a fixed-point number from another number, wrapping …\nCreates a fixed-point number from another number, wrapping …\nCreates a fixed-point number from another number, wrapping …\nCreates a fixed-point number from another number, wrapping …\nCreates a fixed-point number from another number, wrapping …\nCreates a fixed-point number from another number, wrapping …\nCreates a fixed-point number from another number, wrapping …\nCreates a fixed-point number from another number, wrapping …\nCreates a fixed-point number from another number, wrapping …\nCreates a fixed-point number from another number, wrapping …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing decimal digits to return …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing binary digits to return a …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nParses a string slice containing octal digits to return a …\nCompute the hypotenuse of a right triange, wrapping on …\nCompute the hypotenuse of a right triange, wrapping on …\nCompute the hypotenuse of a right triange, wrapping on …\nCompute the hypotenuse of a right triange, wrapping on …\nCompute the hypotenuse of a right triange, wrapping on …\nCompute the hypotenuse of a right triange, wrapping on …\nCompute the hypotenuse of a right triange, wrapping on …\nCompute the hypotenuse of a right triange, wrapping on …\nCompute the hypotenuse of a right triange, wrapping on …\nCompute the hypotenuse of a right triange, wrapping on …\nInverse linear interpolation between <code>start</code> and <code>end</code>, …\nInverse linear interpolation between <code>start</code> and <code>end</code>, …\nInverse linear interpolation between <code>start</code> and <code>end</code>, …\nInverse linear interpolation between <code>start</code> and <code>end</code>, …\nInverse linear interpolation between <code>start</code> and <code>end</code>, …\nInverse linear interpolation between <code>start</code> and <code>end</code>, …\nInverse linear interpolation between <code>start</code> and <code>end</code>, …\nInverse linear interpolation between <code>start</code> and <code>end</code>, …\nInverse linear interpolation between <code>start</code> and <code>end</code>, …\nInverse linear interpolation between <code>start</code> and <code>end</code>, …\nLinear interpolation between <code>start</code> and <code>end</code>, wrapping on …\nLinear interpolation between <code>start</code> and <code>end</code>, wrapping on …\nLinear interpolation between <code>start</code> and <code>end</code>, wrapping on …\nLinear interpolation between <code>start</code> and <code>end</code>, wrapping on …\nLinear interpolation between <code>start</code> and <code>end</code>, wrapping on …\nLinear interpolation between <code>start</code> and <code>end</code>, wrapping on …\nLinear interpolation between <code>start</code> and <code>end</code>, wrapping on …\nLinear interpolation between <code>start</code> and <code>end</code>, wrapping on …\nLinear interpolation between <code>start</code> and <code>end</code>, wrapping on …\nLinear interpolation between <code>start</code> and <code>end</code>, wrapping on …\nWrapping multiplication. Returns the product, wrapping on …\nWrapping multiplication. Returns the product, wrapping on …\nWrapping multiplication. Returns the product, wrapping on …\nWrapping multiplication. Returns the product, wrapping on …\nWrapping multiplication. Returns the product, wrapping on …\nWrapping multiplication. Returns the product, wrapping on …\nWrapping multiplication. Returns the product, wrapping on …\nWrapping multiplication. Returns the product, wrapping on …\nWrapping multiplication. Returns the product, wrapping on …\nWrapping multiplication. Returns the product, wrapping on …\nWrapping multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, …\nWrapping multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, …\nWrapping multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, …\nWrapping multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, …\nWrapping multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, …\nWrapping multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, …\nWrapping multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, …\nWrapping multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, …\nWrapping multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, …\nWrapping multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, …\nWrapping multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, …\nWrapping multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, …\nWrapping multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, …\nWrapping multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, …\nWrapping multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, …\nWrapping multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, …\nWrapping multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, …\nWrapping multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, …\nWrapping multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, …\nWrapping multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, …\nWrapping multiplication by an integer. Returns the …\nWrapping multiplication by an integer. Returns the …\nWrapping multiplication by an integer. Returns the …\nWrapping multiplication by an integer. Returns the …\nWrapping multiplication by an integer. Returns the …\nWrapping multiplication by an integer. Returns the …\nWrapping multiplication by an integer. Returns the …\nWrapping multiplication by an integer. Returns the …\nWrapping multiplication by an integer. Returns the …\nWrapping multiplication by an integer. Returns the …\nWrapping negation. Returns the negated value, wrapping on …\nWrapping negation. Returns the negated value, wrapping on …\nWrapping negation. Returns the negated value, wrapping on …\nWrapping negation. Returns the negated value, wrapping on …\nWrapping negation. Returns the negated value, wrapping on …\nWrapping negation. Returns the negated value, wrapping on …\nWrapping negation. Returns the negated value, wrapping on …\nWrapping negation. Returns the negated value, wrapping on …\nWrapping negation. Returns the negated value, wrapping on …\nWrapping negation. Returns the negated value, wrapping on …\nWrapping next multiple of <code>other</code>.\nWrapping next multiple of <code>other</code>.\nWrapping next multiple of <code>other</code>.\nWrapping next multiple of <code>other</code>.\nWrapping next multiple of <code>other</code>.\nWrapping next multiple of <code>other</code>.\nWrapping next multiple of <code>other</code>.\nWrapping next multiple of <code>other</code>.\nWrapping next multiple of <code>other</code>.\nWrapping next multiple of <code>other</code>.\nReturns the smallest power of two that is ≥ <code>self</code>, …\nReturns the smallest power of two that is ≥ <code>self</code>, …\nReturns the smallest power of two that is ≥ <code>self</code>, …\nReturns the smallest power of two that is ≥ <code>self</code>, …\nReturns the smallest power of two that is ≥ <code>self</code>, …\nWrapping reciprocal. Returns the reciprocal, wrapping on …\nWrapping reciprocal. Returns the reciprocal, wrapping on …\nWrapping reciprocal. Returns the reciprocal, wrapping on …\nWrapping reciprocal. Returns the reciprocal, wrapping on …\nWrapping reciprocal. Returns the reciprocal, wrapping on …\nWrapping reciprocal. Returns the reciprocal, wrapping on …\nWrapping reciprocal. Returns the reciprocal, wrapping on …\nWrapping reciprocal. Returns the reciprocal, wrapping on …\nWrapping reciprocal. Returns the reciprocal, wrapping on …\nWrapping reciprocal. Returns the reciprocal, wrapping on …\nWrapping remainder for Euclidean division by an integer. …\nWrapping remainder for Euclidean division by an integer. …\nWrapping remainder for Euclidean division by an integer. …\nWrapping remainder for Euclidean division by an integer. …\nWrapping remainder for Euclidean division by an integer. …\nWrapping remainder for Euclidean division by an integer. …\nWrapping remainder for Euclidean division by an integer. …\nWrapping remainder for Euclidean division by an integer. …\nWrapping remainder for Euclidean division by an integer. …\nWrapping remainder for Euclidean division by an integer. …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping shift left. Wraps <code>rhs</code> if <code>rhs</code> ≥ 8, then shifts …\nWrapping shift left. Wraps <code>rhs</code> if <code>rhs</code> ≥ 16, then …\nWrapping shift left. Wraps <code>rhs</code> if <code>rhs</code> ≥ 32, then …\nWrapping shift left. Wraps <code>rhs</code> if <code>rhs</code> ≥ 64, then …\nWrapping shift left. Wraps <code>rhs</code> if <code>rhs</code> ≥ 128, then …\nWrapping shift left. Wraps <code>rhs</code> if <code>rhs</code> ≥ 8, then shifts …\nWrapping shift left. Wraps <code>rhs</code> if <code>rhs</code> ≥ 16, then …\nWrapping shift left. Wraps <code>rhs</code> if <code>rhs</code> ≥ 32, then …\nWrapping shift left. Wraps <code>rhs</code> if <code>rhs</code> ≥ 64, then …\nWrapping shift left. Wraps <code>rhs</code> if <code>rhs</code> ≥ 128, then …\nWrapping shift right. Wraps <code>rhs</code> if <code>rhs</code> ≥ 8, then …\nWrapping shift right. Wraps <code>rhs</code> if <code>rhs</code> ≥ 16, then …\nWrapping shift right. Wraps <code>rhs</code> if <code>rhs</code> ≥ 32, then …\nWrapping shift right. Wraps <code>rhs</code> if <code>rhs</code> ≥ 64, then …\nWrapping shift right. Wraps <code>rhs</code> if <code>rhs</code> ≥ 128, then …\nWrapping shift right. Wraps <code>rhs</code> if <code>rhs</code> ≥ 8, then …\nWrapping shift right. Wraps <code>rhs</code> if <code>rhs</code> ≥ 16, then …\nWrapping shift right. Wraps <code>rhs</code> if <code>rhs</code> ≥ 32, then …\nWrapping shift right. Wraps <code>rhs</code> if <code>rhs</code> ≥ 64, then …\nWrapping shift right. Wraps <code>rhs</code> if <code>rhs</code> ≥ 128, then …\nWrapping signum. Returns a number representing the sign of …\nWrapping signum. Returns a number representing the sign of …\nWrapping signum. Returns a number representing the sign of …\nWrapping signum. Returns a number representing the sign of …\nWrapping signum. Returns a number representing the sign of …\nReturns the square root, wrapping on overflow. Can never …\nReturns the square root, wrapping on overflow. Can never …\nReturns the square root, wrapping on overflow. Can never …\nReturns the square root, wrapping on overflow. Can never …\nReturns the square root, wrapping on overflow. Can never …\nReturns the square root, wrapping on overflow.\nReturns the square root, wrapping on overflow.\nReturns the square root, wrapping on overflow.\nReturns the square root, wrapping on overflow.\nReturns the square root, wrapping on overflow.\nWrapping subtraction. Returns the difference, wrapping on …\nWrapping subtraction. Returns the difference, wrapping on …\nWrapping subtraction. Returns the difference, wrapping on …\nWrapping subtraction. Returns the difference, wrapping on …\nWrapping subtraction. Returns the difference, wrapping on …\nWrapping subtraction. Returns the difference, wrapping on …\nWrapping subtraction. Returns the difference, wrapping on …\nWrapping subtraction. Returns the difference, wrapping on …\nWrapping subtraction. Returns the difference, wrapping on …\nWrapping subtraction. Returns the difference, wrapping on …\nWrapping subtraction with a signed fixed-point number. …\nWrapping subtraction with a signed fixed-point number. …\nWrapping subtraction with a signed fixed-point number. …\nWrapping subtraction with a signed fixed-point number. …\nWrapping subtraction with a signed fixed-point number. …\nWrapping subtraction with an unsigned fixed-point number. …\nWrapping subtraction with an unsigned fixed-point number. …\nWrapping subtraction with an unsigned fixed-point number. …\nWrapping subtraction with an unsigned fixed-point number. …\nWrapping subtraction with an unsigned fixed-point number. …\nConverts a floating-point number to a fixed-point number, …\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a fixed-point number, wrapping if it does not fit.\nConverts a floating-point number to a fixed-point number, …\nConverts a fixed-point number to another number, wrapping …\nConverts a fixed-point number to another number, wrapping …\nConverts a fixed-point number to another number, wrapping …\nConverts a fixed-point number to another number, wrapping …\nConverts a fixed-point number to another number, wrapping …\nConverts a fixed-point number to another number, wrapping …\nConverts a fixed-point number to another number, wrapping …\nConverts a fixed-point number to another number, wrapping …\nConverts a fixed-point number to another number, wrapping …\nConverts a fixed-point number to another number, wrapping …\nCatalan’s constant = 0.915965…\nEuler’s number, e = 2.71828…\nThe golden ratio conjugate, Φ = 1/φ = 0.618033…\n1/π = 0.318309…\n1/√2 = 0.707106…\n1/√2π = 0.398942…\n1/√3 = 0.577350…\n1/√π = 0.564189…\n1/τ = 0.159154…\n2/π = 0.636619…\n2/√π = 1.12837…\n2/τ = 0.318309…\n4/τ = 0.636619…\nπ/2 = 1.57079…\nπ/3 = 1.04719…\nπ/4 = 0.785398…\nπ/6 = 0.523598…\nπ/8 = 0.392699…\nτ/12 = 0.523598…\nτ/2 = 3.14159…\nτ/3 = 2.09439…\nτ/4 = 1.57079…\nτ/6 = 1.04719…\nτ/8 = 0.785398…\nThe Euler-Mascheroni constant, γ = 0.577215…\nln 10 = 2.30258…\nln 2 = 0.693147…\nlog10 2 = 0.301029…\nlog10 e = 0.434294…\nlog2 10 = 3.32192…\nlog2 e = 1.44269…\nThe golden ratio, φ = 1.61803…\nArchimedes’ constant, π = 3.14159…\n√2 = 1.41421…\n√2π = 2.50662…\n√3 = 1.73205…\n√e = 1.64872…\n√φ = 1.27201…\n√π = 1.77245…\nA turn, τ = 6.28318…\nBasic mathematical constants.\nEuler’s number, e = 2.71828…\n1/π = 0.318309…\n1/√2 = 0.707106…\n2/π = 0.636619…\n2/√π = 1.12837…\nπ/2 = 1.57079…\nπ/3 = 1.04719…\nπ/4 = 0.785398…\nπ/6 = 0.523598…\nπ/8 = 0.392699…\nln 10 = 2.30258…\nln 2 = 0.693147…\nlog10 2 = 0.301029…\nlog10 e = 0.434294…\nlog2 10 = 3.32192…\nlog2 e = 1.44269…\nArchimedes’ constant, π = 3.14159…\n√2 = 1.41421…\nA turn, τ = 6.28318…\nThe size of this integer type in bits.\nThe primitive integer underlying type.\nA byte array with the same size as the type.\nThe difference between any two successive representable …\nThe equivalent fixed-point type.\nThe number of fractional bits.\nThis trait provides methods common to all fixed-point …\nThis trait is implemented for Fixed::Bits for all …\nThis trait is used to provide supertraits to the <code>FixedBits</code> …\nThis trait is used to provide supertrait to the <code>FixedBits</code> …\nThis trait is used to provide supertraits to the <code>FixedBits</code> …\nThis trait is used to provide supertraits to the <code>FixedBits</code> …\nThis trait is used to provide supertraits to the <code>FixedBits</code> …\nThis trait provides a way to convert a number to/from an …\nThis trait is used to provide supertraits to the <code>Fixed</code> …\nThis trait is used to provide supertraits to the <code>Fixed</code> …\nThis trait is used to provide supertraits to the <code>Fixed</code> …\nThis trait is used to provide supertraits to the <code>Fixed</code> …\nThis trait is used to provide supertraits to the <code>Fixed</code> …\nThis trait is used to provide supertraits to the <code>Fixed</code> …\nThis trait provides methods common to all signed …\nThis trait provides methods common to all unsigned …\nThe number of fractional bits as a compile-time <code>Unsigned</code> …\nThis trait provides checked conversions from fixed-point …\nThe number of integer bits.\n<code>true</code> if the type is signed.\n<code>true</code> if this integer type is signed.\nThis trait provides lossless conversions that might be …\nThis trait provides lossless conversions that might be …\nThis trait provides infallible conversions that might be …\nThis trait provides infallible conversions that might be …\nThe largest value that can be represented.\nThe largest value that can be represented by this integer …\nThe smallest value that can be represented.\nThe smallest value that can be represented by this integer …\nThe non-zero wrapped version of <code>Bits</code>.\nA signed fixed-point number type with the same number of …\nNegative one if the fixed-point number can represent it, …\nOne if the fixed-point number can represent it, otherwise …\nThis trait provides checked conversions to fixed-point …\nAn unsigned fixed-point number type with the same number …\nZero.\nReturns the absolute value.\nReturns the absolute value of the difference between <code>self</code> …\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>.\nAddition with an signed fixed-point number.\nAddition with an unsigned fixed-point number.\nConverts a reference into a reference to the equivalent …\nConverts a mutable reference into a mutable reference to …\nReturns the bit pattern of <code>self</code> reinterpreted as a signed …\nReturns the bit pattern of <code>self</code> reinterpreted as an …\nRounds to the next integer towards +∞.\nChecked absolute value. Returns the absolute value, or <code>None</code>…\nChecked addition. Returns the sum, or <code>None</code> on overflow.\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>, returning <code>None</code> on …\nChecked addition with an signed fixed-point number. …\nChecked addition with an unsigned fixed-point number. …\nChecked ceil. Rounds to the next integer towards +∞, …\nChecked distance. Returns the distance from <code>self</code> to <code>other</code>, …\nChecked division. Returns the quotient, or <code>None</code> if the …\nChecked remainder for Euclidean division. Returns the …\nChecked Euclidean division by an integer. Returns the …\nChecked division by an integer. Returns the quotient, or …\nChecked floor. Rounds to the next integer towards −∞, …\nConverts from a fixed-point number if it fits, otherwise …\nCreates a fixed-point number from another number if it …\nCompute the hypotenuse of a right triange, returning <code>None</code> …\nChecked integer logarithm to the specified base, rounded …\nChecked integer base-10 logarithm, rounded down. Returns …\nChecked integer base-2 logarithm, rounded down. Returns the\nChecked inverse linear interpolation between <code>start</code> and <code>end</code>…\nChecked linear interpolation between <code>start</code> and <code>end</code>. …\nChecked multiplication. Returns the product, or <code>None</code> on …\nChecked multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, or …\nChecked multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, or …\nChecked multiplication by an integer. Returns the product, …\nChecked negation. Returns the negated value, or <code>None</code> on …\nChecked next multiple of <code>other</code>. Returns the next multiple, …\nReturns the smallest power of two that is ≥ <code>self</code>, or …\nChecked reciprocal. Returns the reciprocal, or <code>None</code> if <code>self</code>…\nChecked remainder. Returns the remainder, or <code>None</code> if the …\nChecked remainder for Euclidean division. Returns the …\nChecked remainder for Euclidean division by an integer. …\nChecked fixed-point remainder for division by an integer. …\nChecked round. Rounds to the nearest integer, with ties …\nChecked round. Rounds to the nearest integer, with ties …\nChecked round. Rounds to the nearest integer, with ties …\nChecked shift left. Returns the shifted number, or <code>None</code> if …\nChecked shift right. Returns the shifted number, or <code>None</code> …\nChecked signum. Returns a number representing the sign of …\nChecked square root. Returns <code>None</code> for negative numbers or …\nChecked subtraction. Returns the difference, or <code>None</code> on …\nChecked subtraction with an signed fixed-point number. …\nChecked subtraction with an unsigned fixed-point number. …\nConverts to a fixed-point number if it fits, otherwise …\nConverts a fixed-point number to another number if it fits,\nReturns the number of ones in the binary representation.\nReturns the number of zeros in the binary representation.\nReturns the distance from <code>self</code> to <code>other</code>.\nEuclidean division by an integer.\nEuclidean division by an integer.\nRounds to the next integer towards −∞.\nReturns the fractional part.\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing hexadecimal digits …\nParses an ASCII-byte slice containing octal digits to …\nConverts a fixed-point number from big endian to the …\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number that has a bitwise …\nConverts from a fixed-point number.\nConverts an owned equivalent fixed-point type to this type.\nConverts a fixed-point number from little endian to the …\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number from its representation as a …\nCreates a fixed-point number from another number.\nParses a string slice containing binary digits to return a …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing octal digits to return a …\nReturns a reference to <code>self</code> as <code>FixedSigned</code> if the type is …\nReturns a mutable reference to <code>self</code> as <code>FixedSigned</code> if the …\nReturns a reference to <code>self</code> as <code>FixedUnsigned</code> if the type is\nReturns a mutable reference to <code>self</code> as <code>FixedUnsigned</code> if …\nReturns the highest one in the binary representation, or …\nCompute the hypotenuse of a right triange.\nReturns the integer part.\nInteger logarithm to the specified base, rounded down.\nInteger base-10 logarithm, rounded down.\nInteger base-2 logarithm, rounded down.\nInverse linear interpolation between <code>start</code> and <code>end</code>.\nReturns <code>true</code> if the number is &lt; 0.\nReturns <code>true</code> if the number is &gt; 0.\nReturns <code>true</code> if the fixed-point number is 2k for some …\nReturns <code>true</code> if the number is zero.\nReturns the number of leading ones in the binary …\nReturns the number of leading zeros in the binary …\nLinear interpolation between <code>start</code> and <code>end</code>.\nPerforms the conversion.\nPerforms the conversion.\nPerforms the conversion.\nPerforms the conversion.\nReturns the mean of <code>self</code> and <code>other</code>.\nMultiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>.\nMultiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>.\nConverts a mutable reference to the equivalent fixed-point …\nReturns the next multiple of <code>other</code>.\nReturns the smallest power of two that is ≥ <code>self</code>.\nOverflowing absolute value.\nOverflowing addition.\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>.\nOverflowing addition with an signed fixed-point number.\nOverflowing addition with an unsigned fixed-point number.\nOverflowing ceil. Rounds to the next integer towards +∞.\nOverflowing distance.\nOverflowing division.\nOverflowing Euclidean division.\nOverflowing Euclidean division by an integer.\nOverflowing division by an integer.\nOverflowing floor. Rounds to the next integer towards −…\nParses an ASCII-byte slice containing decimal digits to …\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing hexadecimal digits …\nParses an ASCII-byte slice containing octal digits to …\nConverts from a fixed-point number.\nCreates a fixed-point number from another number.\nParses a string slice containing decimal digits to return a\nParses a string slice containing binary digits to return a …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing octal digits to return a …\nCompute the hypotenuse of a right triange.\nOverflowing inverse linear interpolation between <code>start</code> and …\nOverflowing linear interpolation between <code>start</code> and <code>end</code>.\nOverflowing multiplication.\nOverflowing multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>,\nOverflowing multiply  and add.\nOverflowing multiplication by an integer.\nOverflowing negation.\nOverflowing next multiple of <code>other</code>.\nOverflowing reciprocal.\nOverflowing remainder for Euclidean division by an integer.\nOverflowing round. Rounds to the next integer to the …\nOverflowing round. Rounds to the next integer to the …\nOverflowing round. Rounds to the next integer to the …\nOverflowing shift left.\nOverflowing shift right.\nOverflowing signum.\nCompute the square root.\nOverflowing subtraction.\nOverflowing subtraction with an signed fixed-point number.\nOverflowing subtraction with an unsigned fixed-point …\nConverts to a fixed-point number.\nConverts a fixed-point number to another number.\nReturns the reciprocal.\nConverts a reference to the equivalent fixed-point type …\nRemainder for Euclidean division.\nRemainder for Euclidean division by an integer.\nReverses the order of the bits of the fixed-point number.\nShifts to the left by <code>n</code> bits, wrapping the truncated bits …\nShifts to the right by <code>n</code> bits, wrapping the truncated bits …\nRounds to the nearest integer, with ties rounded away from …\nRounds to the nearest integer, with ties rounded to even.\nRounds to the nearest integer, with ties rounded to even.\nRounds to the next integer towards 0.\nSaturating absolute value. Returns the absolute value, …\nSaturating addition. Returns the sum, saturating on …\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>, saturating on overflow.\nSaturating addition with an signed fixed-point number. …\nSaturating addition with an unsigned fixed-point number. …\nSaturating ceil. Rounds to the next integer towards +∞, …\nSaturating distance. Returns the distance from <code>self</code> to …\nSaturating division. Returns the quotient, saturating on …\nSaturating Euclidean division. Returns the quotient, …\nSaturating Euclidean division by an integer. Returns the …\nSaturating division by an integer. Returns the quotient, …\nSaturating floor. Rounds to the next integer towards −…\nParses an ASCII-byte slice containing decimal digits to …\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing hexadecimal digits …\nParses an ASCII-byte slice containing octal digits to …\nConverts from a fixed-point number, saturating if it does …\nCreates a fixed-point number from another number, …\nParses a string slice containing decimal digits to return a\nParses a string slice containing binary digits to return a …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing octal digits to return a …\nCompute the hypotenuse of a right triange, saturating on …\nInverse linear interpolation between <code>start</code> and <code>end</code>, …\nLinear interpolation between <code>start</code> and <code>end</code>, saturating on …\nSaturating multiplication. Returns the product, saturating …\nSaturating multiply and add. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, …\nSaturating multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, …\nSaturating multiplication by an integer. Returns the …\nSaturated negation. Returns the negated value, saturating …\nSaturating next multiple of <code>other</code>.\nSaturating reciprocal.\nSaturating remainder for Euclidean division by an integer. …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating round. Rounds to the nearest integer, with ties …\nSaturating signum. Returns a number representing the sign …\nReturns the square root, saturating on overflow.\nSaturating subtraction. Returns the difference, saturating …\nSaturating subtraction with an signed fixed-point number. …\nSaturating subtraction with an unsigned fixed-point …\nConverts to a fixed-point number, saturating if it does …\nConverts a fixed-point number to another number, …\nReturns the number of bits required to represent the value.\nReturns the number of bits required to represent the value.\nReturns a number representing the sign of <code>self</code>.\nReturns the square root.\nSubtraction with an signed fixed-point number.\nSubtraction with an unsigned fixed-point number.\nReverses the byte order of the fixed-point number.\nConverts this fixed-point number to big endian from the …\nReturns the memory representation of this fixed-point …\nCreates an integer that has a bitwise representation …\nConverts to a fixed-point number.\nConverts an owned value to the equivalent fixed-point type.\nConverts this fixed-point number to little endian from the …\nReturns the memory representation of this fixed-point …\nReturns the memory representation of this fixed-point …\nConverts a fixed-point number to another number.\nReturns the number of trailing ones in the binary …\nReturns the number of trailing zeros in the binary …\nUnbounded shift left. Computes <code>self &lt;&lt; rhs</code>, without …\nUnbounded shift right. Computes <code>self &gt;&gt; rhs</code>, without …\nUnchecked addition. Computes <code>self</code> + <code>rhs</code>, assuming …\nUnchecked multiplication by an integer. Computes <code>self</code> × …\nUnchecked subtraction. Computes <code>self</code> − <code>rhs</code>, assuming …\nReturns the absolute value using an unsigned type without …\nReturns the distance from <code>self</code> to <code>other</code> using an unsigned …\nUnwrapped absolute value. Returns the absolute value, …\nUnwrapped addition. Returns the sum, panicking on overflow.\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>, panicking on overflow.\nUnwrapped addition with an signed fixed-point number. …\nUnwrapped addition with an unsigned fixed-point number. …\nUnwrapped ceil. Rounds to the next integer towards +∞, …\nUnwrapped distance. Returns the distance from <code>self</code> to <code>other</code>…\nUnwrapped division. Returns the quotient, panicking on …\nUnwrapped Euclidean division. Returns the quotient, …\nUnwrapped Euclidean division by an integer. Returns the …\nUnwrapped division by an integer. Returns the quotient, …\nUnwrapped floor. Rounds to the next integer towards −∞,\nParses an ASCII-byte slice containing decimal digits to …\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing hexadecimal digits …\nParses an ASCII-byte slice containing octal digits to …\nConverts from a fixed-point number, panicking if the value …\nCreates a fixed-point number from another number, …\nParses a string slice containing decimal digits to return a\nParses a string slice containing binary digits to return a …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing octal digits to return a …\nCompute the hypotenuse of a right triange, panicking on …\nInverse linear interpolation between <code>start</code> and <code>end</code>, …\nLinear interpolation between <code>start</code> and <code>end</code>, panicking on …\nUnwrapped multiplication. Returns the product, panicking …\nUnwrapped multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, …\nUnwrapped multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, …\nUnwrapped multiplication by an integer. Returns the …\nUnwrapped negation. Returns the negated value, panicking …\nUnwrapped next multiple of <code>other</code>. Returns the next …\nReturns the smallest power of two that is ≥ <code>self</code>, …\nUnwrapped reciprocal. Returns reciprocal, panicking on …\nUnwrapped remainder. Returns the quotient, panicking if …\nUnwrapped remainder for Euclidean division. Returns the …\nUnwrapped remainder for Euclidean division by an integer. …\nUnwrapped remainder for division by an integer. Returns the\nUnwrapped round. Rounds to the next integer to the nearest,\nUnwrapped round. Rounds to the next integer to the …\nUnwrapped round. Rounds to the next integer to the …\nUnwrapped shift left. Panics if <code>rhs</code> ≥ the number of …\nUnwrapped shift right. Panics if <code>rhs</code> ≥ the number of …\nUnwrapped signum. Returns a number representing the sign of\nReturns the square root, panicking if the number is …\nUnwrapped subtraction. Returns the difference, panicking …\nUnwrapped subtraction with an signed fixed-point number. …\nUnwrapped subtraction with an unsigned fixed-point number. …\nConverts to a fixed-point number, panicking if it does not …\nConverts a fixed-point number to another number, panicking …\nWrapping absolute value. Returns the absolute value, …\nWrapping addition. Returns the sum, wrapping on overflow.\nAdds <code>self</code> to the product <code>a</code> × <code>b</code>, wrapping on overflow.\nWrapping addition with an signed fixed-point number. …\nWrapping addition with an unsigned fixed-point number. …\nWrapping ceil. Rounds to the next integer towards +∞, …\nWrapping distance. Returns the distance from <code>self</code> to <code>other</code>…\nWrapping division. Returns the quotient, wrapping on …\nWrapping Euclidean division. Returns the quotient, …\nWrapping Euclidean division by an integer. Returns the …\nWrapping division by an integer. Returns the quotient, …\nWrapping floor. Rounds to the next integer towards −∞, …\nParses an ASCII-byte slice containing decimal digits to …\nParses an ASCII-byte slice containing binary digits to …\nParses an ASCII-byte slice containing hexadecimal digits …\nParses an ASCII-byte slice containing octal digits to …\nConverts from a fixed-point number, wrapping if it does …\nCreates a fixed-point number from another number, wrapping …\nParses a string slice containing decimal digits to return a\nParses a string slice containing binary digits to return a …\nParses a string slice containing hexadecimal digits to …\nParses a string slice containing octal digits to return a …\nCompute the hypotenuse of a right triange, wrapping on …\nInverse linear interpolation between <code>start</code> and <code>end</code>, …\nLinear interpolation between <code>start</code> and <code>end</code>, wrapping on …\nWrapping multiplication. Returns the product, wrapping on …\nWrapping multiply and accumulate. Adds (<code>a</code> × <code>b</code>) to <code>self</code>, …\nWrapping multiply and add. Returns <code>self</code> × <code>mul</code> + <code>add</code>, …\nWrapping multiplication by an integer. Returns the …\nWrapping negation. Returns the negated value, wrapping on …\nWrapping next multiple of <code>other</code>.\nReturns the smallest power of two that is ≥ <code>self</code>, …\nWrapping reciprocal.\nWrapping remainder for Euclidean division by an integer. …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping round. Rounds to the next integer to the nearest, …\nWrapping shift left. Wraps <code>rhs</code> if <code>rhs</code> ≥ the number of …\nWrapping shift right. Wraps <code>rhs</code> if <code>rhs</code> ≥ the number of …\nWrapping signum. Returns a number representing the sign of …\nReturns the square root, wrapping on overflow.\nWrapping subtraction. Returns the difference, wrapping on …\nWrapping subtraction with an signed fixed-point number. …\nWrapping subtraction with an unsigned fixed-point number. …\nConverts to a fixed-point number, wrapping if it does not …\nConverts a fixed-point number to another number, wrapping …\n<code>FixedI128</code> with no integer bits and 128 fractional bits.\n<code>FixedI16</code> with no integer bits and 16 fractional bits.\n<code>FixedI32</code> with no integer bits and 32 fractional bits.\n<code>FixedI64</code> with no integer bits and 64 fractional bits.\n<code>FixedI8</code> with no integer bits and eight fractional bits.\n<code>FixedI128</code> with 100 integer bits and 28 fractional bits.\n<code>FixedI128</code> with 101 integer bits and 27 fractional bits.\n<code>FixedI128</code> with 102 integer bits and 26 fractional bits.\n<code>FixedI128</code> with 103 integer bits and 25 fractional bits.\n<code>FixedI128</code> with 104 integer bits and 24 fractional bits.\n<code>FixedI128</code> with 105 integer bits and 23 fractional bits.\n<code>FixedI128</code> with 106 integer bits and 22 fractional bits.\n<code>FixedI128</code> with 107 integer bits and 21 fractional bits.\n<code>FixedI128</code> with 108 integer bits and 20 fractional bits.\n<code>FixedI128</code> with 109 integer bits and 19 fractional bits.\n<code>FixedI128</code> with 10 integer bits and 118 fractional bits.\n<code>FixedI32</code> with 10 integer bits and 22 fractional bits.\n<code>FixedI64</code> with 10 integer bits and 54 fractional bits.\n<code>FixedI16</code> with 10 integer bits and six fractional bits.\n<code>FixedI128</code> with 110 integer bits and 18 fractional bits.\n<code>FixedI128</code> with 111 integer bits and 17 fractional bits.\n<code>FixedI128</code> with 112 integer bits and 16 fractional bits.\n<code>FixedI128</code> with 113 integer bits and 15 fractional bits.\n<code>FixedI128</code> with 114 integer bits and 14 fractional bits.\n<code>FixedI128</code> with 115 integer bits and 13 fractional bits.\n<code>FixedI128</code> with 116 integer bits and 12 fractional bits.\n<code>FixedI128</code> with 117 integer bits and 11 fractional bits.\n<code>FixedI128</code> with 118 integer bits and 10 fractional bits.\n<code>FixedI128</code> with 119 integer bits and nine fractional bits.\n<code>FixedI128</code> with 11 integer bits and 117 fractional bits.\n<code>FixedI32</code> with 11 integer bits and 21 fractional bits.\n<code>FixedI16</code> with 11 integer bits and five fractional bits.\n<code>FixedI64</code> with 11 integer bits and 53 fractional bits.\n<code>FixedI128</code> with 120 integer bits and eight fractional bits.\n<code>FixedI128</code> with 121 integer bits and seven fractional bits.\n<code>FixedI128</code> with 122 integer bits and six fractional bits.\n<code>FixedI128</code> with 123 integer bits and five fractional bits.\n<code>FixedI128</code> with 124 integer bits and four fractional bits.\n<code>FixedI128</code> with 125 integer bits and three fractional bits.\n<code>FixedI128</code> with 126 integer bits and two fractional bits.\n<code>FixedI128</code> with 127 integer bits and one fractional bit.\n<code>FixedI128</code> with 128 integer bits and no fractional bits.\n<code>FixedI128</code> with 12 integer bits and 116 fractional bits.\n<code>FixedI32</code> with 12 integer bits and 20 fractional bits.\n<code>FixedI16</code> with 12 integer bits and four fractional bits.\n<code>FixedI64</code> with 12 integer bits and 52 fractional bits.\n<code>FixedI128</code> with 13 integer bits and 115 fractional bits.\n<code>FixedI32</code> with 13 integer bits and 19 fractional bits.\n<code>FixedI16</code> with 13 integer bits and three fractional bits.\n<code>FixedI64</code> with 13 integer bits and 51 fractional bits.\n<code>FixedI128</code> with 14 integer bits and 114 fractional bits.\n<code>FixedI32</code> with 14 integer bits and 18 fractional bits.\n<code>FixedI16</code> with 14 integer bits and two fractional bits.\n<code>FixedI64</code> with 14 integer bits and 50 fractional bits.\n<code>FixedI16</code> with 15 integer bits and one fractional bit.\n<code>FixedI128</code> with 15 integer bits and 113 fractional bits.\n<code>FixedI32</code> with 15 integer bits and 17 fractional bits.\n<code>FixedI64</code> with 15 integer bits and 49 fractional bits.\n<code>FixedI16</code> with 16 integer bits and no fractional bits.\n<code>FixedI128</code> with 16 integer bits and 112 fractional bits.\n<code>FixedI32</code> with 16 integer bits and 16 fractional bits.\n<code>FixedI64</code> with 16 integer bits and 48 fractional bits.\n<code>FixedI128</code> with 17 integer bits and 111 fractional bits.\n<code>FixedI32</code> with 17 integer bits and 15 fractional bits.\n<code>FixedI64</code> with 17 integer bits and 47 fractional bits.\n<code>FixedI128</code> with 18 integer bits and 110 fractional bits.\n<code>FixedI32</code> with 18 integer bits and 14 fractional bits.\n<code>FixedI64</code> with 18 integer bits and 46 fractional bits.\n<code>FixedI128</code> with 19 integer bits and 109 fractional bits.\n<code>FixedI32</code> with 19 integer bits and 13 fractional bits.\n<code>FixedI64</code> with 19 integer bits and 45 fractional bits.\n<code>FixedI128</code> with one integer bit and 127 fractional bits.\n<code>FixedI16</code> with one integer bit and 15 fractional bits.\n<code>FixedI32</code> with one integer bit and 31 fractional bits.\n<code>FixedI64</code> with one integer bit and 63 fractional bits.\n<code>FixedI8</code> with one integer bit and seven fractional bits.\n<code>FixedI128</code> with 20 integer bits and 108 fractional bits.\n<code>FixedI32</code> with 20 integer bits and 12 fractional bits.")