searchState.loadedDescShard("cortex_m_rt", 0, "Startup code and minimal runtime for Cortex-M …\nRegisters stacked (pushed onto the stack) during an …\nAttribute to declare the entry point of the program\nAttribute to declare an exception handler\nReturns the argument unchanged.\nReturns a pointer to the start of the heap\nAttribute to declare an interrupt (AKA device-specific …\nCalls <code>U::from(self)</code>.\nReturns the value of the Link Register.\nReturns the value of the Program Counter.\nAttribute to mark which function will be called at the …\nReturns the value of (general purpose) register 0.\nReturns the value of (general purpose) register 1.\nReturns the value of (general purpose) register 12.\nReturns the value of (general purpose) register 2.\nReturns the value of (general purpose) register 3.\nSets the stacked value of the Link Register.\nSets the stacked value of the Program Counter.\nSets the stacked value of (general purpose) register 0.\nSets the stacked value of (general purpose) register 1.\nSets the stacked value of (general purpose) register 12.\nSets the stacked value of (general purpose) register 2.\nSets the stacked value of (general purpose) register 3.\nSets the stacked value of the Program Status Register.\nReturns the value of the Program Status Register.")